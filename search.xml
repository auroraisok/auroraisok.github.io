<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Unity连招思路其三】优化连招逻辑</title>
      <link href="/2025/01/28/%E3%80%90Unity%E8%BF%9E%E6%8B%9B%E6%80%9D%E8%B7%AF%E5%85%B6%E4%B8%89%E3%80%91%E4%BC%98%E5%8C%96%E8%BF%9E%E6%8B%9B%E9%80%BB%E8%BE%91/"/>
      <url>/2025/01/28/%E3%80%90Unity%E8%BF%9E%E6%8B%9B%E6%80%9D%E8%B7%AF%E5%85%B6%E4%B8%89%E3%80%91%E4%BC%98%E5%8C%96%E8%BF%9E%E6%8B%9B%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<p>最近做ARPG小项目，新写了一套连招逻辑，感觉要比较好用些。优点是不需要再考虑索引值什么东西了，代码很好理解，于是分享一下。</br></p><h3 id="思路分享"><a href="#思路分享" class="headerlink" title="思路分享"></a>思路分享</h3><p>我的思路是这样的，做一个连招表，连招表上最重要的新功能有两个：一个是nextCombo，即按下鼠标左键做的招式；另一个是branchCombo，即按下鼠标右键做的招式，对于伤害处理，考虑到一个动画可能会触发多段伤害，我们是用List数据结构+动画事件来配置。这个List里配置好受伤动画名称、伤害值等数据。</br><br><img src = "https://www.helloimg.com/i/2025/01/28/67986af2d7370.png"></img><br>首先我们写连招表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">[CreateAssetMenu(fileName = &quot;ComboData&quot;, menuName = &quot;Scriptable Objects/ComboData&quot;)]</span><br><span class="line">public class ComboData : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField] private string _comboName;</span><br><span class="line">    [SerializeField] private List&lt;ComboDamage&gt; _comboDamage;</span><br><span class="line">    [SerializeField] private float _coldTime;</span><br><span class="line">    [SerializeField] private ComboData _nextCombo;</span><br><span class="line">    [SerializeField] private ComboData _branchCombo;</span><br><span class="line">    [SerializeField] private DamageType _damageType;</span><br><span class="line"></span><br><span class="line">    public string ComboName =&gt; _comboName;</span><br><span class="line">    public List&lt;ComboDamage&gt; ComboDamage =&gt; _comboDamage;</span><br><span class="line">    public float ColdTime =&gt; _coldTime;</span><br><span class="line">    public ComboData NextCombo =&gt; _nextCombo;</span><br><span class="line">    public ComboData BranchCombo =&gt; _branchCombo;</span><br><span class="line">    public DamageType DamageType =&gt; _damageType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public enum DamageType</span><br><span class="line">&#123;</span><br><span class="line">    weapon,</span><br><span class="line">    punch,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[System.Serializable]</span><br><span class="line">public class ComboDamage</span><br><span class="line">&#123;</span><br><span class="line">    public string hitName;</span><br><span class="line">    public string parryName;</span><br><span class="line">    public float damage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着是最主体的连招逻辑，这里我分成多个脚本去写了（因为攻击系统比较复杂，写了几个基类脚本）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public abstract class CharacterAttackBase : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    protected Animator _animator;</span><br><span class="line">    protected bool _canAttack = true;</span><br><span class="line">    //敌人</span><br><span class="line">    [SerializeField, Header(&quot;自动锁敌距离&quot;)] private float lock_enemy;</span><br><span class="line">    protected Transform currentEnemy;</span><br><span class="line">    protected virtual void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        _animator = this.GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected virtual void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        CanAttack();</span><br><span class="line">        RotateTowardsEnemy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //判断是否能攻击</span><br><span class="line">    protected bool CanAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (_canAttack == false) return false;</span><br><span class="line">        if (_animator.AnimationAtTag(&quot;Parry&quot;)) return false;</span><br><span class="line">        if (_animator.AnimationAtTag(&quot;Hit&quot;)) return false;</span><br><span class="line">        if (_animator.AnimationAtTag(&quot;Sprint&quot;)) return false;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    //锁敌旋转</span><br><span class="line">    protected void RotateTowardsEnemy()</span><br><span class="line">    &#123;</span><br><span class="line">        //角度和距离合适</span><br><span class="line">        if (currentEnemy == null) return;</span><br><span class="line">        if (Vector3.Dot(ExpandClass.GetTransformVector3(currentEnemy.transform, this.transform), this.transform.forward) &gt; 0.73 &amp;&amp; ExpandClass.GetTransformDistance(currentEnemy.transform, this.transform) &lt;= lock_enemy)</span><br><span class="line">        &#123;</span><br><span class="line">            if (_animator.AnimationAtTag(&quot;Attack&quot;))</span><br><span class="line">                ExpandClass.RotateTowards(this.transform, currentEnemy);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public abstract class CharacterComboBase : CharacterAttackBase</span><br><span class="line">&#123;</span><br><span class="line">    protected ComboData currentCombo;</span><br><span class="line">    [SerializeField, Header(&quot;基础组合技&quot;)] protected ComboData baseCombo;</span><br><span class="line"></span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Awake();</span><br><span class="line">        currentCombo = baseCombo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //更新Combo数据</span><br><span class="line">    protected void Reset_Combo()</span><br><span class="line">    &#123;</span><br><span class="line">        _canAttack = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">using NUnit.Framework;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class PlayerCombatController : CharacterComboBase</span><br><span class="line">&#123;</span><br><span class="line">    //敌人检测</span><br><span class="line">    private Collider[] hits;</span><br><span class="line">    [SerializeField, Header(&quot;敌人检测范围&quot;)] private float enemy_detect;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Awake();</span><br><span class="line">        //敌人</span><br><span class="line">        currentEnemy = null;</span><br><span class="line">    &#125;</span><br><span class="line">    protected override void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Update();</span><br><span class="line">        EnemyDetect();</span><br><span class="line">        Attack();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //播放攻击动画</span><br><span class="line">    private void Attack()</span><br><span class="line">    &#123;</span><br><span class="line">        //不能攻击就不执行</span><br><span class="line">        if(!CanAttack()) return;</span><br><span class="line">        //combo重置</span><br><span class="line">        if (_animator.AnimationAtTag(&quot;Idle&quot;))</span><br><span class="line">            currentCombo = baseCombo;</span><br><span class="line"></span><br><span class="line">        if(GameInputManager.Instance.LeftAttack)</span><br><span class="line">        &#123;</span><br><span class="line">            if (currentCombo.NextCombo == null) return;</span><br><span class="line">            currentCombo = currentCombo.NextCombo;</span><br><span class="line">            _canAttack = false;</span><br><span class="line">            _animator.CrossFade(currentCombo.ComboName, 0.1f);</span><br><span class="line">            TimerManager.Instance.TryGetOneTimer(currentCombo.ColdTime,Reset_Combo);</span><br><span class="line">        &#125;</span><br><span class="line">        if (GameInputManager.Instance.RightAttack)</span><br><span class="line">        &#123;</span><br><span class="line">            if (currentCombo.BranchCombo == null) return;</span><br><span class="line">            currentCombo = currentCombo.BranchCombo;</span><br><span class="line">            _canAttack = false;</span><br><span class="line">            _animator.CrossFade(currentCombo.ComboName, 0.1f);</span><br><span class="line">            TimerManager.Instance.TryGetOneTimer(currentCombo.ColdTime,Reset_Combo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //敌人检测</span><br><span class="line">    private void EnemyDetect()</span><br><span class="line">    &#123;</span><br><span class="line">        hits = Physics.OverlapSphere(this.transform.position,enemy_detect,3,QueryTriggerInteraction.Ignore);</span><br><span class="line">        //找到最近的敌人</span><br><span class="line">        if (hits.Length == 0) return;</span><br><span class="line">        currentEnemy = hits[0].transform;</span><br><span class="line">        for (int i = 0; i &lt; hits.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (ExpandClass.GetTransformDistance(currentEnemy, this.transform) &gt; ExpandClass.GetTransformDistance(hits[i].transform, this.transform))</span><br><span class="line">            &#123;</span><br><span class="line">                currentEnemy = hits[i].transform;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 连招系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity错误记录】对象池bug解决</title>
      <link href="/2025/01/28/%E3%80%90Unity%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95%E3%80%91%E5%AF%B9%E8%B1%A1%E6%B1%A0bug%E8%A7%A3%E5%86%B3/"/>
      <url>/2025/01/28/%E3%80%90Unity%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95%E3%80%91%E5%AF%B9%E8%B1%A1%E6%B1%A0bug%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>两个月前，当我在做Unity音效池时，遇到神奇的bug。我手写的一个字典poolDic，刚开始好好的、包含一个名为“ATK”的key，结果呢当我调用动画事件时直接这个key消失了，我也没在外部去修改，困扰我整整两个月。</br><br>后来经过排查，发现是单例模式基类的问题，不够安全。我记得当时这个单例模式是跟唐老狮学的，老师说除了一些个别情况、这个单例模式非常安全，结果我遇到了这种“个别情况”，于是优化一下代码，把问题解决了。可以在我的“单例模式”那篇文章看到改进。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 单例模式 </tag>
            
            <tag> 对象池 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity框架】音效系统搭建</title>
      <link href="/2025/01/27/%E3%80%90Unity%E6%A1%86%E6%9E%B6%E3%80%91%E9%9F%B3%E6%95%88%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/"/>
      <url>/2025/01/27/%E3%80%90Unity%E6%A1%86%E6%9E%B6%E3%80%91%E9%9F%B3%E6%95%88%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>在游戏开发中，音效是开发者需要仔细考虑的问题。一个大型的动作游戏，一个音效可能会出现成百上千遍。试想如果让我们的系统去实例化出1000个音效，无疑会给我们电脑带来很大的负担、这就是很容易崩溃的。那么我们需要用到缓存池技术（之前的文章有记载,<a href="https://auroraisok.online/2024/12/25/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E7%BC%93%E5%AD%98%E6%B1%A0%E6%A8%A1%E5%9D%97">点我跳转</a>）。接下来我将结合缓存池技术，搭建一个简易好用的音效系统框架。</p><hr><h3 id="搭建思路"><a href="#搭建思路" class="headerlink" title="搭建思路"></a>搭建思路</h3><p>首先我们需要思考如何去搭建呢？<br>首先我们创建个空物体GamePool挂载上我们写的对象池脚本吧。<img src ="https://www.helloimg.com/i/2025/01/27/67974e34a853f.png"></img><br>然后我们去想，需要做一个音效配置表，上面可以选择我们音频文件的类型和具体的音频文件，这一步写代码时就会想到要写一个enum和List的子类了。<img src = "https://www.helloimg.com/i/2025/01/27/67974ef4d6a2e.png"></img><br>之后我们去想，需要制作预制体文件，创造个ATK预制体，挂载上我们要写的Mono脚本。那么Mono脚本里需要什么呢？</br>第一点，我们Mono脚本需要给外部留出可编辑的部分，一个是音效类型、一个是挂载ScriptsObject文件;<br>之后我们需要写几行代码，根据我们在外部编辑界面传入的音效类型、去调用该类型下的音频文件，这一步我们直接放入音效配置表里写代码。<br>最后是具体音效的播放，我们通过在动画事件里传入一个string值，从而触发GamePoolManager里的TryGetPoolItem函数，对象池加载音效文件。</p><h3 id="进行实践"><a href="#进行实践" class="headerlink" title="进行实践"></a>进行实践</h3><p>首先我们制作一个音效配置表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">using NUnit.Framework;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">[CreateAssetMenu(fileName = &quot;SoundData&quot;, menuName = &quot;Scriptable Objects/SoundData&quot;)]</span><br><span class="line">public class SoundData : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]private List&lt;Sound_Data&gt; _data;</span><br><span class="line"></span><br><span class="line">    [System.Serializable]</span><br><span class="line">    private class Sound_Data</span><br><span class="line">    &#123;</span><br><span class="line">        public SoundType soundType;</span><br><span class="line">        public AudioClip[] audioClip;</span><br><span class="line">    &#125;</span><br><span class="line">    public AudioClip GetAudioClip(SoundType type)</span><br><span class="line">    &#123;</span><br><span class="line">        //这里我在外部配置好了，List索引为0的是ATK，1是HIT，2是BLOCK，3是FOOT。如果你的跟我不一样自己改改</span><br><span class="line">        switch (type)</span><br><span class="line">        &#123;</span><br><span class="line">            case SoundType.ATK:</span><br><span class="line">                return _data[0].audioClip[Random.Range(0, _data[0].audioClip.Length)];</span><br><span class="line">            case SoundType.HIT:</span><br><span class="line">                return _data[1].audioClip[Random.Range(0, _data[1].audioClip.Length)];</span><br><span class="line">            case SoundType.BLOCK:</span><br><span class="line">                return _data[2].audioClip[Random.Range(0, _data[2].audioClip.Length)];</span><br><span class="line">            case SoundType.FOOT:</span><br><span class="line">                return _data[3].audioClip[Random.Range(0, _data[3].audioClip.Length)];</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来书写逻辑脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">//音效类型暂时写了四种</span><br><span class="line">public enum SoundType</span><br><span class="line">&#123;</span><br><span class="line">    ATK,</span><br><span class="line">    HIT,</span><br><span class="line">    BLOCK,</span><br><span class="line">    FOOT</span><br><span class="line">&#125;</span><br><span class="line">public class Sound : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private AudioSource audioSource;</span><br><span class="line">    //给外部提供可编辑的变量</span><br><span class="line">    [SerializeField]private SoundType soundType;</span><br><span class="line">    [SerializeField]private SoundData soundData;</span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        audioSource = GetComponent&lt;AudioSource&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnEnable()</span><br><span class="line">    &#123;</span><br><span class="line">        PlaySound(soundType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //播放音效</span><br><span class="line">    private void PlaySound(SoundType type)</span><br><span class="line">    &#123;</span><br><span class="line">        //这个GetAudioClip方法写在了音效编辑器里</span><br><span class="line">        audioSource.clip = soundData.GetAudioClip(type);</span><br><span class="line">        audioSource.Play();</span><br><span class="line">        StartRecycle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //音效播放0.3秒后失活回收</span><br><span class="line">    private void StartRecycle()</span><br><span class="line">    &#123;</span><br><span class="line">        TimerManager.Instance().TryGetOneTimer(0.3f, DisableSelf);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void DisableSelf()</span><br><span class="line">    &#123;</span><br><span class="line">        audioSource.Stop();</span><br><span class="line">        this.gameObject.SetActive(false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后将脚本挂载到我们的音效预制体上、预制体拖入对象池上就大功告成了<br><img src = "https://www.helloimg.com/i/2025/01/27/679751f73219d.png"></img></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
            <tag> 游戏开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C盘清理指南</title>
      <link href="/2025/01/21/C%E7%9B%98%E6%B8%85%E7%90%86%E6%8C%87%E5%8D%97/"/>
      <url>/2025/01/21/C%E7%9B%98%E6%B8%85%E7%90%86%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>今天打开电脑，发现C盘剩100GB。记得去年我的C盘还有148GB，看来需要清理一下了。最终我清理了50GB，C盘变成150GB了。</p><hr><h3>一、基础清理（50GB）</h3>最基础的清理，一般不经常清理电脑的人，清理过后电脑可能多出50GB：</br>首先打开回收站，把里边东西全清理了。其次win+R调出运行，输入%temp%,Ctrl+A全选，shift+delete全部删除。</br>效果：我一只用电脑不清理的朋友在此操作后多出50GB空间。<h3>二、C盘清理软件（35GB）</h3>市面上大多C盘清理软件都挺流氓的，清理不出来什么东西、还要VIP。这里我推荐<a href = "https://bgithub.xyz/Chuyu-Team/Dism-Multi-language/releases">Dism++</a>，一款开源软件，大小只有3.33MB。打开后在“空间清理”里进行选择就好。</br>值得一提的是，其中有个选项叫“系统还原点”，这个东西是为了防止你电脑系统损坏，相当于备份，一般不建议删除（实际删除一般也没什么事，空间不够直接删），我勾选后清理掉30GB。<h3>三、大型软件清理（80+30+10+5GB）</h3>把软件装到除C盘以外的盘，这点很重要。但又一些软件我们总是不可避免地装到了C盘。而它们就是罪魁祸首。</br><b>1.Adobe全家桶</b>，电脑上装有PS、PR、AE等等软件的人要注意，Adobe软件默认缓存是在C盘，长时间不清理会越来越大。我一同学清理缓存后，电脑成功多出80GB。</br><b>2.QQ</b>QQ我都默认装D盘，但每次清理D盘QQ还能清理掉30GB，装C盘可想而知。</br><b>3.Visual Studio</b>。同样非常占内存的东西，如果电脑上有装一定要清理。</br><b>4.Unity</b>。Unity的一些缓存文件也非常占内存</br><h3>四、手动排查（未知GB）</h3>当你win+R在运行窗口输入appdata，你会发现里边的三个文件夹里，Local和Roaming占的内存很大，自己手动判断哪些需要清理哪些不需要就好。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C盘清理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity自定义类</title>
      <link href="/2025/01/21/Unity%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB/"/>
      <url>/2025/01/21/Unity%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>在进行Unity开发时，有时我们希望能有一些便捷的函数帮助我们处理，然而Unity官方并未提供这类方法，需要我们自己写。于是本文记录一些我自己封装的方法：</br></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public static class ExpandClass</span><br><span class="line">&#123;</span><br><span class="line">    public static bool AnimationAtTag(this Animator animator, string tagName, int indexLayer = 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return animator.GetCurrentAnimatorStateInfo(indexLayer).IsTag(tagName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static float GetTransformDistance(Transform player,Transform enemy)</span><br><span class="line">    &#123;</span><br><span class="line">        return (enemy.transform.position - player.transform.position).magnitude;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Vector3 GetTransformVector3(Transform enemy,Transform player)</span><br><span class="line">    &#123;</span><br><span class="line">        return(enemy.transform.position - player.transform.position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void RotateTowards(Transform currentTrans,Transform targetTrans)</span><br><span class="line">    &#123;</span><br><span class="line">        Vector3 targetVector = new Vector3(targetTrans.position.x - currentTrans.position.x, 0, targetTrans.position.z - currentTrans.position.z);</span><br><span class="line">        Quaternion targetQua = Quaternion.LookRotation(targetVector);</span><br><span class="line">        currentTrans.rotation = Quaternion.Slerp(currentTrans.rotation, targetQua, 0.9f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 拓展工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【长按短按】Unity输入系统模块</title>
      <link href="/2025/01/20/%E3%80%90%E9%95%BF%E6%8C%89%E7%9F%AD%E6%8C%89%E3%80%91Unity%E8%BE%93%E5%85%A5%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9D%97/"/>
      <url>/2025/01/20/%E3%80%90%E9%95%BF%E6%8C%89%E7%9F%AD%E6%8C%89%E3%80%91Unity%E8%BE%93%E5%85%A5%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>寒假在做Unity小项目时，想实现一个功能：单击shift键角色冲刺、长按shift键角色疾跑，于是需要处理长按和短按的问题。在互联网上找的教程，要么是针对于老输入系统的——麻烦、代码量繁杂。要么是针对新输入系统、但不易理解、代码冗杂。于是这里分享一套自己的框架，用起来还是很顺手的，巧妙处理长按、短按。</p><h2>思路介绍</h2><img src = "https://www.helloimg.com/i/2025/01/20/678dbc9264da9.png">图片</img>我们安装新的输入系统后，创建一个输入文件、一个GameInputManager类，使用继承MonoBehaviour的单例模式基类，OnEnable时启用、OnDisable时关闭。在输入配置文件里，创建两个键位，给Sprint和Fast_Run都绑定左shift键，前者interactions添加一个tap，后者则是添加Hold。于是就有了以下代码：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.InputSystem;</span><br><span class="line">using UnityEngine.InputSystem.Interactions;</span><br><span class="line"></span><br><span class="line">public class GameInputManager : MonoSingle&lt;GameInputManager&gt;</span><br><span class="line">&#123;</span><br><span class="line">    private GameInputAction _gameInputAction;</span><br><span class="line">    //书写按键逻辑</span><br><span class="line">    public Vector2 movement =&gt; _gameInputAction.GameInput.Move.ReadValue&lt;Vector2&gt;();</span><br><span class="line">    //锁敌</span><br><span class="line">    private bool _lock = false;</span><br><span class="line">    //贴墙</span><br><span class="line">    private bool _wall = false;</span><br><span class="line">    //切武器</span><br><span class="line">    private bool _weapon = false;</span><br><span class="line">    public bool Lock</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (_gameInputAction.GameInput.Lock.triggered)</span><br><span class="line">                _lock = !_lock;</span><br><span class="line">            return _lock;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //格挡</span><br><span class="line">    public bool Parry =&gt; _gameInputAction.GameInput.Parry.IsPressed();</span><br><span class="line">    // 冲刺</span><br><span class="line">    public bool Sprint =&gt; _gameInputAction.GameInput.Sprint.triggered;</span><br><span class="line"></span><br><span class="line">    // 疾跑</span><br><span class="line">    public bool Fast_Run =&gt; _gameInputAction.GameInput.Fast_Run.IsPressed();</span><br><span class="line">    //攻击</span><br><span class="line">    public bool LeftAttack =&gt; _gameInputAction.GameInput.LeftAttack.triggered;</span><br><span class="line">    public bool RightAttack =&gt; _gameInputAction.GameInput.RightAttack.triggered;</span><br><span class="line"></span><br><span class="line">    //相机</span><br><span class="line">    public Vector2 Camera =&gt; _gameInputAction.GameInput.Camera.ReadValue&lt;Vector2&gt;();</span><br><span class="line">    //技能</span><br><span class="line">    public bool Ctrl =&gt; _gameInputAction.GameInput.Ctrl.triggered;</span><br><span class="line">    public bool Q =&gt; _gameInputAction.GameInput.Q.triggered;</span><br><span class="line">    //切换技能</span><br><span class="line">    public bool Z =&gt; _gameInputAction.GameInput.Q.triggered;</span><br><span class="line">    //贴墙</span><br><span class="line">    public bool X</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (_gameInputAction.GameInput.Lock.triggered)</span><br><span class="line">                _wall = !_wall;</span><br><span class="line">            return _wall;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //切换武器</span><br><span class="line"></span><br><span class="line">    public bool Tab</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (_gameInputAction.GameInput.Tab.triggered)</span><br><span class="line">                _weapon = !_weapon;</span><br><span class="line">            return _weapon;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private void OnEnable()</span><br><span class="line">    &#123;</span><br><span class="line">        _gameInputAction ??= new GameInputAction();</span><br><span class="line">        _gameInputAction.Enable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnDisable()</span><br><span class="line">    &#123;</span><br><span class="line">        _gameInputAction.Disable();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
            <tag> 输入系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零成本搭建在线文档网站</title>
      <link href="/2025/01/17/%E9%9B%B6%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99/"/>
      <url>/2025/01/17/%E9%9B%B6%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>先来看一下效果：<a href="https://lilidemo.zeabur.app/#/">理理的游戏策划</a></br><br>这是我的Github仓库<a href="https://bgithub.xyz/Amatsutsumi/Unity_Design_Document">游戏策划仓库</a></br></p><hr><p>起因是寒假打算用Unity做一个ARPG的游戏demo，做之前要写文档。于是我发现了docsify这个工具，并对其进行了一些改动。</br><br>关于docsify，网上的教程有很多，推荐参考官方教程进行改动。做一些简单的工作还是不错的。在使用过程中发现一些问题，比如网站打不开，原因是jsdelivr访问起来比较慢，换一下就行了。这需要对index.html以下代码进行改动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//fastly.jsdelivr.net/npm/docsify@4/lib/themes/vue.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;//fastly.jsdelivr.net/npm/docsify@4&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>除了docsify，此外还有一些工具。第一个是vitepress，难度稍微有一点，但是自定义起来要比较丰富些。其次是语雀，不需要任何基础，操作起来十分方便，很多个人和团队也喜欢用。</p><hr><p>之后就是最关键的部署问题了，方案其实挺多的。我喜欢用github自带的github pages做网站，如果感觉太慢的话，搭配上zeabur、netlify、vercel、cloudflare等赛博大善人，访问速度会大幅提升，而且不需要花钱。</br><br>其次你还可以去白嫖serv00虚拟主机，我喜欢serv00最重要的是可以支持ssh远程连接，用来做wordpress站点、搭建Alist网盘很不错，而且由于机器在波兰你甚至可以搭建节点，还是很丰富的。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> docsify </tag>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github上传文件</title>
      <link href="/2025/01/17/github%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
      <url>/2025/01/17/github%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>22年高三上网课期间，我接触了github，然而当时我没有任何技术力，一直到24年我甚至不知道怎么通过git往github上上传文件，每次上传就会报错O_o。时隔多年。我已经能熟练地往github上上传东西了，但是身边还有很多小伙伴不知道怎么往Github上上传文件，于是写下本文。</p><hr><h3>1.利用github网站直接上传文件</h3>github自带文件上传窗口，很简单，只需要拖拽或者选择文件就好，但是有限制，我记得单个文件最大不能超过100MB，一次最多上传文件数有限制，看似窗口化很方便，实则一点也不方便。<h3>2.通过ssh+git上传文件</h3>这应该是最常用的上传文件方式了。首先电脑上需要安装Git这个软件，右键git bash配置好你的账户：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email  useremail@qq.com</span><br></pre></td></tr></table></figure><p>接下来在你的github账号里新建一个仓库。有时候github.com这个域名打不开，这里我推荐用bgithub.xyz这个镜像站，也是可以的。创建好仓库后需要有一对ssh秘钥。这东西是在git bash里生成的，详细可以参考<a href="https://www.cnblogs.com/yuqiliu/p/12551258.html">别人的文章</a></br><br>另外呢，有时候我们有多个github账号（就比如我，有时要管理这个网站、有时管理萤光小站，需要频繁切换ssh），这时就需要保存好不同的ssh了。可以把ssh比作成钥匙，github比作成仓库大门，开哪扇门用哪个钥匙。</br></p><p>接下来在本地要上传到Github的文件夹执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init //这句话是为了初始化</span><br><span class="line">git add . //这句是将全部文件都加到初始化的git目录里</span><br><span class="line">git commit -m &quot;写什么都行&quot; //给你要提交的文件写个注释</span><br><span class="line">git branch -M main //这就是切换到main分支</span><br><span class="line">git remote add origin git@github.com:改成你自己的.git // 这句是连接远程仓库</span><br><span class="line">git pull origin main --allow-unrelated-histories //这句是非必要的，有时候一个仓库多个人维护，你的版本落后了就会报错，再执行这句</span><br><span class="line">git push -u origin main //把本地项目推送到main分支</span><br></pre></td></tr></table></figure><p>若是有什么报错，就用AI搜一搜就好。想当年我只是想上传个Narcissu网页版，耗了很大的功夫再上传上去，看来我的智力如今提升了hhh</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自学Unity的瓶颈</title>
      <link href="/2025/01/14/%E8%87%AA%E5%AD%A6Unity%E7%9A%84%E7%93%B6%E9%A2%88/"/>
      <url>/2025/01/14/%E8%87%AA%E5%AD%A6Unity%E7%9A%84%E7%93%B6%E9%A2%88/</url>
      
        <content type="html"><![CDATA[<p>从零基础开始学习Unity到现在，已经过去半年了。我的Unity和编程水平，自己评测的话只能算作刚入门的阶段。在自学过程中，遇到了各种各样的问题，能解决的我都独自解决了，不能解决的令人困惑。</p><hr><h3>自学的困境</h3>一方面是缺乏指导吧，这种东西自己摸索起来还是很有难度的，此前没有任何基础，只能全凭自己上网搜资料自学。我在跟完唐老狮和鬼鬼鬼ii的课程后，确实感到学到了很多，但接下来的学习目标是什么、该如何进行？很是疑惑。</br>同时，本身需要兼顾学业，我的专业和游戏开发算是没有任何关系了，学校里的老师也没有研究游戏开发等方向的，身边人更是没有，某种意义上来说也算医学院的“孤勇者”了（笑哭）。</br>想要自己做一个ARPG项目，然而没有一个系统的想法和方案，不知道怎么做，是做《师父》一样的拳拳到肉、还是《只狼》一样的弹刀处决、还是做其它的?怎么做UI系统、要不要做背包系统、要不要有终结技、要不要加入技能系统...各种想法涌入脑中，感到一团乱麻，于是项目迟迟没有开始做，卡到了策划这一步。同时总是找不到合适的素材，总感觉现有的素材做项目、看起来怪怪的。</br>另一方面，家长本身对这方面也不是太支持。实际上也很好理解，毕竟环境如此。不过既然我学半年了、和去年刚开始学起来做比较，绝对是要比零基础强上许多的，所以也继续做下去。<hr>我感觉，某种意义上学习可以比喻成赛马。赛马需要什么，不光需要一匹勤奋能跑的马，还需要一个驾驭马儿、指引方向的好主人，同时还需要参赛必备的一些道具。而我现在面临的最大困境，则是没有一匹驾驭马儿、指引方向的好主人，于是不知道往哪里跑。</br>同时我想起来了去年，当时零基础的我参与国产Gal《苍空的彼端》开发，负责分镜脚本。我能感觉到，有了方向和目标后，学习、工作起来效率会很高，我只需要按组长要求、写对应的分镜脚本就好了，速成renpy引擎。同时明白到，游戏开发不只需要勤奋、热爱，游戏团队并不能只有程序，策划、美术也是非常非常重要。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【怪物AI设计】敌人不规则移动</title>
      <link href="/2025/01/11/%E3%80%90%E6%80%AA%E7%89%A9AI%E8%AE%BE%E8%AE%A1%E3%80%91%E6%95%8C%E4%BA%BA%E4%B8%8D%E8%A7%84%E5%88%99%E7%A7%BB%E5%8A%A8/"/>
      <url>/2025/01/11/%E3%80%90%E6%80%AA%E7%89%A9AI%E8%AE%BE%E8%AE%A1%E3%80%91%E6%95%8C%E4%BA%BA%E4%B8%8D%E8%A7%84%E5%88%99%E7%A7%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>最近有空时在学做怪物AI设计，于是记录一下不规则移动。</p><h2>怪物AI设计常见思路</h2>目前Unity制作怪物AI主要有两种方案，第一类是有限状态机，之前写过文章介绍过;第二类是行为树，Unity的一个插件。综合对比，状态机纯靠代码实现、是免费的，缺点是状态复杂、比较难以理解，状态多起来的时候会变得比较难以维护;行为树是靠图形化界面+代码实现的，缺点是付费插件、略微耗性能。其实我么手写的有限状态机就是行为树逻辑的体现。有限状态机实现AI移动，我之前已经实现过了（可以参考我前面写的文章）；这里我用的行为树，插件可以在论坛aurorayh.asia获取。（仅学习使用）<h2>行为树实现</h2>这里我们自己写一个节点，继承行为树为我们封装好的Action类，EnemyMovementController和EnemyCombatController类是我自己写的，前者提供了SetAnimation方法，用来设置敌人移动速度；后者则是写了个GetAttackCommand方法来接收攻击指令，还有一个SetAttackCommand方法提供给外部、用来分发攻击指令。ExpandClass类是我自己手写的一些方法。我们通过FreeMoveIndex+switch...case语句，使敌人不规则移动，通过actionTimer改变动作时间，防止敌人一直处于一个状态不变。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line">using BehaviorDesigner.Runtime;</span><br><span class="line">using BehaviorDesigner.Runtime.Tasks;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Collections;</span><br><span class="line"></span><br><span class="line">public class AIFreeMoveACtion : Action</span><br><span class="line">&#123;</span><br><span class="line">    private EnemyMovementController moveController;</span><br><span class="line">    private EnemyCombatController combatController;</span><br><span class="line">    private int FreeMoveIndex;</span><br><span class="line">    private int lastIndex;</span><br><span class="line">    private float actionTimer = 2f;</span><br><span class="line">    public override void OnAwake()</span><br><span class="line">    &#123;</span><br><span class="line">        moveController = this.GetComponent&lt;EnemyMovementController&gt;();</span><br><span class="line">        combatController = this.GetComponent&lt;EnemyCombatController&gt;();</span><br><span class="line">        FreeMoveIndex = Random.Range(0, 3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override TaskStatus OnUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        //接收到攻击指令就结束了</span><br><span class="line">        if (combatController.GetAttackCommand())</span><br><span class="line">            return TaskStatus.Success;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            //时间管理器，让10秒后自动设置为攻击</span><br><span class="line">            if(ExpandClass.GetTransformDistance(this.transform,EnemyManager.Instance().GetPlayer())  &gt; 8f)</span><br><span class="line">            &#123;</span><br><span class="line">                moveController.SetAnimation(0f, 1f);</span><br><span class="line">            &#125;</span><br><span class="line">            if(ExpandClass.GetTransformDistance(this.transform, EnemyManager.Instance().GetPlayer()) &lt; 8f &amp;&amp; ExpandClass.GetTransformDistance(this.transform, EnemyManager.Instance().GetPlayer()) &gt; 3f)</span><br><span class="line">            &#123;</span><br><span class="line">                FreeMove();</span><br><span class="line">                UpdateIndex();</span><br><span class="line">            &#125;</span><br><span class="line">            if (ExpandClass.GetTransformDistance(this.transform, EnemyManager.Instance().GetPlayer()) &lt; 3f &amp;&amp; ExpandClass.GetTransformDistance(this.transform, EnemyManager.Instance().GetPlayer()) &gt; 0f)</span><br><span class="line">            &#123;</span><br><span class="line">                moveController.SetAnimation(-1f, -1f);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return TaskStatus.Running;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void FreeMove()</span><br><span class="line">    &#123;</span><br><span class="line">        switch (FreeMoveIndex)</span><br><span class="line">        &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                moveController.SetAnimation(-1f, 0f);</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                moveController.SetAnimation(0f, 0f);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                moveController.SetAnimation(1f,0f);</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateIndex()</span><br><span class="line">    &#123;</span><br><span class="line">        actionTimer -= Time.deltaTime;</span><br><span class="line">        if (actionTimer &lt; 0f)</span><br><span class="line">        &#123;</span><br><span class="line">            UpdateTwo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateTwo()</span><br><span class="line">    &#123;</span><br><span class="line">        lastIndex = FreeMoveIndex;</span><br><span class="line">        FreeMoveIndex = Random.Range(0, 3);</span><br><span class="line">        if (FreeMoveIndex == lastIndex)</span><br><span class="line">        &#123;</span><br><span class="line">            FreeMoveIndex = Random.Range(0, 3);</span><br><span class="line">        &#125;</span><br><span class="line">        actionTimer = 2f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>至于界面部分就更简单了，任何学过行为树的人都知道，如果你没有学过行为树的话，可以去b站搜视频看，有一个2019年的视频，虽然很老了但同样很适用。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 怪物AI </tag>
            
            <tag> 行为树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity之单例模式基类</title>
      <link href="/2025/01/09/Unity%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E5%9F%BA%E7%B1%BB/"/>
      <url>/2025/01/09/Unity%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E5%9F%BA%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>最近在学习Unity程序框架，于是我来记录一下单例模式基类</p><hr><p>单例模式基类是什么？就是通过写一个基类脚本、再用其他脚本继承基类脚本实现功能的一种方式，下面是一个简单的基类脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class BassManager&lt;T&gt; where T:class,new()</span><br><span class="line">&#123;</span><br><span class="line">    private static T instance;</span><br><span class="line">    //注意这里我们没有私有化构造函数，其实是不必要的，你知道我们在用单例模式就不会new一个实例了。</span><br><span class="line">    public static T Instance</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if(instance == null)</span><br><span class="line">                instance = new T();</span><br><span class="line">            return instance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来我们写的脚本，只需要继承这个单例模式基类，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class Test: BassManager&lt;Test&gt;</span><br><span class="line">&#123;</span><br><span class="line">    public void Speak()</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;我调用了方法&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后我们在使用Test脚本想调用方法、又不想创建新实例（用单例模式）时，就只需要Test.Instance().Speak()<br>潜在的问题，是多线程</p><hr><p>此外还写了两种单例模式基类，一类是继承MonoBehaviour的，一类是没继承的。<br>这里我稍微解释一下关于“lock”和“自动式挂载”的问题。首先是lock锁，lock锁的存在是为了解决多线程访问的问题。</br><br>我的建议是，继承Mono的脚本就不用加lock了，因为Unity给我们制定好了规则，不会出现多线程访问的问题；不继承Mono的脚本就加上lock。</br><br>关于“自动式挂载”，你可能见到，有的继承了Mono的代码写法和我不一样，它们会多出一个Awake方法。我感觉我的代码更好一些，因为会自动挂载脚本，大家辩证看待、互相学习就好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class SingleMono&lt;T&gt; : MonoBehaviour where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    //这个是继承MonoBehaviour的（我发现这个不是最安全的，可能会线程泄露，请继续阅读我25.1.28补充的单例模式）</span><br><span class="line">    private static T instance;</span><br><span class="line">    public static T Instance()</span><br><span class="line">    &#123;</span><br><span class="line">        if(instance == null)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject go = new GameObject(typeof(T).ToString());</span><br><span class="line">            //过场景不移除</span><br><span class="line">            DontDestroyOnLoad(go);</span><br><span class="line">            instance = go.AddComponent&lt;T&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        return instance;      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没继承的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public class SingletonBase&lt;T&gt; where T : class, new()</span><br><span class="line">&#123;</span><br><span class="line">    private static T instance;</span><br><span class="line">    protected static readonly object _lock = new object();</span><br><span class="line">    public static T GetInstance()</span><br><span class="line">    &#123;</span><br><span class="line">        if (instance == null)</span><br><span class="line">        &#123;</span><br><span class="line">            lock(_lock)</span><br><span class="line">            &#123;</span><br><span class="line">                if (instance == null)</span><br><span class="line">                &#123;</span><br><span class="line">                    instance = new T();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            return instance;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><b>2025.1.28更新</b><br>我发现继承Mono的单例模式基类不安全、有隐患，于是又写了一个。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class MonoSingleTwo&lt;T&gt; : MonoBehaviour where T : MonoSingleTwo&lt;T&gt;</span><br><span class="line">&#123;</span><br><span class="line">    private static T _instance;</span><br><span class="line">    private static object _lock = new object();</span><br><span class="line"></span><br><span class="line">    public static T MainInstance</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (_instance == null)</span><br><span class="line">            &#123;</span><br><span class="line">                lock (_lock)</span><br><span class="line">                &#123;</span><br><span class="line">                    _instance = FindObjectOfType&lt;T&gt;() as T; //先去场景中找有没有这个类</span><br><span class="line"></span><br><span class="line">                    if (_instance == null)//如果没有，那么我们自己创建一个Gameobject然后给他加一个T这个类型的脚本，并赋值给instance;</span><br><span class="line">                    &#123;</span><br><span class="line">                        GameObject go = new GameObject(typeof(T).Name);</span><br><span class="line">                        _instance = go.AddComponent&lt;T&gt;();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return _instance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    protected virtual void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        if (_instance == null)</span><br><span class="line">        &#123;</span><br><span class="line">            _instance = (T)this;</span><br><span class="line">            DontDestroyOnLoad(gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private void OnApplicationQuit()//程序退出时，将instance清空</span><br><span class="line">    &#123;</span><br><span class="line">        _instance = null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity之ACT游戏开发记录</title>
      <link href="/2025/01/03/Unity%E4%B9%8BACT%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/01/03/Unity%E4%B9%8BACT%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>之前一直想做一款ACT游戏demo，可惜市面上没找到合适的教程。求人求神不如求己，于是我决定自己开发一款ACT游戏demo，于是记录一下自己的思路。</p><hr><h2>游戏目标</h2>游戏打算从简单开始设计、慢慢变得更复杂，我的目标就是做出类似于《巫兔》这种，仿《只狼》的ACT游戏。<h2>开发记录</h2><b>1.相机部分。</b>首先是关于相机部分，配上InputSystem，写一个GameInputManager类用于管理我们的输入，把GameInputManager写成一个单例，通过鼠标移动控制相机旋转，同时用athf.Clamp设置相机上下看的范围，写一个方法通过鼠标滚轮控制相机与角色距离，实现玩家移动方向朝向相机。</br>我觉得后续应该会再写一套相机系统，一套索敌用的。因为《巫兔》里打Boss时，相机是不能旋转的，是固定在角色身后的某一方位的，后续再写这个功能。应该再写一个脚本，动态添加相机系统（因为我要写两套）。<p><b>2.角色移动。</b>角色移动我采用的八方向移动+RootMotion，之前踩的坑已经在博客里写过，主要是处理旋转上的逻辑。同时给Animator组件写了个拓展函数，拓展方法AnimationAtTag(string name ,int layerIndex &#x3D; 0),如果当前动画的标签是name就返回true,不是就返回false，主要用于处理一些逻辑，比如角色在受伤动画下、是不能随相机旋转的，只有AnimationAtTag(“Move”)才能实现跟随相机旋转。</br></p><p><b>3.角色闪避。</b>当idle状态下，按下shift会向前翻滚，Run状态下配合方向键做出不同翻滚动作。判断方向就是看我们输入的Vector2向量的x、y值，比如向右翻滚，需要HorizontalSpeed &gt;0f,如果是按下WD+Shift呢，也有考虑，做出向前方翻滚的动作，控制好Vector2的变量就好。</br><br><img src = "https://www.helloimg.com/i/2024/12/14/675d091acb780.png">动画状态机</img></p><p><b>连招系统。</b>连招实际上是不同动画的组合，这里我借鉴了up主鬼鬼鬼ii的部分连招思路，首先创建两个类，一个是ComboData，配置以下数据: 招式动画名称、招式动画伤害、敌人被这个招式打到的受伤动画的名字、敌人对这个动画格挡动画的名字。接着创建一个类叫Combo,提供游戏方法对ComboData进行管理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">[CreateAssetMenu(fileName = &quot;ComboData&quot;, menuName = &quot;Scriptable Objects/ComboData&quot;)]</span><br><span class="line">public class ComboData : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Header(&quot;招式名称&quot;)] private string comboName;</span><br><span class="line">    [SerializeField, Header(&quot;招式伤害&quot;)] private int comboDamage;</span><br><span class="line">    [SerializeField, Header(&quot;被招式受击名称&quot;)] private string[] hitName;</span><br><span class="line">    [SerializeField, Header(&quot;被招式格挡名称&quot;)] private string[] parryName;</span><br><span class="line">    [SerializeField, Header(&quot;招式冷却时间&quot;)] private float coldTime;</span><br><span class="line">    [SerializeField, Header(&quot;这段攻击与目标的最佳距离&quot;)] private float _comboOffset;</span><br><span class="line"></span><br><span class="line">    public string ComboName =&gt; comboName;</span><br><span class="line">    public int ComboDamage =&gt; comboDamage;</span><br><span class="line">    public string[] HitName =&gt; hitName;</span><br><span class="line">    public string[] ParryName =&gt; parryName;</span><br><span class="line">    public float ColdTime =&gt; coldTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>技能编辑器核心</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">using NUnit.Framework;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using Unity.Burst.Intrinsics;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">[CreateAssetMenu(fileName = &quot;Combo&quot;, menuName = &quot;Scriptable Objects/Combo&quot;)]</span><br><span class="line">public class Combo : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    //显示可编辑的招式</span><br><span class="line">    [SerializeField]private List&lt;ComboData&gt; _combo = new List&lt;ComboData&gt;();</span><br><span class="line"></span><br><span class="line">    public string TryGetComboName(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ComboName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获得受伤动画名称</span><br><span class="line">    public string TryGetHitName(int index,int hitIndex)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].HitName[hitIndex];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获得格挡动画名称</span><br><span class="line">    public string TryGetParryName(int index,int hitIndex)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ParryName[hitIndex];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //获得招式伤害</span><br><span class="line">    public int TryGetComboDamage(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ComboDamage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public float TryGetColdTime(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if(_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ColdTime;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //获得招式动画数量</span><br><span class="line">    public int TryGetComboCount() =&gt; _combo.Count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于连招这方面的处理，先声明一个index作为招式的索引，再声明一个bool类型的方法CanAttackInput()，用于判断是否可以进行攻击输入。如果为true的话，当按下鼠标左键（攻击键）时，index会++，播放下一段动画。</br><br>那么CanAttackInput()这个方法怎么写？首先，当AnimationAtTag(“Move”)——角色在移动时候可以攻击（我把Idle动画的标签也改成了Move）;然后，动画在过渡状态时不能攻击（animator.IsInTransition）——因为我发现，角色在待机动画向翻滚动画过渡时进行攻击，会发生抽搐现象。最后呢，当前动画播放进度超过60%就能攻击了。</br><br>最后处理连招索引的问题，比如角色攻击了一下，长时间不操作、下次攻击也应该从第一段攻击开始，currentIndex需要归为0了。我的思路是，当动画播放完、索引值就归为0;连招是只能在动画的60%-100%这个区间触发的。</br><br>展示代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">using GGG.Tool;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class PlayerCombo : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private Animator animator;</span><br><span class="line">    [SerializeField,Header(&quot;角色组合技&quot;)]private Combo currentCombo;</span><br><span class="line">    [SerializeField, Header(&quot;技能失效时间&quot;)] private float outTime = 1.4f;</span><br><span class="line">    //当前招式索引值</span><br><span class="line">    private int currentIndex = 0;</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        Attack();</span><br><span class="line">        Reset();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否可以攻击输入</span><br><span class="line">    private bool CanAttackInput()</span><br><span class="line">    &#123;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Move&quot;) &amp;&amp; !animator.IsInTransition(0))</span><br><span class="line">            return true;</span><br><span class="line">        if(animator.GetCurrentAnimatorStateInfo(0).normalizedTime &gt;= 0.6f)</span><br><span class="line">            return true;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 攻击逻辑书写</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private void Attack()</span><br><span class="line">    &#123;</span><br><span class="line">        //不能攻击就别执行逻辑了</span><br><span class="line">        if (CanAttackInput() == false)</span><br><span class="line">            return;</span><br><span class="line">        if(GameInputManager.Instance().attack)</span><br><span class="line">        &#123;</span><br><span class="line">            animator.CrossFade(currentCombo.TryGetComboName(currentIndex), 0.1f);</span><br><span class="line">            currentIndex++;</span><br><span class="line">            outTime = 999.4f;</span><br><span class="line">        &#125;</span><br><span class="line">        if(currentIndex == currentCombo.TryGetComboCount())</span><br><span class="line">        &#123;</span><br><span class="line">            currentIndex = 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Reset()</span><br><span class="line">    &#123;</span><br><span class="line">        if(animator.GetCurrentAnimatorStateInfo(0).normalizedTime &gt;= 0.95f)</span><br><span class="line">            currentIndex = 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><b>12.14优化移动逻辑。</b><br><img src = "https://www.helloimg.com/i/2024/12/14/675d57f01b964.png">优化</img><br>这里把状态机优化了一下，把原来的翻滚动画融合成一个混合树，idle和run也融合成一个混合树，把HasInput参数取消掉了，相机旋转部分的逻辑稍微改变，当动画在move状态且输入不等于Vector2.zero时可以跟随相机旋转。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 技能编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年度总结</title>
      <link href="/2024/12/30/2024%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2024/12/30/2024%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>看到群友提到，于是突然意识到，后天就是2025年了，于是写一写年度总结吧。</p><hr><p>总的来说，2024年对我来说还是比较重要的一个年份，从年初到年末自己发生了很多变化，不过这些变化是偏好的：变得更成熟、更冷静了，更加独立了。</br><br>2024年初的我，总是处在焦虑迷茫、精神内耗中，精神状态和心理状态堪忧——当然这都是年初的事情了。感觉大概10-11月份期间，我就像突然长大了好多岁，已经不会再迷茫、再焦虑、内耗和emo了；我看待事物，也是慢慢有了自己的见解，不是只听别人说。慢慢有了自己的规划和思考，不再“随大流”；我能专心下来做属于我自己的事情，面对问题我也冷静了许多、而不是再逃避。等等许多，让我明显感觉到我的层次貌似又上升了一个阶段。</br></p><hr><p>在知识方面，我24年相比以往还是有很大进步的，我开始认真学习了C#编程语言、在7月份开始自学Unity，并已经坚持到现在了。我的个人博客也发生了很大的变化，以前我喜欢写一些自己的思考、生活的琐事，现在打开基本都是Unity、前端等东西，gal测评都没怎么写过，好处是我什么时候忘了东西、不会了能看我自己写的博客，我完全当成笔记来记录东西。此外，今年还学习了一些go、web前端、视频剪辑的知识(说实话没好好学，因为我主要学习方向现在还是Unity和C#)。对于Unity这块吧，我9-11月份学得最勤奋，现在入门了反而变懒了，主要鬼哥(up主鬼鬼鬼ii)的课太难学了——实际是我基础比较差，我才刚开始学编程不久。</br><br>今年倒还自学了些数据结构与算法：栈、队列、单向链表、双向链表、字典、哈希表、List、动态数组、递归递推、冒泡排序、汉诺塔…其中学链表和递归感觉比较吃力。今年我的老师主要有唐老狮(教我C#和Unity)、鬼哥(教我Unity开发动作游戏)、pink老师(带我复习html和css)、一爸(NowPaper老师，教我做连招)、晴天呼呼(他的Unity收藏夹很实用)、离忧夏天(教我C#数据结构)、木子喵(我年末才开始跟他学算法)、英雄哥(英雄哥教你学C++)、花间莉萝(教我renpy和Unity制作MMD)、丑萌气质狗(就是他带我入门C#)、打工人小祺(教我好多Unity实用知识)、IGB(教我Unity实用知识)、育界(我没买他家课，但他家老师帮我免费做了规划)、爱打篮球的编程up主(带我入门web前端)、Kurt(教我blender，不过我没学完也没时间了)……</br><br>统计不完全，我只能说，我的老师全来自互联网，尽管素未谋面、但是教会我很多。最不离不弃的是Kimi，我每次遇到问题都问它，他还夸我聪明。</p><hr><p>在学校里，今年我倒留级到大一了，不过我倒很平静，我刚上大一时状态很不好，什么也没学会，现在我想只要我不挂科就万事大吉了hh，再上大一还是有学习的(说实话我就考前复习，平常学Unity)。我在学校除了上课、就是坐宿舍捣鼓电脑，后来迷上了打求生之路）。</br><br>今年倒是捣鼓出来一些东西，做了个论坛网站、用serv00主机搭建了两个网站，还有我的萤光小站(明年再维护)，亚托莉机器人。今年倒是加入了国产Gal制作组PYGMA制作组，参与制作了游戏《苍空的彼端》，用renpy引擎开发的，我是负责分镜脚本的，这么说我还算是个国G制作人员。回忆制作这部作品的过程感觉不算什么愉快的事情，我算是比较独立独行的人，总想着一个人做完工作。今年年初倒用light.vn引擎做了个小作品玩，不过没有大肆宣传，毕竟素材都是解包的其他游戏的，我就抱着学习的态度去做做。</br></p><hr><p>今年玩的gal作品，要说印象最深的当属《すみれ》，我最喜欢的一部之一，其它印象比较好的是《装甲恶鬼村正》和“壳虚天”系列，总的来说没怎么玩，我也没足够的时间。</p><hr><p>我觉得大概是因为过去的一些不好的经历吧，对现在的我最终产生了正面的影响。我感受到身边的人、社会环境很焦虑、迷茫，我自己现在反而不受影响了，从来不焦虑、从来不内耗和emo了，总是专注做自己的事，更偏向以自我为中心了。总结2024这一年，我总是觉得自己长大了好多岁，突然成长了好多，这是好事。</br><br>有人问我，你最后悔、遗憾的是什么？我说，我从来不存在遗憾和后悔，过去的经历塑造了现在的我，否定过去相当于否定现在的自己，我从来没有遗憾和后悔。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2024年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【算法笔记】汉诺塔问题</title>
      <link href="/2024/12/30/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/"/>
      <url>/2024/12/30/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>起因是某天刷b站，想起来自己还没把up主离忧夏天的C#数据结构看完，结果意外发现了另一位up主木子喵neko，虚拟up+可爱声音讲解数据结构与算法，于是跟着看了。我自身对知识有比较强的分享欲和记录欲（因为我发现我不记笔记总是会忘掉），于是记录一下木子喵算法小课堂第一课：汉诺塔问题。用我最熟悉的C#语言来写。</p><hr><h2>问题介绍</h2>汉诺塔问题是一个经典的递归问题，源自一个古老的印度传说。在这个问题中，我们有三根柱子和一系列不同大小的圆盘，这些圆盘最初按大小顺序堆叠在一根柱子上。目标是将所有圆盘移动到另一根柱子上，遵循两个规则：一次只能移动一个圆盘，且在移动过程中较大的圆盘不能放在较小的圆盘上面。***<h2>解题思路</h2>这道题主要思想还是递归（说实话我现在递归还学得挺烂的），我们把柱子做好标记：A柱是起始柱，B柱是中间柱，C柱是目标柱。</br><img src = "https://i-blog.csdnimg.cn/blog_migrate/af10316711ad5e083d41baa7ed6487ad.gif">形象的图片</img>我们假设有n个圆盘，从上到下编号为1-n,我们先假设我们通过某种手段，把上面的n-1个圆盘搬到了B柱子，接下来我们把A中剩下的一个盘子搬到了C</br>那么现在的情况是什么？B柱变成起始柱了，A柱变成中间柱了，按照上面的方法，我们把n-2个圆盘移动到了A柱，B柱剩下的圆盘移动到了C柱，于是A柱又变成起始柱、B柱变成中间柱...以此类推，最后把n个圆盘都搬完了。</br>最后越搬越少，只剩下一个圆盘时，把这个圆盘放到C柱就好了。***<h2>代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace ConsoleDesktop</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            HanoiTower hanoi = new HanoiTower();</span><br><span class="line">            int sum = hanoi.hanoiTowerSum(3, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;);</span><br><span class="line">            Console.WriteLine(&quot;总移动次数：&#123;0&#125;&quot;, sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class HanoiTower</span><br><span class="line">    &#123;</span><br><span class="line">        private void hanoiMove(char x, char y)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;&#123;0&#125; -&gt; &#123;1&#125;&quot;, x, y);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public int hanoiTowerSum(int cnt, char a, char b, char c)</span><br><span class="line">        &#123;</span><br><span class="line">            if(cnt == 1)</span><br><span class="line">            &#123;</span><br><span class="line">                hanoiMove(a, c);</span><br><span class="line">                return 1;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                int sum = 0;</span><br><span class="line">                sum += hanoiTowerSum(cnt - 1, a, c, b);//步骤1</span><br><span class="line">                hanoiMove(a, c); sum += 1;//步骤2</span><br><span class="line">                sum += hanoiTowerSum(cnt - 1, b, a, c);//步骤3</span><br><span class="line"></span><br><span class="line">                return sum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 汉诺塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与《水仙》</title>
      <link href="/2024/12/27/%E4%B8%8E%E3%80%8A%E6%B0%B4%E4%BB%99%E3%80%8B/"/>
      <url>/2024/12/27/%E4%B8%8E%E3%80%8A%E6%B0%B4%E4%BB%99%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>今天在和朋友聊天时，朋友说我变化好大。我电脑上的QQ音乐正好在播放《水仙》专辑的曲子，于是想起了以片冈智为代表的的猫猫社的《水仙》系列作品，对我倒是有一定的影响的。</p><hr>最先接触《水仙》这部作品，是在一个Q群的精华消息看到：“网页版玩Galgame《水仙》，链接xxxxx”，当时是22年，我读高二，点进去玩。最先多是不太理解，只是能感到作品氛围的悲伤吧，草草玩了第一部作品。<hr>真正开始有所感触、并认真体验《水仙》全系列，是在23年上大学后。当时高考结束，自己在专业上与家里人产生分歧，当时诊出心理疾病、闹得厉害，算是我到现在最不如意的一年。23年经历了很多事，再玩《水仙》时，就很有感触了：对家人的愧疚感、对死亡的不现实感、负罪感等等，算是感同身受。印象深刻的是玩片冈智的小短篇《1980》和《1993》时，因为是片冈智写得确确实实发生在他身边的故事，感觉共鸣感挺强的。</br>要说我最喜欢的一部，应该是水仙十周年纪念版的《水仙：堇》了吧，这作是最有感触和代入感的一部，因为感觉，故事的主人公高坂堇和我真得太像了，玩起来满是无力感和悲伤吧。当时我状态最差，也经常打开这部作品玩，可以说，高坂堇算是我过去人生的一个缩影。</br>另外就是《水仙：堇》的姊妹作《すみれ》，实际上我是把这两部看成一部作品的。玩《すみれ》给我带来了一定的思考，也是因为这部作品成为了猫猫粉。从作品中的主角身上，我能看到自己过去的影子。初芝堇代表的是孤独、emo时的我，佐佐木雏姬代表痛苦与纠结的我，而明里代表的则是受了挫折、逃避现实的我，男主角健二代表的则是最普通而又真实的我。玩的时候还是很有共鸣的，直到现在我都喜欢把这部偏冷门的作品推给别人玩。</br>《すみれ》这部作品很多玩过的人不太理解、感觉云里雾里的。然而我觉得这算是片冈智的独特魅力了，《すみれ》这部作品，没有类似经历和情感的比较难懂，片冈智想传达的东西不太能被理解、表达出来也比较困难，因此也是《すみれ》被诟病的一部分原因。<hr>忘了自身的转变是从什么时候开始的了，倒是身边很多人说我变化很大，夸我变得更成熟、冷静了。我觉得从猫猫社的作品里能学到很多东西吧，一方面是不要轻易否定自己，猫猫社总喜欢刻画笨蛋的、普通的、不受欢迎的、孤独自卑的、有缺陷的角色，但这些角色身上却总能发出属于自己的光芒。感触最深的大概是《银色》里冬天绽放的菖蒲花吧，让我想起一首诗——苔花如米小，也学牡丹开。</br>另一方面能学到的，就是管理好自己的情绪、认清自己吧。比如《水仙》里总避不开的话题——死亡，又该如何看待？玩完《水仙》后，感觉对一些事情能更加冷静，而不是情绪化了。</br>第三方面，从猫猫社的作品里能学到一些为人处世的东西。《水仙》里的角色明里说过，不要说“对不起”，要说“谢谢”，这句话感觉受用至今吧。同样还是明里这个角色，真正标志其成熟的，便是不再逃避现实、不在困扰于过往，人最终还是向前看。</br><hr>此外能学到的东西还有很多很多，感觉主要和片冈智的人生阅历有关吧，看片冈智的一生，搞过乐队、画过漫画、闯过好莱坞、当过保安、见证过生死，其丰富的人生阅历、以及细腻的感情，因此给人留下很深刻的印象和强大的共鸣吧。</br>明年是水仙20周年，随便写写。]]></content>
      
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
            <tag> 猫猫社 </tag>
            
            <tag> 水仙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity之伤害检测</title>
      <link href="/2024/12/27/Unity%E4%B9%8B%E4%BC%A4%E5%AE%B3%E6%A3%80%E6%B5%8B/"/>
      <url>/2024/12/27/Unity%E4%B9%8B%E4%BC%A4%E5%AE%B3%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>本文用于记录伤害检测，算是一套比较完整的伤害检测系统。人物有两个属性，一个是生命值、一个体力值，当体力值小于10时是格挡不了的。那么姑且开始写代码吧。</p><h3>思路分析</h3>首先我们需要做伤害判定——判断敌人是否受伤害，那就用Physics.SphereCast方法，角色往前一段距离进行一个碰撞检测，声明一个Transform变量currentEnemy = hit.collider.transform，用来保存敌人数据。如果检测到了，并且我们进行了攻击，就可以执行敌人受伤或是格挡的逻辑了。</br>在写逻辑前，我们可以优化一下，一般游戏都有锁敌机制。我们也写一套锁敌机制，锁敌机制判断条件有二，一是敌人和我们的距离小于1.3，二是敌人在我们前方60度的角度内可以索敌。距离判断很简单，直接Vector3.Distance().magnitude就可以了;角度判断用Vector3.Dot(this,transform.forwar,(currentenemy.transform.position - this.transform.position))，返回一个float值，当其大于根号3/2时可以索敌(点积的值等于cos角度值)。</br>接下来写核心逻辑，我们之前写过一套简单的技能编辑器(<font color = red>参考文章“Unity基础连招思路”</font>)，也写过一套事件管理中心，我们把角色受击做成一个事件，当攻击时调用这个事件就好。事件传入参数：float damage,float enemy,string hitName,string parryName(伤害，体力值消耗、受伤动画、格挡动画);之后敌人只需要判断就好了。<hr>在这个思路下，写的脚本大概是以下，中间我最先是跟着up鬼鬼鬼ii的视频做的，写的可能有点不一样，但大致思路都一样的，我自己写了个ExpandClass类，拓展了一些方法：以下是综合内容，我把一些脚本写一起了，看起来比较乱，用Ctrl+F进行关键词搜索：伤害判定、能否锁敌、核心逻辑<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class PlayerComboController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Header(&quot;基础组合技&quot;)] private Combo baseCombo;</span><br><span class="line">    [SerializeField, Header(&quot;变招表&quot;)] private Combo ChangeCombo;</span><br><span class="line">    private Combo currentCombo;</span><br><span class="line">    private Animator animator;</span><br><span class="line">    private int comboIndex = 0;</span><br><span class="line">    private int changeComboIndex = 0;</span><br><span class="line">    private int currentIndex = 0;</span><br><span class="line">    private bool canAttack = true;</span><br><span class="line">    private float coldTime = 0f;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 上面是连招逻辑的，接下来写相机</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    [SerializeField, Header(&quot;检测球半径&quot;)] private float detectSphereRadius;</span><br><span class="line">    [SerializeField,Header(&quot;检测最大距离&quot;)]private float detectSphereDistance;</span><br><span class="line">    private Transform currentEnemy;</span><br><span class="line">    private Transform _mainCamera;</span><br><span class="line">    private Vector3 detectDir;</span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">        currentCombo = baseCombo;</span><br><span class="line">        _mainCamera = Camera.main.transform;</span><br><span class="line">        currentIndex = comboIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        ExcuteAttack();</span><br><span class="line">        EndAttack();</span><br><span class="line">        AttackExcute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void FixedUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        DetectDirection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 核心逻辑</span><br><span class="line">    private void AttackExcute()</span><br><span class="line">    &#123;</span><br><span class="line">        if (currentEnemy == null) return;</span><br><span class="line">        //检测范围不对，直接return</span><br><span class="line">        // 能否索敌</span><br><span class="line">        if (Vector3.Dot(this.transform.forward, ExpandClass.GetTargetVector3(this.transform, currentEnemy)) &lt; 0.85f) return;</span><br><span class="line">        if(ExpandClass.GetTargetVector3(this.transform,currentEnemy).magnitude &gt; 1.3f) return;</span><br><span class="line">        //说明已经攻击了，并且检测到敌人</span><br><span class="line">        if(animator.AnimationAtTag(&quot;Attack&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            //先确定旋转</span><br><span class="line">            Vector3 targetDir = ExpandClass.GetTargetVector3(this.transform, currentEnemy);</span><br><span class="line">            Quaternion targetRotation = Quaternion.LookRotation(targetDir);</span><br><span class="line">            transform.rotation = Quaternion.RotateTowards(this.transform.rotation,targetRotation,1000f);</span><br><span class="line">            //之后调用事件，我们的逻辑都在这个事件里写</span><br><span class="line">            GameEventManager.Instance().InvokeEvent&lt;float, string, string, Transform, Transform&gt;(</span><br><span class="line">                &quot;DamageTrigger&quot;,</span><br><span class="line">                currentCombo.TryGetComboDamage(currentIndex),</span><br><span class="line">                currentCombo.TryGetHitName(currentIndex, 0),</span><br><span class="line">                currentCombo.TryGetParryName(currentIndex, 0),</span><br><span class="line">                this.transform,</span><br><span class="line">                currentEnemy</span><br><span class="line">            );</span><br><span class="line">            Debug.Log(&quot;AttackExcute被执行&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // 伤害判定</span><br><span class="line">    private void DetectDirection()</span><br><span class="line">    &#123;</span><br><span class="line">        //判断检测方向</span><br><span class="line">        detectDir = _mainCamera.transform.forward * GameInputManager.Instance().movement.y + _mainCamera.transform.right * GameInputManager.Instance().movement.x;</span><br><span class="line">        detectDir.Set(detectDir.x,0,detectDir.z);</span><br><span class="line">        detectDir = detectDir.normalized;</span><br><span class="line">        if (Physics.SphereCast(this.transform.position + this.transform.up * 0.7f, detectSphereRadius, detectDir, out var hit, detectSphereDistance,1 &lt;&lt; 6, QueryTriggerInteraction.Ignore))</span><br><span class="line">        &#123;</span><br><span class="line">            //说明检测到了敌人</span><br><span class="line">            currentEnemy = hit.collider.transform;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnDrawGizmos()</span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.DrawWireSphere((this.transform.position + this.transform.up * 0.7f + detectDir * detectSphereDistance), detectSphereRadius);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #region 连招逻辑</span><br><span class="line">    private bool CanAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!canAttack) return false;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Parry&quot;)) return false;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Hit&quot;)) return false;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ExcuteAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!CanAttack()) return;</span><br><span class="line">        if (GameInputManager.Instance().leftAttack)</span><br><span class="line">        &#123;</span><br><span class="line">            currentIndex = comboIndex;</span><br><span class="line">            currentCombo = baseCombo;</span><br><span class="line">            animator.CrossFade(currentCombo.TryGetComboName(comboIndex), 0.15f);</span><br><span class="line">            coldTime = currentCombo.TryGetColdTime(comboIndex);</span><br><span class="line">            canAttack = false;</span><br><span class="line">            TimerManager.Instance().TryGetOneTimer(coldTime, ResetCombo);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(GameInputManager.Instance().RightAttack)</span><br><span class="line">        &#123;</span><br><span class="line">            currentIndex = changeComboIndex;</span><br><span class="line">            currentCombo = ChangeCombo;</span><br><span class="line">            animator.CrossFade(currentCombo.TryGetComboName(currentIndex),0.1f);</span><br><span class="line">            coldTime = currentCombo.TryGetColdTime(currentIndex);</span><br><span class="line">            canAttack = false;</span><br><span class="line">            TimerManager.Instance().TryGetOneTimer(coldTime, ResetHeavy);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ResetCombo()</span><br><span class="line">    &#123;</span><br><span class="line">        comboIndex++;</span><br><span class="line">        changeComboIndex++;</span><br><span class="line">        canAttack = true;</span><br><span class="line">        coldTime = 0f;</span><br><span class="line">        if(comboIndex == currentCombo.TryGetComboCount())</span><br><span class="line">        &#123;</span><br><span class="line">            comboIndex = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        if(changeComboIndex == ChangeCombo.TryGetComboCount())</span><br><span class="line">        &#123;</span><br><span class="line">            changeComboIndex = 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ResetHeavy()</span><br><span class="line">    &#123;</span><br><span class="line">        canAttack = true;</span><br><span class="line">        coldTime = 0f;</span><br><span class="line">        changeComboIndex = 0;</span><br><span class="line">        comboIndex = 0;</span><br><span class="line">        currentIndex = 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void EndAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Move&quot;) || animator.AnimationAtTag(&quot;Idle&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            comboIndex = 0;</span><br><span class="line">            changeComboIndex = 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">using System.Xml.Serialization;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public abstract class CharacterHealthBase : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    protected Animator animator;</span><br><span class="line">    protected Transform _currentAttacker;</span><br><span class="line">    protected float enemy = 0;</span><br><span class="line">    //角色受伤行为</span><br><span class="line">    protected virtual void CharacterHitAction(float damage,string hitName, string parryName)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;我被调用了&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void TakeDamage(float damage)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    // 核心逻辑</span><br><span class="line">    private void OnCharacterHitEventHandler(float damage,string hitName,string parryName,Transform attack,Transform self)</span><br><span class="line">    &#123;</span><br><span class="line">        if (self != this.transform) return;</span><br><span class="line">        SetAttacker(attack);</span><br><span class="line">        CharacterHitAction(damage, hitName, parryName);</span><br><span class="line">        TakeDamage(damage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void SetAttacker(Transform attacker)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_currentAttacker != attacker || _currentAttacker == null)</span><br><span class="line">        &#123;</span><br><span class="line">            _currentAttacker = attacker;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    private void OnEnable()</span><br><span class="line">    &#123;</span><br><span class="line">        GameEventManager.Instance().AddEventListening&lt;float,string,string,Transform,Transform&gt;(&quot;DamageTrigger&quot;, OnCharacterHitEventHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnDisable()</span><br><span class="line">    &#123;</span><br><span class="line">        GameEventManager.Instance().RemoveEvent&lt;float, string, string, Transform, Transform&gt;(&quot;DamageTrigger&quot;, OnCharacterHitEventHandler);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class EnemyHealthSystem : CharacterHealthBase</span><br><span class="line">&#123; </span><br><span class="line">    // 核心逻辑</span><br><span class="line">    protected override void CharacterHitAction(float damage, string hitName, string parryName)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;我被调用了&quot;);</span><br><span class="line">        if (damage &lt; 30 &amp;&amp; enemy &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            animator.CrossFadeInFixedTime(parryName, 0.15f);</span><br><span class="line">            enemy -= 20;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            animator.CrossFadeInFixedTime(hitName, 0.15f);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 伤害检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NowPaper老师的连招思路</title>
      <link href="/2024/12/27/NowPaper%E8%80%81%E5%B8%88%E7%9A%84%E8%BF%9E%E6%8B%9B%E6%80%9D%E8%B7%AF/"/>
      <url>/2024/12/27/NowPaper%E8%80%81%E5%B8%88%E7%9A%84%E8%BF%9E%E6%8B%9B%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>今天上b站，看到了up主NowPaper老师关于Unity连招的思路，觉得代码写得很简洁、同时实现了预输入，觉得很有借鉴意义。</br></p><h3>思路介绍</h3>NowPaper老师整体的思路是，先声明InputType来存储输入类型，InputType == 1为轻击输入、InputType == 2为重击输入，结合InputSystem来判断输入类型。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">//声明两个数组来存储轻击和重击动画</span><br><span class="line">//这点我觉得其实鬼鬼鬼ii做的简单技能编辑器效果要更好，关于技能编辑器参考我的文章“Unity基础连招思路”</span><br><span class="line">public AnimationClip[] Attack1Clips;</span><br><span class="line">public AnimationClip[] Attack2Clips;</span><br><span class="line">......</span><br><span class="line">//以下是根据InputSystem配置好的，判断攻击类型的。</span><br><span class="line">int InputType = 0;</span><br><span class="line">void OnFire1(InputType value)</span><br><span class="line">&#123;</span><br><span class="line">    if(value.isPressed)</span><br><span class="line">    &#123;</span><br><span class="line">        InputType = 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void OnFire2(InputType value)</span><br><span class="line">&#123;</span><br><span class="line">    if(value.isPressed)</span><br><span class="line">    &#123;</span><br><span class="line">        InputType = 2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">//声明当前招式索引，默认为0</span><br><span class="line">public int currentAttack = 0;</span><br><span class="line">//声明输入失效时间</span><br><span class="line">float _outTimer = 0;</span><br><span class="line"></span><br><span class="line">private void PlayAttack(int index, int type)</span><br><span class="line">&#123;</span><br><span class="line">    // 开始攻击的时候，让移动失效,这句代码也是事先写好的</span><br><span class="line">    _move.enabled = false;</span><br><span class="line">    AnimationClip clip;</span><br><span class="line">    if (type == 1)</span><br><span class="line">    &#123;</span><br><span class="line">        // 如果是轻攻击，则播放并连招数+1</span><br><span class="line">        clip = Attack1Clips[index];</span><br><span class="line">        currentAttack++;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        // 如果是重攻击，则播放并连招数=0</span><br><span class="line">        clip = Attack2Clips[index];</span><br><span class="line">        currentAttack = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 播放动画</span><br><span class="line">    _animator.CrossFade(clip.name,0.2f);</span><br><span class="line">    //记录动画时间</span><br><span class="line">    _outTimer = clip.Length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">void Update()</span><br><span class="line">&#123;</span><br><span class="line">    // 计算失效时间</span><br><span class="line">    _outTimer -= Time.deltaTime;</span><br><span class="line">    if (_outTimer &lt;= 0)</span><br><span class="line">    &#123;</span><br><span class="line">        // 如果失效，则激活移动，并连招数归0</span><br><span class="line">        _move.enabled = true;</span><br><span class="line">        currentAttack = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (inputType != 0)</span><br><span class="line">    &#123;</span><br><span class="line">        // 如果在动画结束前0.4秒内，检测输入则播放对应的动画</span><br><span class="line">        //currentAttack &lt; Attack1Clips.Length这点很妙，如果索引超过了就不让你再攻击了，连招打完直接重置</span><br><span class="line">        if (_outTimer &lt;= 0.4f &amp;&amp; currentAttack &lt; Attack1Clips.Length)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayAttack(currentAttack, inputType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 重置inputType，以便下一次输入</span><br><span class="line">    inputType = 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 连招 </tag>
            
            <tag> 游戏开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity基础连招思路（索引版）</title>
      <link href="/2024/12/26/Unity%E5%9F%BA%E7%A1%80%E8%BF%9E%E6%8B%9B%E6%80%9D%E8%B7%AF%EF%BC%88%E7%B4%A2%E5%BC%95%E7%89%88%EF%BC%89/"/>
      <url>/2024/12/26/Unity%E5%9F%BA%E7%A1%80%E8%BF%9E%E6%8B%9B%E6%80%9D%E8%B7%AF%EF%BC%88%E7%B4%A2%E5%BC%95%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>今天试着自己实现了简单的连招系统，先来介绍一下该系统的逻辑：角色按左键是轻攻击、右键是重攻击，重攻击四组、轻攻击三组动画。根据轻攻击连按次数+右键的点击打出不同的重攻击。</p><h3>技能编辑器</h3>首先做一个最基础的属性编辑器，用ScriptableObject做，为每一个攻击动画配置好我们需要的参数：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">[CreateAssetMenu(fileName = &quot;ComboData&quot;, menuName = &quot;Scriptable Objects/ComboData&quot;)]</span><br><span class="line">public class ComboData : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Header(&quot;招式名称&quot;)] private string comboName;</span><br><span class="line">    [SerializeField, Header(&quot;招式伤害&quot;)] private int comboDamage;</span><br><span class="line">    [SerializeField, Header(&quot;被招式受击名称&quot;)] private string hitName;</span><br><span class="line">    [SerializeField, Header(&quot;被招式格挡名称&quot;)] private string parryName;</span><br><span class="line">    [SerializeField, Header(&quot;招式冷却时间&quot;)] private float coldTime;</span><br><span class="line"></span><br><span class="line">    public string ComboName =&gt; comboName;</span><br><span class="line">    public int ComboDamage =&gt; comboDamage;</span><br><span class="line">    public string HitName =&gt; hitName;</span><br><span class="line">    public string ParryName =&gt; parryName;</span><br><span class="line">    public float ColdTime =&gt; coldTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面就是我们给每个攻击动作配置的属性了，光有属性还不够，需要创建技能编辑器来进行组合。我们对外提供一些方法，可以根据索引来快速获取每个动作的参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">using NUnit.Framework;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using Unity.Burst.Intrinsics;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">[CreateAssetMenu(fileName = &quot;Combo&quot;, menuName = &quot;Scriptable Objects/Combo&quot;)]</span><br><span class="line">public class Combo : ScriptableObject</span><br><span class="line">&#123;</span><br><span class="line">    //显示可编辑的招式</span><br><span class="line">    [SerializeField]private List&lt;ComboData&gt; _combo = new List&lt;ComboData&gt;();</span><br><span class="line"></span><br><span class="line">    public string TryGetComboName(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ComboName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获得受伤动画名称</span><br><span class="line">    public string TryGetHitName(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].HitName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获得格挡动画名称</span><br><span class="line">    public string TryGetParryName(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ParryName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //获得招式伤害</span><br><span class="line">    public int TryGetComboDamage(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ComboDamage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public float TryGetColdTime(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if(_combo.Count == 0 || _combo.Count &lt; index + 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            return _combo[index].ColdTime;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //获得招式动画数量</span><br><span class="line">    public int TryGetComboCount() =&gt; _combo.Count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后我们就可以将不同动作进行组合、打出不同的组合技了。</p><h3>编写核心代码</h3><p>我的思路是，给出基础组合技和变招表，声明两个索引值分别记录轻攻击索引和重攻击索引。首先声明一个变量canAttck来帮助我们控制角色能否攻击，比如我们在打出第一段攻击后、有0.4秒时间我们是不希望角色进行第二段攻击的(怕点击次数太快造成抽搐)，再写一个函数CanAttack()来判断能不能进行攻击。</br><br>我们默认使用基础组合技，当按下鼠标左键，comboIndex和changeComboIndex都会递增，动画播放后canAttack &#x3D; false;之后通过<font color = red>时间管理器</font>进行延迟调用函数，延迟调用ResetCombo();</br><br>对于重攻击，默认是不能连按右键打出重攻击组合技的，需要配合轻攻击，那就每次打出一个重攻击就把它的索引值归为0。具体参考以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class PlayerComboController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Header(&quot;基础组合技&quot;)] private Combo baseCombo;</span><br><span class="line">    [SerializeField, Header(&quot;变招表&quot;)] private Combo ChangeCombo;</span><br><span class="line">    private Combo currentCombo;</span><br><span class="line">    private Animator animator;</span><br><span class="line">    private int comboIndex = 0;</span><br><span class="line">    private int changeComboIndex = 0;</span><br><span class="line">    private int currentIndex = 0;</span><br><span class="line">    private bool canAttack = true;</span><br><span class="line">    private float coldTime = 0f;</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">        currentCombo = baseCombo;</span><br><span class="line">        _mainCamera = Camera.main.transform;</span><br><span class="line">        currentIndex = comboIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        ExcuteAttack();</span><br><span class="line">        EndAttack();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void FixedUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        DetectDirection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #region 连招逻辑</span><br><span class="line">    private bool CanAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!canAttack) return false;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Parry&quot;)) return false;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Hit&quot;)) return false;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ExcuteAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!CanAttack()) return;</span><br><span class="line">        if (GameInputManager.Instance().leftAttack)</span><br><span class="line">        &#123;</span><br><span class="line">            currentIndex = comboIndex;</span><br><span class="line">            currentCombo = baseCombo;</span><br><span class="line">            animator.CrossFade(currentCombo.TryGetComboName(comboIndex), 0.15f);</span><br><span class="line">            coldTime = currentCombo.TryGetColdTime(comboIndex);</span><br><span class="line">            canAttack = false;</span><br><span class="line">            TimerManager.Instance().TryGetOneTimer(coldTime, ResetCombo);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(GameInputManager.Instance().RightAttack)</span><br><span class="line">        &#123;</span><br><span class="line">            currentIndex = changeComboIndex;</span><br><span class="line">            currentCombo = ChangeCombo;</span><br><span class="line">            animator.CrossFade(currentCombo.TryGetComboName(currentIndex),0.1f);</span><br><span class="line">            coldTime = currentCombo.TryGetColdTime(currentIndex);</span><br><span class="line">            canAttack = false;</span><br><span class="line">            changeComboIndex = 0;</span><br><span class="line">            comboIndex = 0;</span><br><span class="line">            TimerManager.Instance().TryGetOneTimer(coldTime, ResetHeavy);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ResetCombo()</span><br><span class="line">    &#123;</span><br><span class="line">        comboIndex++;</span><br><span class="line">        changeComboIndex++;</span><br><span class="line">        canAttack = true;</span><br><span class="line">        coldTime = 0f;</span><br><span class="line">        if(comboIndex == currentCombo.TryGetComboCount())</span><br><span class="line">        &#123;</span><br><span class="line">            comboIndex = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        //关于这点我解释一下，如果角色打完一套轻击、不停下来又开始打轻击，此时就得重置一下changeComboIndex。你问为什么打重击或者停止时？我们都已经重置了。</span><br><span class="line">        //至于为什么是1，因为我们设置的changeComboIndex == 0 时，那个动画只有静止时、或者打完一个重击再打才能用。这里轻击我们采用从1开始的重置</span><br><span class="line">        if(changeComboIndex == ChangeCombo.TryGetComboCount())</span><br><span class="line">        &#123;</span><br><span class="line">            changeComboIndex = 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ResetHeavy()</span><br><span class="line">    &#123;</span><br><span class="line">        canAttack = true;</span><br><span class="line">        coldTime = 0f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void EndAttack()</span><br><span class="line">    &#123;</span><br><span class="line">        if (animator.AnimationAtTag(&quot;Move&quot;) || animator.AnimationAtTag(&quot;Idle&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            comboIndex = 0;</span><br><span class="line">            changeComboIndex = 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 技能编辑器 </tag>
            
            <tag> 连招思路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity框架之缓存池模块</title>
      <link href="/2024/12/25/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E7%BC%93%E5%AD%98%E6%B1%A0%E6%A8%A1%E5%9D%97/"/>
      <url>/2024/12/25/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E7%BC%93%E5%AD%98%E6%B1%A0%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>如今的Unity提供官方写好的缓存池，但我还是打算讲讲自定义缓存池怎么写。</p><h1>缓存池用途</h1>在射击游戏中，游戏中存在着频繁的子弹创建和销毁工作。如果内存大量频繁地创建和销毁物体，势必会带来很明显的卡顿和性能开销。游戏开发者思考，我是不是可以重复利用固定几个物体、减少内存浪费和性能开销？于是有了缓存池。<h1>思路</h1>以射击游戏为例，先去思考怎么实现子弹缓存效果，我的想法是，场上能看见的子弹也就五、六个，射出去的子弹超出玩家视野后、进行重复利用。于是分类：子弹类——子弹1、子弹2、子弹3、子弹4...</br>然而缓存池不一定只有子弹类，可能还有炮弹类、垃圾类等等，最后划分大概是这样的一张图表：<table><caption>物体</caption><tr>  <td rowspan = 3>子弹类</td>  <td rowspan = 3>炮弹类</td>  <td rowspan = 3>垃圾类</td>  <td rowspan = 3>...</td></tr><tr></tr><tr></tr><tr>    <td>子弹二</td>    <td>炮弹二</td>    <td>垃圾二</td>    <td>...</td></tr><tr>    <td>子弹三</td>    <td>炮弹三</td>    <td>垃圾三</td>    <td>...</td></tr></table><p>这就类似于我们的衣柜，衣柜里有不同的抽屉，每个抽屉里放着不同的衣服，于是联想到字典和List，用Dictionary&lt;string,Queue<GameObject>&gt;来存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections.Generic;</span><br><span class="line">using Unity.Mathematics;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class GamePoolManager : SingleMono&lt;GamePoolManager&gt;</span><br><span class="line">&#123;</span><br><span class="line">    [System.Serializable]</span><br><span class="line">    private class PoolItem</span><br><span class="line">    &#123;</span><br><span class="line">        public string itemName;</span><br><span class="line">        public GameObject item;</span><br><span class="line">        public int itemCount;</span><br><span class="line">    &#125;</span><br><span class="line">    [SerializeField]private List&lt;PoolItem&gt; poolList = new List&lt;PoolItem&gt;();</span><br><span class="line">    private Dictionary&lt;string,Queue&lt;GameObject&gt;&gt; poolDic = new Dictionary&lt;string,Queue&lt;GameObject&gt;&gt;();</span><br><span class="line">    private GameObject _poolParrent;</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        _poolParrent = new GameObject(&quot;对象池父对象&quot;);</span><br><span class="line">        _poolParrent.transform.SetParent(transform);</span><br><span class="line">        InitPool();</span><br><span class="line">    &#125;</span><br><span class="line">    //把东西塞池子里</span><br><span class="line">    private void InitPool()</span><br><span class="line">    &#123;</span><br><span class="line">        //遍历池子</span><br><span class="line">        for (int i = 0; i &lt; poolList.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(int j = 0; j&lt;poolList[i].itemCount; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                var item1 = Instantiate(poolList[i].item);</span><br><span class="line">                item1.transform.SetParent(_poolParrent.transform);</span><br><span class="line">                item1.SetActive(false);</span><br><span class="line">               </span><br><span class="line">                //如果没有对应的池子，我们new一个</span><br><span class="line">                if (!poolDic.ContainsKey(poolList[i].itemName))</span><br><span class="line">                &#123;</span><br><span class="line">                    poolDic.Add(poolList[i].itemName, new Queue&lt;GameObject&gt;());</span><br><span class="line">                &#125;</span><br><span class="line">                poolDic[poolList[i].itemName].Enqueue(item1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void TryGetPoolItem(string name,Vector3 position,Quaternion rotation)</span><br><span class="line">    &#123;</span><br><span class="line">        if (poolDic.ContainsKey(name))</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject item = poolDic[name].Dequeue();</span><br><span class="line">            item.transform.position = position;</span><br><span class="line">            item.transform.rotation = rotation;</span><br><span class="line">            item.SetActive(true);</span><br><span class="line">            poolDic[name].Enqueue(item);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;你从对象池要拿的不存在&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public GameObject TryGetPoolItem(string name)</span><br><span class="line">    &#123;</span><br><span class="line">        if (poolDic.ContainsKey(name))</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject item = poolDic[name].Dequeue();</span><br><span class="line">            item.SetActive(true);</span><br><span class="line">            poolDic[name].Enqueue(item);</span><br><span class="line">            return item;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;你从对象池要拿的不存在&quot;);</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joker的有限状态机</title>
      <link href="/2024/12/23/Joker%E7%9A%84%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/"/>
      <url>/2024/12/23/Joker%E7%9A%84%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>这几天我在试图学习Unity里的动作系统，了解到“有限状态机”这个东西，之前一直有听说过，以前总感觉很高大上，花了一节水课的时间大概弄懂了，于是分享一下。</p><p>温馨提示：在开始阅读本文之前，请确保你了解C#语言中接口、继承、抽象类等相关知识点，否则可能会看不懂）。</p><h1>什么是有限状态机？</h1>对于玩家和怪物，总会存在几个状态：比如待机、跑步、攻击、巡逻...这些都可以称之为状态。我们在Unity开发中最常接触的有限状态机就是我们的Animator窗口——它就是一个有限状态机。使用有限状态机，可以更方便我们去进行人物行为动作管理和逻辑管理，比如玩家处于待机状态，按下W键切换到跑步状态、跳跃时进入跳跃状态，我们把不同状态用状态机进行管理，就会好很多。<h1>通用的有限状态机框架</h1>在我观看数位、海内海外的博主的视频，发现他们都会采用同一套框架，逻辑、代码都是极其相似的，于是进行总结。</br>首先我们新建一个名为IState.cs：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line">public interface IState</span><br><span class="line">&#123;</span><br><span class="line">    public void Enter();</span><br><span class="line">    public void Exit();</span><br><span class="line">    public void Update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>作用是实现一个接口，相当于一套代码规范，我们的所有状态：待机、跑步、跳跃等都要实现接口里的方法。</p><hr><p>第二步，我们开始写状态机主体框架，新建FSM.cs文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections.Generic;</span><br><span class="line">using Unity.IO.LowLevel.Unsafe;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">//当距离太大对象直接待机，到一定范围对峙，对峙完一会儿直接跑过来，到一定距离再攻击</span><br><span class="line">public enum StateType</span><br><span class="line">&#123;</span><br><span class="line">    idle,</span><br><span class="line">    stand,</span><br><span class="line">    run,</span><br><span class="line">    attack</span><br><span class="line">&#125;</span><br><span class="line">public class FSM</span><br><span class="line">&#123;</span><br><span class="line">    private IState currentIState;</span><br><span class="line">    public Dictionary&lt;StateType, IState&gt; states;</span><br><span class="line">    public FSM()</span><br><span class="line">    &#123;</span><br><span class="line">        this.states = new Dictionary&lt;StateType, IState&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //添加状态</span><br><span class="line">    public void AddState(StateType state,IState istate)</span><br><span class="line">    &#123;</span><br><span class="line">        if (states.ContainsKey(state))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;请勿重复添加状态&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        states.Add(state, istate);</span><br><span class="line">    &#125;</span><br><span class="line">    //转换状态</span><br><span class="line">    public void TransformState(StateType state)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!states.ContainsKey(state))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;没有找到此状态&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if (currentIState != null)</span><br><span class="line">        &#123;</span><br><span class="line">            currentIState.Exit();</span><br><span class="line">        &#125;</span><br><span class="line">        currentIState = states[state];</span><br><span class="line">        currentIState.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void OnStart()</span><br><span class="line">    &#123;</span><br><span class="line">        //注册状态    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void OnUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        //状态每帧执行的函数</span><br><span class="line">        currentIState.Update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第三步，我们拿IdleState.cs举例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class IdleState : StateBase</span><br><span class="line">&#123;</span><br><span class="line">    // 假设我们IDLE状态需要用到某些组件比如Animator中的动画</span><br><span class="line">    private Animator animator; // 声明一个Animator类型的私有变量animator</span><br><span class="line">    private FSMControl fsm; // 声明一个FSMControl类型的私有变量fsm</span><br><span class="line">    private float deltaTime = 5f; // 声明一个私有浮点变量deltaTime并初始化为5秒</span><br><span class="line"></span><br><span class="line">    public IdleState(Animator animator, FSMControl fsm)</span><br><span class="line">    &#123;</span><br><span class="line">        this.animator = animator; // 初始化animator变量</span><br><span class="line">        this.fsm = fsm; // 初始化fsm变量</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Enter()</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;开工!&quot;); // 当状态进入时打印日志</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;我在工作!&quot;); // 每帧更新时打印日志</span><br><span class="line"></span><br><span class="line">        if (deltaTime &gt;= 0) // 如果deltaTime大于或等于0</span><br><span class="line">        &#123;</span><br><span class="line">            deltaTime -= Time.deltaTime; // 减少deltaTime的值</span><br><span class="line">            if (deltaTime &lt;= 0) // 如果deltaTime小于或等于0</span><br><span class="line">            &#123;</span><br><span class="line">                // 转换状态</span><br><span class="line">                fsm.TransformState(StateType.attack);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Exit()</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;逻辑执行完毕！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后调用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class TestFSM : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private FSMControl fsm; // 声明一个FSMControl类型的私有变量fsm</span><br><span class="line">    private Animator animator; // 声明一个Animator类型的私有变量animator</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        fsm = new FSMControl(); // 在Awake方法中实例化FSMControl</span><br><span class="line">        animator = GetComponentInChildren&lt;Animator&gt;(); // 获取子对象中的Animator组件</span><br><span class="line"></span><br><span class="line">        // 添加状态</span><br><span class="line">        fsm.AddState(StateType.IDLE, new IdleState(animator, this.fsm)); // 添加IDLE状态,this.fsm可以减少内存占用</span><br><span class="line">        fsm.AddState(StateType.MOVE, new MoveState()); // 添加MOVE状态</span><br><span class="line">        fsm.SetState(StateType.IDLE); // 设置初始状态为IDLE</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        fsm.OnTick(); // 在Update方法中调用fsm的OnTick方法，更新状态机</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让我们重新理清逻辑：<br>IState.cs：所有状态都有“进入状态”“状态执行中”“退出状态”三个方法，于是我们用代码写个接口，所有状态均继承这个接口。<br>FSM.cs：状态机的核心部分，首先用枚举定义我们有几种状态，接着我们用IState的一个实例currentState,根据“父装子”原则,用于代表我们当前的状态。<br>同时，我们定义一个字典states，用于存储我们的状态，接下来构造函数。然后我们写添加状态和转换状态的方法，在Start函数里注册完我们的所有方法，Update函数里去进行状态调用。</p><hr><p>那么状态机用来干什么？主要是提升我们的开发效率、简化代码吧，它可以用来制作敌人AI逻辑、也可以用来丰富我们的角色控制器，用处还是很大的。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity之有限状态机(1.01版)</title>
      <link href="/2024/12/15/Unity%E4%B9%8B%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E5%8D%87%E7%BA%A7%E7%89%88/"/>
      <url>/2024/12/15/Unity%E4%B9%8B%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E5%8D%87%E7%BA%A7%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>本版本是对有限状态机的优化，并讲了有限状态机的具体使用，要比之前的版本更好。主要是借鉴了博主<a href = "https://blog.csdn.net/qq_36303853/article/details/140091169">向宇it</a>的文章。</p><hr><h2>一、编写框架</h2>首先我们新建一个Parameter.cs，用于存储我们怪物的各种参数，比如动画啊、伤害啊，并加上[Serializable]属性使其可以编辑。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Serializable]</span><br><span class="line">public class Parameter</span><br><span class="line">&#123;</span><br><span class="line">    //定义我们需要的参数</span><br><span class="line">    public Animator animator;</span><br><span class="line">    public float attack;</span><br><span class="line">    public NavMeshAgent nav;</span><br><span class="line">    public AnimatorStateInfo animatorStateInfo;//当前动画信息</span><br><span class="line">    public float idleTime;</span><br><span class="line">    public Transform targetObj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后写一个IState.cs脚本，我们所有的状态都要继承它，相等于一个规范</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public abstract class IState</span><br><span class="line">&#123;</span><br><span class="line">    protected FSM fsm;// 当前状态机</span><br><span class="line">    protected Parameter parameter;// 参数</span><br><span class="line">    public abstract void Enter();</span><br><span class="line">    public abstract void Update();</span><br><span class="line">    public abstract void Exit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后写一个FSM.cs脚本，继承MonoBehaviour，这就是我们状态机的主体框架了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">public enum StateType</span><br><span class="line">&#123;</span><br><span class="line">    idle,</span><br><span class="line">    stand,</span><br><span class="line">    run,</span><br><span class="line">    attack</span><br><span class="line">&#125;</span><br><span class="line">public class FSM : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private IState currentIState;</span><br><span class="line">    protected Dictionary&lt;StateType, IState&gt; states = new Dictionary&lt;StateType, IState&gt;();</span><br><span class="line">    //我们需要的参数</span><br><span class="line">    public Parameter parameter;</span><br><span class="line"></span><br><span class="line">    protected virtual void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        //注册方法</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected virtual void OnEnable()</span><br><span class="line">    &#123;</span><br><span class="line">        parameter.animator = transform.GetComponent&lt;Animator&gt;();  // 获取角色上的动画控制器组件</span><br><span class="line">        TransformState(StateType.idle);    // 初始状态为Idle</span><br><span class="line">        currentIState.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //添加状态</span><br><span class="line">    public virtual void AddState(StateType state,IState istate)</span><br><span class="line">    &#123;</span><br><span class="line">        if (states.ContainsKey(state))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;请勿重复添加状态&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        states.Add(state, istate);</span><br><span class="line">    &#125;</span><br><span class="line">    //转换状态</span><br><span class="line">    public virtual void TransformState(StateType state)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!states.ContainsKey(state))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;没有找到此状态&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if (currentIState != null)</span><br><span class="line">        &#123;</span><br><span class="line">            currentIState.Exit();</span><br><span class="line">        &#125;</span><br><span class="line">        currentIState = states[state];</span><br><span class="line">        currentIState.Enter();</span><br><span class="line">    &#125;</span><br><span class="line">    public void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        parameter.animatorStateInfo = parameter.animator.GetCurrentAnimatorStateInfo(0);// 获取当前动画状态信息</span><br><span class="line">        currentIState.Update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2>二、编写状态</h2>在上面的FSM.cs脚本，我声明了四个状态，因此写四个脚本：</br>先是Idle.cs<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class Idle : IState</span><br><span class="line">&#123;</span><br><span class="line">    public Idle(FSM fsm)</span><br><span class="line">    &#123;</span><br><span class="line">        this.fsm = fsm;</span><br><span class="line">        this.parameter = fsm.parameter;</span><br><span class="line">    &#125;</span><br><span class="line">    public override void Enter()</span><br><span class="line">    &#123;</span><br><span class="line">        parameter.animator.Play(&quot;Idle&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Exit()</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if(Vector3.Distance(fsm.transform.position,parameter.targetObj.transform.position) &lt; 20f)</span><br><span class="line">        &#123;</span><br><span class="line">            fsm.TransformState(StateType.stand);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再是stand.cs。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class Stand : IState</span><br><span class="line">&#123;</span><br><span class="line">    float time = 5.0f;</span><br><span class="line">    public Stand(FSM fsm)</span><br><span class="line">    &#123;</span><br><span class="line">        this.fsm = fsm;</span><br><span class="line">        this.parameter = fsm.parameter;</span><br><span class="line">    &#125;</span><br><span class="line">    public override void Enter()</span><br><span class="line">    &#123;</span><br><span class="line">        int x = Random.Range(1, 3);</span><br><span class="line">        if(x == 1)</span><br><span class="line">        &#123;</span><br><span class="line">            parameter.animator.CrossFade(&quot;Walk_Left&quot;, 0.2f);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            parameter.animator.CrossFade(&quot;Walk_Right&quot;, 0.2f);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Exit()</span><br><span class="line">    &#123;</span><br><span class="line">        time = 5.0f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        fsm.transform.rotation = Quaternion.LookRotation(parameter.targetObj.transform.position - fsm.transform.position);</span><br><span class="line">        time -= Time.deltaTime;</span><br><span class="line">        if (time &lt; 0f)</span><br><span class="line">        &#123;</span><br><span class="line">            fsm.TransformState(StateType.run);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着是Run.cs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public class Run : IState</span><br><span class="line">&#123;</span><br><span class="line">    public Run(FSM fsm)</span><br><span class="line">    &#123;</span><br><span class="line">        this.fsm = fsm;</span><br><span class="line">        this.parameter = fsm.parameter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Enter()</span><br><span class="line">    &#123;</span><br><span class="line">        parameter.animator.CrossFade(&quot;Run&quot;, 0.2f);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Exit()</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        parameter.nav.SetDestination(parameter.targetObj.transform.position);</span><br><span class="line">        if (Vector3.Distance(fsm.transform.position, parameter.targetObj.transform.position) &lt; 3f)</span><br><span class="line">        &#123;</span><br><span class="line">            fsm.TransformState(StateType.attack);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后是Attack.cs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class Attack : IState</span><br><span class="line">&#123;</span><br><span class="line">    float time = 5.0f;</span><br><span class="line">    public Attack(FSM fsm)</span><br><span class="line">    &#123;</span><br><span class="line">        this.fsm = fsm;</span><br><span class="line">        this.parameter = fsm.parameter;</span><br><span class="line">    &#125;</span><br><span class="line">    public override void Enter()</span><br><span class="line">    &#123;</span><br><span class="line">       parameter.animator.CrossFade(&quot;Attack&quot;, 0.2f);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Exit()</span><br><span class="line">    &#123;</span><br><span class="line">        time = 5.0f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Vector3.Distance(fsm.transform.position, parameter.targetObj.transform.position) &gt; 3f &amp;&amp; Vector3.Distance(fsm.transform.position, parameter.targetObj.transform.position) &lt; 20f)</span><br><span class="line">        &#123;</span><br><span class="line">            fsm.TransformState(StateType.run);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (Vector3.Distance(fsm.transform.position, parameter.targetObj.transform.position) &gt; 20f)</span><br><span class="line">        &#123;</span><br><span class="line">            fsm.TransformState(StateType.idle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2>三、状态机的使用</h2><p>每一个怪物对象、都给它单独写一个脚本作为状态机控制器，我这里拿的是yousa的模型，于是新建一个yousa.cs继承FSM.cs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class yousa : FSM</span><br><span class="line">&#123;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        states.Add(StateType.idle,new Idle(this));</span><br><span class="line">        states.Add(StateType.stand, new Stand(this));</span><br><span class="line">        states.Add(StateType.run, new Run(this));</span><br><span class="line">        states.Add(StateType.attack, new Attack(this));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Awake方法里注册状态就好。把这个脚本和要用到的组件挂载到怪物身上。<br><img src = "https://www.helloimg.com/i/2024/12/15/675e5ebf7fd1f.png">图片</img></p><h4>后续维护</h4>后续的维护并不困难，假如我们现在又有新状态Skill了，就写一个Skill.cs的脚本，仿照之前几种状态的脚本去写，然后在FSM.cs最上边的枚举，加上这个状态，再在yousa.cs注册一下新状态就好了。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity踩坑记录——角色跟随相机朝向</title>
      <link href="/2024/12/13/Unity%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95%E2%80%94%E2%80%94%E8%A7%92%E8%89%B2%E8%B7%9F%E9%9A%8F%E7%9B%B8%E6%9C%BA%E6%9C%9D%E5%90%91/"/>
      <url>/2024/12/13/Unity%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95%E2%80%94%E2%80%94%E8%A7%92%E8%89%B2%E8%B7%9F%E9%9A%8F%E7%9B%B8%E6%9C%BA%E6%9C%9D%E5%90%91/</url>
      
        <content type="html"><![CDATA[<p>今天做ACT小demo时，打算给角色做一个八方向移动+跟随相机旋转的功能，结果遇到神奇的bug：按下s键时、角色旋转180度面向摄像机倒着跑，按下ad键则是旋转90度。<br>先展示我的代码，大家可以看看，能不能看出来我的bug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">private void CharacterRotation()</span><br><span class="line">&#123;</span><br><span class="line">    //防止其他动作、如受伤也旋转</span><br><span class="line">    if (_HasInput &amp;&amp; animator.AnimationAtTag(&quot;Move&quot;))</span><br><span class="line">    &#123;</span><br><span class="line">        //获得目标旋转角度</span><br><span class="line">        playerRotation =  cameraTrans.eulerAngles.y + Mathf.Atan2(Speed.x,Speed,y) * Mathf.Rad2Deg;</span><br><span class="line">        //过渡一下</span><br><span class="line">        float rotation = Mathf.SmoothDampAngle(this.transform.eulerAngles.y, playerRotation, ref currentVelocity, smoothTime);</span><br><span class="line">        //改变自己的旋转</span><br><span class="line">        transform.rotation = Quaternion.Euler(0f, rotation, 0f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2>解答</h2><b>问题在于，脚本写的不错，但不是给八方向移动写的。</b>一般一些游戏，角色动画喜欢用1D混合树，就比如原神（不得不说还是一个比较不错的参考对象的），你会发现原神里的角色，没有倒着走、左右走这样的动画，主要就靠一个向前走的动画。我的上面的脚本，给这种类型的游戏来说很合适——按下S键角色旋转180度朝后、AD键向左向右旋转90度</br>然而这里我的动画用的是2D混合树、拖了八个方向的动画，按下S键不希望角色旋转180度，再用上边的代码就不行了。最终解决方案，把Mathf.Atan2(Speed.x,Speed,y) * Mathf.Rad2Deg这一句删了就可以了。<hr><p>所以说，制作游戏要考虑游戏定位，不能随便套用。我的打算是做款类似只狼的ACT小demo，那么在移动方面，我需要考虑的应该还有很多，比如角色锁敌，一直朝向敌人，用Quaternion.Slerp会好一些。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玩巫兔有感</title>
      <link href="/2024/12/12/%E7%8E%A9%E5%B7%AB%E5%85%94%E6%9C%89%E6%84%9F/"/>
      <url>/2024/12/12/%E7%8E%A9%E5%B7%AB%E5%85%94%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>最近想试着制作ACT游戏demo，然而困难很多，总结下原因：要求太高，第一个demo就想做出功能丰富的战斗系统;基础不牢固，一些基础东西总忘记。这时候打开steam上的游戏巫兔，有所感悟。</p><hr><p>《巫兔》这款游戏是个二次元萌化版ACT游戏，整体来看其实游戏逻辑并不复杂，但是口碑却很好。拆解来分析，首先是很简单的相机系统，相机看向角色、角色能跟随相机旋转，也没有鼠标滚轮控制距离、上下移动鼠标改变视角等。</br><br>其次是动画系统，玩家的动画并不复杂，待机、四个闪避动画、两段攻击动画、一个跳跃动画、一个格挡动画、一个受伤动画和死亡动画，还有一个吃药的动画，游戏进行时玩家始终看向Boss。</br><br>要说巫兔不足，和一些高级的游戏比起来肯定有很多：相机太死板、角色动画太单一，等等;但其能有好的口碑，关键在于它的攻击系统做得很好、这一两点抹去了所有的不足。</br><br>于是我思考，我的ACT小demo不一定要做的很复杂，可以参考巫兔，做得简单些。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity之Quaternion和Vector3的API</title>
      <link href="/2024/12/12/Unity%E4%B9%8BQuaternion%E5%92%8CVector3%E7%9A%84API/"/>
      <url>/2024/12/12/Unity%E4%B9%8BQuaternion%E5%92%8CVector3%E7%9A%84API/</url>
      
        <content type="html"><![CDATA[<p>由于我发现我经常记不牢这些API还经常搞混，于是总结一下</p><h2>Quaternion</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">在Unity中，`Quaternion` 类用于表示三维空间中的旋转。以下是你提到的API的传入参数和返回值的总结：</span><br><span class="line"></span><br><span class="line">1. Quaternion.Euler(Vector3) </span><br><span class="line">   - 传入：一个 `Vector3` 对象，表示绕x、y、z轴的旋转角度（以度为单位）。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示由这些欧拉角定义的旋转。</span><br><span class="line"></span><br><span class="line">2.  Quaternion.AngleAxis(float, Vector3) </span><br><span class="line">   -  传入 ：旋转角度（以度为单位）和一个 `Vector3` 对象，表示旋转轴。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示围绕给定轴的旋转。</span><br><span class="line"></span><br><span class="line">3.  Quaternion.FromToRotation(Vector3, Vector3) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象，分别表示初始方向和目标方向。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示从初始方向旋转到目标方向的旋转。</span><br><span class="line"></span><br><span class="line">4.  Quaternion.Inverse(Quaternion) </span><br><span class="line">   -  传入 ：一个 `Quaternion` 对象。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示传入旋转的逆旋转。</span><br><span class="line"></span><br><span class="line">5.  Quaternion.Lerp(Quaternion, Quaternion, float) </span><br><span class="line">   -  传入 ：两个 `Quaternion` 对象和一个插值参数 `t`（在0到1之间）。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示两个旋转之间的线性插值。</span><br><span class="line"></span><br><span class="line">6.  Quaternion.Slerp(Quaternion, Quaternion, float) </span><br><span class="line">   -  传入 ：两个 `Quaternion` 对象和一个插值参数 `t`（在0到1之间）。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示两个旋转之间的球形插值。</span><br><span class="line"></span><br><span class="line">7.  Quaternion.RotateTowards(Quaternion, Quaternion, float) </span><br><span class="line">   -  传入 ：两个 `Quaternion` 对象和一个最大旋转角度。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示从第一个旋转向第二个旋转旋转，但不超过最大旋转角度。</span><br><span class="line"></span><br><span class="line">8.  Quaternion.SetLookRotation(Vector3, Vector3) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象，分别表示“向前”和“向上”的方向。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示使对象面向指定方向的旋转。</span><br><span class="line"></span><br><span class="line">9.  Quaternion.Normalize(Quaternion) </span><br><span class="line">   -  传入 ：一个 `Quaternion` 对象。</span><br><span class="line">   -  返回值 ：一个新的 `Quaternion` 对象，表示标准化（单位长度）的旋转。</span><br><span class="line"></span><br><span class="line">10.  Quaternion.Dot(Quaternion, Quaternion) </span><br><span class="line">    -  传入 ：两个 `Quaternion` 对象。</span><br><span class="line">    -  返回值 ：一个 `float` 值，表示两个旋转之间的点积。</span><br><span class="line"></span><br><span class="line">11. Quaternion.Angle(Quaternion a, Quaternion b)</span><br><span class="line"></span><br><span class="line">    - 传入：两个 Quaternion 对象 a 和 b。</span><br><span class="line">    - 返回值：一个 float 值，表示从旋转 a 到旋转 b 所需的最小角度（以度为单位）</span><br><span class="line">。</span><br><span class="line">12. Quaternion.LookRotation(Vector3 forward, Vector3 upwards = Vector3.up)</span><br><span class="line"></span><br><span class="line">    - 传入：一个 Vector3 对象 forward，表示前方方向；可选的 Vector3 对象 upwards，表示上方方向（默认为 Vector3.up）。</span><br><span class="line">    - 返回值：一个新的 Quaternion 对象，表示使对象朝向 forward 方向并对齐 upwards 方向的旋转</span><br><span class="line">    这些API是Unity中处理三维旋转的常用工具，它们可以帮助开发者在游戏和应用程序中实现复杂的旋转和动画效果。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2>Vector3</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">以下是 `Vector3` 类中提到的函数的总结：</span><br><span class="line"></span><br><span class="line">1.  Vector3.Angle(Vector3 from, Vector3 to) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `from` 和 `to`。</span><br><span class="line">   -  返回值 ：一个 `float` 值，表示两个向量之间的夹角（以度为单位）。</span><br><span class="line"></span><br><span class="line">2.  Vector3.ClampMagnitude(Vector3 vector, float maxLength) </span><br><span class="line">   -  传入 ：一个 `Vector3` 对象 `vector` 和一个 `float` 值 `maxLength`。</span><br><span class="line">   -  返回值 ：一个新的 `Vector3` 对象，其大小被限制为 `maxLength`。</span><br><span class="line"></span><br><span class="line">3.  Vector3.Cross(Vector3 a, Vector3 b) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">   -  返回值 ：一个新的 `Vector3` 对象，表示 `a` 和 `b` 的叉积结果。</span><br><span class="line"></span><br><span class="line">4.  Vector3.Distance(Vector3 a, Vector3 b) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">   -  返回值 ：一个 `float` 值，表示 `a` 和 `b` 之间的距离。</span><br><span class="line"></span><br><span class="line">5.  Vector3.Dot(Vector3 a, Vector3 b) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">   -  返回值 ：一个 `float` 值，表示 `a` 和 `b` 的点积结果。</span><br><span class="line"></span><br><span class="line">6.  Vector3.Lerp(Vector3 a, Vector3 b, float t) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`，以及一个插值参数 `t`（在0到1之间）。</span><br><span class="line">   -  返回值 ：一个新的 `Vector3` 对象，表示 `a` 和 `b` 之间的线性插值结果。</span><br><span class="line"></span><br><span class="line">7.  Vector3.LerpUnclamped(Vector3 a, Vector3 b, float t) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`，以及一个插值参数 `t`（不受0到1限制）。</span><br><span class="line">   -  返回值 ：一个新的 `Vector3` 对象，表示 `a` 和 `b` 之间的线性插值结果。</span><br><span class="line"></span><br><span class="line">8.  Vector3.Max(Vector3 a, Vector3 b) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">   -  返回值 ：一个新的 `Vector3` 对象，其每个分量是 `a` 和 `b` 对应分量的最大值。</span><br><span class="line"></span><br><span class="line">9.  Vector3.Min(Vector3 a, Vector3 b) </span><br><span class="line">   -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">   -  返回值 ：一个新的 `Vector3` 对象，其每个分量是 `a` 和 `b` 对应分量的最小值。</span><br><span class="line"></span><br><span class="line">10.  Vector3.MoveTowards(Vector3 current, Vector3 target, float maxDistanceDelta) </span><br><span class="line">    -  传入 ：一个 `Vector3` 对象 `current`，一个 `Vector3` 对象 `target`，以及一个 `float` 值 `maxDistanceDelta`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示从 `current` 向 `target` 移动，但不超过 `maxDistanceDelta` 指定的距离。</span><br><span class="line"></span><br><span class="line">11.  Vector3.Normalize(Vector3 value) </span><br><span class="line">    -  传入 ：一个 `Vector3` 对象 `value`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `value` 方向上的单位向量。</span><br><span class="line"></span><br><span class="line">12.  Vector3.OrthoNormalize(Vector3 normal, Vector3 tangent) </span><br><span class="line">    -  传入 ：两个 `Vector3` 对象 `normal` 和 `tangent`。</span><br><span class="line">    -  返回值 ：两个单位向量，`normal` 被标准化，`tangent` 被标准化并正交于 `normal`。</span><br><span class="line"></span><br><span class="line">13.  Vector3.Project(Vector3 a, Vector3 b) </span><br><span class="line">    -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `a` 在 `b` 上的投影。</span><br><span class="line"></span><br><span class="line">14.  Vector3.ProjectOnPlane(Vector3 vector, Vector3 planeNormal) </span><br><span class="line">    -  传入 ：一个 `Vector3` 对象 `vector` 和一个 `Vector3` 对象 `planeNormal`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `vector` 在由 `planeNormal` 定义的平面上的投影。</span><br><span class="line"></span><br><span class="line">15.  Vector3.Reflect(Vector3 inDirection, Vector3 inNormal) </span><br><span class="line">    -  传入 ：一个 `Vector3` 对象 `inDirection` 和一个 `Vector3` 对象 `inNormal`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `inDirection` 从由 `inNormal` 定义的平面反射的结果。</span><br><span class="line"></span><br><span class="line">16.  Vector3.RotateTowards(Vector3 current, Vector3 target, float maxRadiansDelta, float maxMagnitudeDelta) </span><br><span class="line">    -  传入 ：一个 `Vector3` 对象 `current`，一个 `Vector3` 对象 `target`，以及两个 `float` 值 `maxRadiansDelta` 和 `maxMagnitudeDelta`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `current` 向 `target` 旋转，但不超过 `maxRadiansDelta` 和 `maxMagnitudeDelta` 指定的角度和大小变化。</span><br><span class="line"></span><br><span class="line">17.  Vector3.Scale(Vector3 a, Vector3 b) </span><br><span class="line">    -  传入 ：两个 `Vector3` 对象 `a` 和 `b`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，其每个分量是 `a` 和 `b` 对应分量的乘积。</span><br><span class="line"></span><br><span class="line">18.  Vector3.SignedAngle(Vector3 from, Vector3 to, Vector3 axis) </span><br><span class="line">    -  传入 ：三个 `Vector3` 对象 `from`、`to` 和 `axis`。</span><br><span class="line">    -  返回值 ：一个 `float` 值，表示 `from` 和 `to` 相对于 `axis` 的有符号夹角（以弧度为单位）。</span><br><span class="line"></span><br><span class="line">19.  Vector3.Slerp(Vector3 a, Vector3 b, float t) </span><br><span class="line">    -  传入 ：两个 `Vector3` 对象 `a` 和 `b`，以及一个插值参数 `t`（在0到1之间）。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `a` 和 `b` 之间的球形插值结果。</span><br><span class="line"></span><br><span class="line">20.  Vector3.SlerpUnclamped(Vector3 a, Vector3 b, float t) </span><br><span class="line">    -  传入 ：两个 `Vector3` 对象 `a` 和 `b`，以及一个插值参数 `t`（不受0到1限制）。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `a` 和 `b` 之间的球形插值结果。</span><br><span class="line"></span><br><span class="line">21.  Vector3.SmoothDamp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed, float deltaTime) </span><br><span class="line">    -  传入 ：一个 `Vector3` 对象 `current`，一个 `Vector3` 对象 `target`，一个 `Vector3` 引用 `currentVelocity`，一个 `float` 值 `smoothTime`，一个 `float` 值 `maxSpeed`，和一个 `float` 值 `deltaTime`。</span><br><span class="line">    -  返回值 ：一个新的 `Vector3` 对象，表示 `current` 随时间平滑过渡到 `target` 的结果。</span><br><span class="line"></span><br><span class="line">这些函数在Unity中用于处理向量运算，包括角度计算、大小限制、插值、投影等，广泛应用于物理计算、动画制作和游戏开发中。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果想要得到局部方向，比如局部Z方向，只需要this.transfrom.rotation * Vector3.forward</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity，UI之音量控制</title>
      <link href="/2024/12/11/Unity%EF%BC%8CUI%E4%B9%8B%E9%9F%B3%E9%87%8F%E6%8E%A7%E5%88%B6/"/>
      <url>/2024/12/11/Unity%EF%BC%8CUI%E4%B9%8B%E9%9F%B3%E9%87%8F%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>今天花3小时写了个简单的音量控制器，还是参考唐老狮的视频…不管怎么说也是写出来了，感觉理论到实践还是挺难的，经常出Bug,于是记录一下思路和踩的坑。</p><h3>整体思路</h1>打算先写好BaseUI和UIManager两个脚本（另一篇文章有写UI管理器逻辑），然后写好BeginPanel和SetPanel;音乐部分首先写一个GameDataMgr作为游戏数据管理器，写一个MusicData记录初始数据，在场上创建空物体BKMusic挂载AudioSource脚本控制音乐播放，给SetPanel写一个同样名字的脚本。创建一个Main的空物体，挂载Main.cs脚本，Main.cs里调用UIManager的逻辑使BeginPanel刚开始运行时就出现。</br>大体流程是，运行项目，首先Main.cs调用UIManager.Instance.ShowPanel<SetPanel>();我们点击设置按钮、会调出SetPanel，点击SetPanel右上角叉号会隐藏并在场景删除SetPanel;BKMusic向外部提供方法控制身上AudioSource组件的mute和volumn<img src ="https://www.helloimg.com/i/2024/12/11/675963f6c6f58.png"></img><h3>踩坑记录</h3><b>1.未能实例化出物体</b>。运行好几次，总告诉我未能实例化出物体，不聪明的我用Debug.Log和try...catch来找Bug,发现这类问题一般有两个。一是资源路径填错，Resources.Load根本找不到文件、那就加载不出来;二是单例模式写错了，我只写了private static T instance;但是我从未给instance赋值O_o，于是出bug。<p><b>2.一个等号引发的悲剧</b>我点开设置面板、关闭后就点不开了，于是我去检查我的代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.Events;</span><br><span class="line"></span><br><span class="line">public abstract class BaseUI : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private CanvasGroup canvasGroup;</span><br><span class="line">    //淡入淡出速度</span><br><span class="line">    public float alphaSpeed = 5.0f;</span><br><span class="line"></span><br><span class="line">    private bool isShow = false;</span><br><span class="line"></span><br><span class="line">    private UnityAction _action = null;</span><br><span class="line"></span><br><span class="line">    protected virtual void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        //初始化</span><br><span class="line">        Init();</span><br><span class="line">    &#125;</span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        canvasGroup = GetComponent&lt;CanvasGroup&gt;();</span><br><span class="line">        if (canvasGroup == null )</span><br><span class="line">            canvasGroup = this.AddComponent&lt;CanvasGroup&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">        if (!isShow &amp;&amp; canvasGroup.alpha &gt; 0f)</span><br><span class="line">        &#123;</span><br><span class="line">            canvasGroup.alpha -= Time.deltaTime * alphaSpeed;</span><br><span class="line">            if (canvasGroup.alpha &lt; 0f )</span><br><span class="line">            &#123;</span><br><span class="line">                canvasGroup.alpha = 0f;</span><br><span class="line">                _action?.Invoke();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ShowMe()...</span><br><span class="line">    public void HideMe(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        isShow = false;</span><br><span class="line">        _action = action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected abstract void Init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>问题就出在if (canvasGroup.alpha &lt; 0f )这一句代码，因为alpha一般不会小于0，我写的委托_action根本不会调用，而_action这个委托里写的是销毁SetPanel面板，结果就是面板没有销毁，再次点“设置的时候”给你生成面板了，但这个面板是透明的，给人一种点不开的错觉。</p><hr><p><b>3.拖动条数据不保存。</b>音乐数据保存逻辑是这样的，GameDataMgr里专门有一个MusicData类型的变量musicData，我们拖动滑动条、会改变musicData里的数据，这个musicData的数据影响BKMusic的数据。<br><br>我在写代码时，发现每次点开游戏音量条都是0，找了半天Bug发现自己没有初始化，以及把滑动条的值传给musicData，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class SetPanel : BaseUI</span><br><span class="line">&#123;</span><br><span class="line">    public Button btnClose;</span><br><span class="line">    public Toggle toggleMusic;</span><br><span class="line">    public Toggle toggleSound;</span><br><span class="line">    public Slider sliderMusic;</span><br><span class="line">    public Slider sliderSound;</span><br><span class="line">    protected override void Init()</span><br><span class="line">    &#123;</span><br><span class="line">        //我发现我没初始化</span><br><span class="line">        MusicData data = GameDataMgr.Instance.musicData;</span><br><span class="line">        toggleMusic.isOn = data.musicOpen;</span><br><span class="line">        toggleSound.isOn = data.soundOpen;</span><br><span class="line">        sliderMusic.value = data.MusicValue;</span><br><span class="line">        sliderSound.value = data.SoundValue;</span><br><span class="line">        btnClose.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            GameDataMgr.Instance.SaveMusicData();</span><br><span class="line">            UIManager.Instance.HidePanel&lt;SetPanel&gt;();</span><br><span class="line">            //关闭的时候我们再保存数据</span><br><span class="line">        &#125;);</span><br><span class="line">        //音乐开关</span><br><span class="line">        toggleMusic.onValueChanged.AddListener((v) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            GameDataMgr.Instance.musicData.musicOpen = v;</span><br><span class="line">            BKMusic.Instance.SetIsOpen(v);</span><br><span class="line">        &#125;);</span><br><span class="line">        //音效开关</span><br><span class="line">        toggleSound.onValueChanged.AddListener((v) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            GameDataMgr.Instance.musicData.soundOpen = v;</span><br><span class="line">        &#125;);</span><br><span class="line">        //音乐大小</span><br><span class="line">        sliderMusic.onValueChanged.AddListener((v) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            //我发现我都没去把v值传给musicData</span><br><span class="line">            GameDataMgr.Instance.musicData.MusicValue = v;</span><br><span class="line">            BKMusic.Instance.ChangeValue(v);</span><br><span class="line">        &#125;);</span><br><span class="line">        //音效大小</span><br><span class="line">        sliderSound.onValueChanged.AddListener((v) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            //音效值</span><br><span class="line">            GameDataMgr.Instance.musicData.SoundValue = v;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity之UI管理器</title>
      <link href="/2024/12/01/Unity%E4%B9%8BUI%E7%AE%A1%E7%90%86%E5%99%A8/"/>
      <url>/2024/12/01/Unity%E4%B9%8BUI%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>这月要开始备战期末考试了，尤其是系统解剖，因此没太多时间学习Unity，本次记录UI管理器。</p></hr><h4>思路记录</h4>首先需要想，我们如何去做UI管理器？根据我对“面向对象编程”的思考，我们需要找到不同的UI的共同点——它们都有一个ShowPanel(显示面板)和HidePanel(隐藏面板)的方法，这是共同性;它们的差异性在于不同UI逻辑不同，那就用抽象方法，根据具体差异书写不同逻辑。</br>其次，UI管理器只能有一个，那就想到了单例模式。我们把不同UI做成预设体存在Resources文件夹，通过单例模式+泛型实现显示面板、隐藏面板的方法：ShowPanel<LogPanel>,ShowPanel<AttackPanel>,这样就很方便。</hr>于是我们需要写两个基础的脚本，第一个是BasePanel，所有UI面板的基类,并声明为抽象类：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.Events;</span><br><span class="line"></span><br><span class="line">public abstract class BasePanel : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    //声明组件用于全体管理</span><br><span class="line">    private CanvasGroup canvasGroup;</span><br><span class="line">    //淡入淡出速度</span><br><span class="line">    public float alphaSpeed = 10f;</span><br><span class="line">    private bool isShow = false;</span><br><span class="line">    //面板隐藏后要做的事情</span><br><span class="line">    private UnityAction hideCallBack = null;</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        canvasGroup = GetComponent&lt;CanvasGroup&gt;();</span><br><span class="line">        if (canvasGroup == null)</span><br><span class="line">            canvasGroup = this.AddComponent&lt;CanvasGroup&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    protected virtual void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        Init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //不同的UI有不同的逻辑，写在Init方法里</span><br><span class="line">    protected abstract void Init();</span><br><span class="line"></span><br><span class="line">    public virtual void Showme()</span><br><span class="line">    &#123;</span><br><span class="line">        canvasGroup.alpha = 0f;</span><br><span class="line">        isShow = true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public virtual void HideMe(UnityAction callback)</span><br><span class="line">    &#123;</span><br><span class="line">        canvasGroup.alpha = 1.0f;</span><br><span class="line">        isShow = false;</span><br><span class="line">        hideCallBack = callback;</span><br><span class="line">    &#125;</span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (isShow &amp;&amp; canvasGroup.alpha != 1f)</span><br><span class="line">        &#123;</span><br><span class="line">            canvasGroup.alpha += Time.deltaTime * alphaSpeed;</span><br><span class="line">            if (canvasGroup.alpha == 1f)</span><br><span class="line">                canvasGroup.alpha = 1f;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (!isShow &amp;&amp; canvasGroup.alpha != 0f)</span><br><span class="line">        &#123;</span><br><span class="line">            canvasGroup.alpha -= Time.deltaTime * alphaSpeed;</span><br><span class="line">            if (canvasGroup.alpha == 0f)</span><br><span class="line">            &#123;</span><br><span class="line">                canvasGroup.alpha = 0f;</span><br><span class="line">                hideCallBack?.Invoke();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后再来写UI管理器具体的逻辑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections.Generic;</span><br><span class="line">using Unity.VisualScripting.FullSerializer;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class UIManager</span><br><span class="line">&#123;</span><br><span class="line">    public static UIManager instance = new UIManager();</span><br><span class="line">    public static UIManager Instance =&gt; instance;</span><br><span class="line">    private Transform canvasTrans;</span><br><span class="line"></span><br><span class="line">    //字典存储</span><br><span class="line">    private Dictionary&lt;string,BasePanel&gt; panelDic = new Dictionary&lt;string,BasePanel&gt;();</span><br><span class="line">    //显示面板</span><br><span class="line">    public T ShowPanel&lt;T&gt;() where T : BasePanel</span><br><span class="line">    &#123;</span><br><span class="line">        //获取面板名称</span><br><span class="line">        string panelName = typeof(T).Name;</span><br><span class="line">        //检测是不是有了</span><br><span class="line">        if(panelDic.ContainsKey(panelName) )</span><br><span class="line">            return panelDic[panelName] as T;</span><br><span class="line">        //如果没有我们就实例化一个UI</span><br><span class="line">        GameObject panelObj = GameObject.Instantiate(Resources.Load&lt;GameObject&gt;(&quot;UI&quot; + panelName));</span><br><span class="line">        //把这个对象放到场景Canvas下边</span><br><span class="line">        panelObj.transform.SetParent(canvasTrans, false);</span><br><span class="line">        //获取这个UI上的脚本</span><br><span class="line">        T panel = panelObj.GetComponent&lt;T&gt;();</span><br><span class="line">        //把这个脚本存在字典里</span><br><span class="line">        panelDic.Add(panelName, panel);</span><br><span class="line">        panel.Showme();</span><br><span class="line">        return panel;</span><br><span class="line">    &#125;</span><br><span class="line">    //UIManager的构造函数</span><br><span class="line">    public UIManager()</span><br><span class="line">    &#123;</span><br><span class="line">        //得到场景的Canvas对象</span><br><span class="line">        GameObject canvas = GameObject.Instantiate(Resources.Load&lt;GameObject&gt;(&quot;UI/Canvas&quot;));</span><br><span class="line">        canvasTrans = canvas.transform;</span><br><span class="line">        GameObject.DontDestroyOnLoad(canvas);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //隐藏面板,isFade用来控制你想不想实现UI淡入淡出效果</span><br><span class="line">    public void HidePanel&lt;T&gt;(bool isFade = true)where T : BasePanel</span><br><span class="line">    &#123;</span><br><span class="line">        string panelName = typeof(T).Name;</span><br><span class="line">        if(panelDic.ContainsKey(panelName) )</span><br><span class="line">        &#123;</span><br><span class="line">            if(isFade)</span><br><span class="line">            &#123;</span><br><span class="line">                panelDic[panelName].HideMe(() =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    GameObject.Destroy(panelDic[panelName].gameObject);</span><br><span class="line">                    panelDic.Remove(panelName);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                //删除UI</span><br><span class="line">                GameObject.Destroy(panelDic[panelName].gameObject);</span><br><span class="line">                panelDic.Remove(panelName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public T GetPanel&lt;T&gt;() where T: BasePanel</span><br><span class="line">    &#123;</span><br><span class="line">        string panelName = typeof(T).Name;</span><br><span class="line">        if(panelDic.ContainsKey(panelName) )</span><br><span class="line">            return panelDic[panelName] as T;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Gal引擎】Light.VN教程(序言)</title>
      <link href="/2024/11/28/%E3%80%90Gal%E5%BC%95%E6%93%8E%E3%80%91Light-VN%E6%95%99%E7%A8%8B/"/>
      <url>/2024/11/28/%E3%80%90Gal%E5%BC%95%E6%93%8E%E3%80%91Light-VN%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>light.vn引擎是日本游戏开发者BerserkD开发的游戏引擎（作者本人在b站有账号），采用C++语言开发，主要用于视觉小说游戏开发，也可以用来开发一些简单的RPG游戏和3D游戏，开发时间已有10年有余。</p><hr><p>目前该引擎国内开发者很少(国内貌似renpy引擎更主流些)，据我所知(讲述历史):</br><br>某天群友购买了《Clear Rain》这款同人游戏想要我做AI补丁，我发现该游戏是用Light.VN引擎开发的，于是自学了两星期、在b站写教程(由于我大号被封禁了、稿件也失效了),随后用该引擎开发了同人性质的小游戏(源码链接：<a href="https://www.123865.com/s/RP16Vv-IYtW%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E5%AD%A6%E4%B9%A0)%E3%80%82%E4%B9%8B%E5%90%8E%E6%88%91%E5%9C%A8%E7%BD%91%E4%B8%8A%E7%BB%93%E8%AF%86%E4%BA%86%E5%8F%A6%E4%B8%80%E4%BD%8DLight.VN%E4%BD%BF%E7%94%A8%E8%80%85xiakk%EF%BC%8C%E6%88%91%E5%8E%BByoutube%E6%89%BE%E5%88%B0%E4%BD%9C%E8%80%85BerserkD%E8%B4%A6%E5%8F%B7%E3%80%81%E5%BB%BA%E8%AE%AE%E5%85%B6%E6%B3%A8%E5%86%8CB%E7%AB%99%E8%B4%A6%E5%8F%B7%E3%80%82">https://www.123865.com/s/RP16Vv-IYtW，可以参考学习)。之后我在网上结识了另一位Light.VN使用者xiakk，我去youtube找到作者BerserkD账号、建议其注册B站账号。</a></br><br>目前主要是xiakk与Light.VN引擎开发者联系比较密切，xiakk也在进行Light.VN的汉化工作(github项目:<a href="https://github.com/xiakkto/Light.vn-Chinese-Wiki/wiki)%EF%BC%8C%E5%B9%B6%E5%BB%BA%E8%AE%BE%E4%BA%86QQ%E7%BE%A4(909636560)%EF%BC%8C%E8%A1%A8%E7%A4%BA%E6%84%9F%E8%B0%A2%E3%80%82">https://github.com/xiakkto/Light.vn-Chinese-Wiki/wiki)，并建设了QQ群(909636560)，表示感谢。</a></p><hr><p>半年前我试着边学边做，边写了Light.VN的一些基础教程，b站封禁后打算把这些东西搬运过来、有时间再优化一下，希望能帮助、吸引更多Light.VN的使用者。</p>]]></content>
      
      
      <categories>
          
          <category> galgame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新乡医学院生物医学工程专业介绍</title>
      <link href="/2024/11/28/%E6%96%B0%E4%B9%A1%E5%8C%BB%E5%AD%A6%E9%99%A2%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E5%B7%A5%E7%A8%8B%E4%B8%93%E4%B8%9A%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/11/28/%E6%96%B0%E4%B9%A1%E5%8C%BB%E5%AD%A6%E9%99%A2%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E5%B7%A5%E7%A8%8B%E4%B8%93%E4%B8%9A%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>本文打算粗略介绍一下我所学的专业，一方面是满足别人的好奇心：理理你上的什么大学、学什么专业哇？另一方面给家长和同学留下参考（每年的大一学生、或者准大一学生总是感到很迷茫），另一方面也算是我的生物医学工程导论结课作业。</p><hr><h3 id="Q-介绍一下本校的生物医学工程专业"><a href="#Q-介绍一下本校的生物医学工程专业" class="headerlink" title="Q:介绍一下本校的生物医学工程专业"></a>Q:介绍一下本校的生物医学工程专业</h3><p>生物医学工程专业是交叉学科，不同学校的办学风格不同，有的学校偏向理工、有的学校偏向医学，由于本校是医学院校，因此偏向医学。</br><br>研究方向有很多，比较热门的主要是医疗器材、医学材料研发，在新生见面会上老师放的毕业生名单里，毕业生主要去向是医院的医疗设备科、医疗相关研发公司，也有进入电子行业、计算机行业的学生(相对比较少)。</p><p>新乡医学院生物医学工程专业于2002年申请下来，2003年迎来第一届学生，在本省是第二个申请该专业的院校（第一个是郑州大学）。据老师所说，郑州大学生物医学工程专业快消失了。</br><br>除去郑州大学，本省开设同专业的学校有，新乡学院、河南科技大学、河南师范大学。本校本科毕业生大多去向为跨省考研(本校没保研资格)，考研率60%~70%（基于往年数据），本科毕业多从事医疗器材销售、维护。</p><hr><h3 id="Q-你们学什么内容？"><a href="#Q-你们学什么内容？" class="headerlink" title="Q:你们学什么内容？"></a>Q:你们学什么内容？</h3><p>以下是我们老师在新生见面会给我们展示的,分为五大模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">一、人文科学素养模块：</span><br><span class="line">思想道德修养与法律基础</span><br><span class="line">大学语文</span><br><span class="line">英语</span><br><span class="line">军事理论</span><br><span class="line">大学生心理健康</span><br><span class="line">艺术教育课</span><br><span class="line">形势与政策</span><br><span class="line">创业基础</span><br><span class="line">职业发展与就业指导</span><br><span class="line">医学伦理学</span><br><span class="line">生物医学工程导论</span><br><span class="line">大学物理</span><br><span class="line">高等数学</span><br><span class="line">计算机基础</span><br><span class="line"></span><br><span class="line">二、医学信号检测处理能力：</span><br><span class="line">人体解剖学</span><br><span class="line">生理学</span><br><span class="line">高等数学</span><br><span class="line">大学物理</span><br><span class="line">临床医学概要</span><br><span class="line">线性代数</span><br><span class="line">复变函数</span><br><span class="line">概率论与数理统计</span><br><span class="line">C语言程序设计</span><br><span class="line">Matlab应用与程序设计</span><br><span class="line">信号与线性系统</span><br><span class="line">数字信号处理</span><br><span class="line">生物医学传感器</span><br><span class="line">单片机与嵌入式系统</span><br><span class="line">医学图像处理</span><br><span class="line">生物医学信号处理</span><br><span class="line"></span><br><span class="line">三、生理系统建模仿真能力：</span><br><span class="line">人体解剖学</span><br><span class="line">生理学</span><br><span class="line">临床医学概要</span><br><span class="line">高等数学</span><br><span class="line">线性代数</span><br><span class="line">临床医学概要</span><br><span class="line">CAD程序设计</span><br><span class="line">工程制图</span><br><span class="line">Matlab应用与程序设计</span><br><span class="line">计算机原理与接口</span><br><span class="line">Visual Basic程序设计</span><br><span class="line">生物医学传感器</span><br><span class="line">单片机与嵌入式系统</span><br><span class="line">医学信号检测处理</span><br><span class="line">生理系统建模仿真</span><br><span class="line"></span><br><span class="line">四、医学仪器维护设计能力：</span><br><span class="line">人体解剖学</span><br><span class="line">生理学</span><br><span class="line">临床医学概要</span><br><span class="line">电路原理</span><br><span class="line">大学物理</span><br><span class="line">模拟电子技术</span><br><span class="line">数字电子技术</span><br><span class="line">EDA技术</span><br><span class="line">Matlab应用与程序设计</span><br><span class="line">计算机原理与接口</span><br><span class="line">生物医学传感器</span><br><span class="line">医学信号检测处理</span><br><span class="line">医学仪器原理</span><br><span class="line">医学影像仪器</span><br><span class="line">单片机与嵌入式系统</span><br><span class="line">医学超声学</span><br><span class="line"></span><br><span class="line">五、拓展创新能力：</span><br><span class="line">文献检索与阅读</span><br><span class="line">基础科研能力培养</span><br><span class="line">工程实践能力培养</span><br><span class="line">创新创业实践训练</span><br><span class="line">专业综合设计</span><br><span class="line">创业基础</span><br><span class="line">职业发展与就业指导</span><br><span class="line">电子工艺实习</span><br><span class="line">电子技术课程设计</span><br><span class="line">社会实践</span><br><span class="line">医疗仪器实习</span><br><span class="line">金工实习</span><br><span class="line">毕业设计</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我进行了整理，去掉重复的是这些,总共51门课程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">思想道德修养与法律基础</span><br><span class="line">大学语文</span><br><span class="line">英语</span><br><span class="line">军事理论</span><br><span class="line">大学生心理健康</span><br><span class="line">艺术教育课</span><br><span class="line">形势与政策</span><br><span class="line">创业基础</span><br><span class="line">职业发展与就业指导</span><br><span class="line">医学伦理学</span><br><span class="line">生物医学工程导论</span><br><span class="line">大学物理</span><br><span class="line">高等数学</span><br><span class="line">计算机基础</span><br><span class="line">人体解剖学</span><br><span class="line">生理学</span><br><span class="line">临床医学概要</span><br><span class="line">线性代数</span><br><span class="line">复变函数</span><br><span class="line">概率论与数理统计</span><br><span class="line">C语言程序设计</span><br><span class="line">Matlab应用与程序设计</span><br><span class="line">信号与线性系统</span><br><span class="line">数字信号处理</span><br><span class="line">生物医学传感器</span><br><span class="line">单片机与嵌入式系统</span><br><span class="line">医学图像处理</span><br><span class="line">生物医学信号处理</span><br><span class="line">CAD程序设计</span><br><span class="line">工程制图</span><br><span class="line">Visual Basic程序设计</span><br><span class="line">医学信号检测处理</span><br><span class="line">生理系统建模仿真</span><br><span class="line">电路原理</span><br><span class="line">模拟电子技术</span><br><span class="line">数字电子技术</span><br><span class="line">EDA技术</span><br><span class="line">医学仪器原理</span><br><span class="line">医学影像仪器</span><br><span class="line">医学超声学</span><br><span class="line">文献检索与阅读</span><br><span class="line">基础科研能力培养</span><br><span class="line">工程实践能力培养</span><br><span class="line">创新创业实践训练</span><br><span class="line">专业综合设计</span><br><span class="line">电子工艺实习</span><br><span class="line">电子技术课程设计</span><br><span class="line">社会实践</span><br><span class="line">医疗仪器实习</span><br><span class="line">金工实习</span><br><span class="line">毕业设计</span><br></pre></td></tr></table></figure><hr><h3 id="Q-校园评价"><a href="#Q-校园评价" class="headerlink" title="Q:校园评价"></a>Q:校园评价</h3><p>优点：一本院校（没错，是一本），本校学风优良、学习氛围还是比较好的。问我教学？上大学不都主打自学吗（笑），食堂物美价廉（五块钱爱心午餐点赞！），管理严格规范。<br>缺点：校园环境不好，宿舍条件差，校区太小（学生多在南校区、西校区上课，吐槽还不如我高中O_o），专业单一（本身也是医学院校，土木工程、计算机科学与技术等专业学校是没有的）。最后吐槽动漫社被打压，学校没有动漫社、galgame社团等T_T</p><hr><p>最后记录一下我的想法吧。一方面我不喜欢本专业，一些教学内容感到比较吃力;另一方面本科毕业、没有学历和专业优势，于是打算跨专业考研。至于跨专业考研，则是另一件迷茫的事情了：跨考什么专业？如何跨考？</br><br>我初步的想法是，跨考计算机408。一方面本专业本来学的内容就又多又杂、有50多门课,但几乎和计科没什么大的联系和共通性;另一方面计算机也是很卷，倒是比较困难了，如今还是挺迷茫的。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 专业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity游戏demo记录</title>
      <link href="/2024/11/16/Unity%E6%B8%B8%E6%88%8F%E9%9C%80%E6%B1%82%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/11/16/Unity%E6%B8%B8%E6%88%8F%E9%9C%80%E6%B1%82%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>本文用于详细记录我想实现的demo的游戏功能，我感觉需要先有目标才能做好。</p><h1>demo概述</h1>demo是一款简单的ACT游戏，类似《只狼》简化版，场景中有一个boss。通过格挡、刀砍、把boss打死算获胜。</br><b>玩家需求：</b>WASD控制移动，鼠标左键攻击，右键格挡，有一套组合技;有格挡值、生命值，Shift向前冲刺，S+Shift向后闪避，A/D+Shift分别向左和向右闪避。</br><b>Boss需求：</b>有几套组合技，通过有限状态机控制Boss状态，有生命值、格挡值，格挡值被打满进入硬直状态，可以进行格挡</br><b>UI需求：</b>有开始界面、游戏界面、设置界面、退出界面；显示角色血条格挡值和Boss血条格挡值。<b>玩家拓展部分(可选)：</b>按U键发射飞镖。音乐音效方面简单配置即可。***以上就是一个简单的游戏需求。]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学三个月Unity后的经验</title>
      <link href="/2024/11/16/%E5%AD%A6%E4%B8%89%E4%B8%AA%E6%9C%88Unity%E5%90%8E%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
      <url>/2024/11/16/%E5%AD%A6%E4%B8%89%E4%B8%AA%E6%9C%88Unity%E5%90%8E%E7%9A%84%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>突然想写一写，觉得对于想学习游戏开发的朋友，帮助应该挺大的。</p><hr><p>很多Unity学习者，状态和我一样：会使用Unity，也会C#编程，但你问我会不会开发游戏，我表示不会…</br><br>明明已经会编程了，接口、继承、事件委托张口就来、代码写得行云流水；明明已经会用Unity这款软件了，为什么还不会游戏开发？</p><hr><p>这里我想到一个很好的比喻，是“建房子”。我们Unity学习者就像工人，学习Unity和C#,相当于在学习一些技能：怎样抹水泥、怎样打钢筋，到现在，这些我们都是会的。</br><br>然而建房子的精髓是什么？是如何设计这座房子、怎么把房子设计得好看，不光有工人挥洒汗水、背后还有一个拿着设计图纸的人，缺少的主要就是这些了。就像武林高手比武，不光要有招式、更要有深厚的内力。</p><p>我也看了很多教程，最终我觉得，学习Unity和“游戏开发”不是一回事，说到底，Unity和C#只是游戏开发的工具，不是游戏开发本身。市面上好多课，感觉其实挺不值的。跟着别人的视频、照猫画虎把游戏做出来，发个视频展示下成果，貌似也很有成就感，但实际上还是什么也不会。</br><br>我感觉吧，最好的学习方式是结合具体需求去完善相关功能，可以先去参考市面上一些常见的游戏，了解到自己“具体想做什么游戏”，“有什么样的需求”，之后再针对需求有目的性的学习、最好靠自己力量去实现，不要总想着抄别人代码，自己先试着实现一番。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>伍六七——拥抱自己</title>
      <link href="/2024/11/16/%E4%BC%8D%E5%85%AD%E4%B8%83%E2%80%94%E2%80%94%E6%8B%A5%E6%8A%B1%E8%87%AA%E5%B7%B1/"/>
      <url>/2024/11/16/%E4%BC%8D%E5%85%AD%E4%B8%83%E2%80%94%E2%80%94%E6%8B%A5%E6%8A%B1%E8%87%AA%E5%B7%B1/</url>
      
        <content type="html"><![CDATA[<p>前伍六七第六集、第七集比较水，招致很多观众不满，评分跌破7.5分，啊哈大概看见了观众不满的声音，这周三《伍六七之记忆碎片》一连更新两集。第八集感觉中规中矩，第九集可谓信息量炸裂，交代了首席的身世，同时强化主旨和核心，令我印象深刻。</p><hr><p>在第九集中，有一个画面我印象很深刻，伍六七拥抱着过去满是戾气的自己。当时伍六七得知真相，无眼法师预测伍六七会展开复仇、准备杀掉阿七，然而阿七接受了自己的过去。“我已经和以前不一样了”，阴霾散去，阳光迎来。</p><p>之所以感触深，大概有两点吧。第一点是，伍六七和很多人很像，我能从伍六七身上看到自己曾经的影子(但是是负面意义的)：逃避过去、逃避自己。很多人一直不能与自己、与过去和解，厌恶自己的过往、讨厌曾经或者现在的自己;亦或是有很多后悔和遗憾:我以前要是怎么样怎么样就好了，我有着如何不堪回首的过往和经历。否定自己的过去，否定曾经的自己。</br><br>然而，我觉得阿七身上传递出一个很正的价值观——接纳自己、拥抱过去。无论过去怎么不堪，但其实，正是有了过去的你、才有了现在的你自己，过去的你构成了现在的你，否定过去、既否定你自己。拥抱过去、接纳自己、与自己和解。</p><p>另一点是，在剧情中，阿七经历了很多痛苦、有着不堪回首的经历，但他反而心态上更乐观豁达了，其实这也反映了阿七内心变得更成熟了。很多人在经历痛苦后，心态上反而变得更好了、人变得更豁达了，反而没那么多戾气了。这点不是“变麻木了”、“麻木到感受不到痛苦了、不反抗痛苦了”，而是变得更成熟、冷静和稳重了，在自身能力范围内、能切切实实去做的事情就去做;自身暂时无法解决的痛苦来源，不被束缚、以豁达的态度去面对。</p><hr><p>感觉，能从第九集身上看到很多人的模样：自我贬低者、否定过去者、逃避现实者、苦难宣扬者、精神内耗者。我也能看到自己的影子，我每过一段时间都觉得自己变化很大，以前我戾气和负能量很大，现在我反而有种“重获新生”、“焕然一新”的感觉，倡导正能量、分享记录知识。正如第九集传递的，我从来不会去否定过去的自己，没有过去的自己、就不会有现在的自己，否定过去、即否定自己。</p>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity框架之计时器</title>
      <link href="/2024/11/13/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E8%AE%A1%E6%97%B6%E5%99%A8/"/>
      <url>/2024/11/13/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E8%AE%A1%E6%97%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>在学习一项新事物前，要先了解我们的需求是什么，为什么需要计时器。我在试图做ACT游戏demo时，想要给角色加上技能冷却CD，在CD时间内角色不能释放技能，CD后才可以。于是有了需求就开始制作计时器吧。</p><hr><p>计时器主体脚本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public enum TimerWorkState</span><br><span class="line">&#123;</span><br><span class="line">    NONE,</span><br><span class="line">    WORKERING,</span><br><span class="line">    DONE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class GameTimer</span><br><span class="line">&#123;</span><br><span class="line">    private float _startTime;</span><br><span class="line">    private bool _stop;</span><br><span class="line">    private Action _action;</span><br><span class="line">    public TimerWorkState _state;</span><br><span class="line"></span><br><span class="line">    public GameTimer()</span><br><span class="line">    &#123;</span><br><span class="line">        ResetTimer();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 唤醒一个计时器</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;time&quot;&gt;计时时长&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;task&quot;&gt;任务&lt;/param&gt;</span><br><span class="line">    public void CallOut(float time, Action task)</span><br><span class="line">    &#123;</span><br><span class="line">        _startTime = time;</span><br><span class="line">        _action = task;</span><br><span class="line">        _stop = false;</span><br><span class="line">        _state = TimerWorkState.WORKERING;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Working()</span><br><span class="line">    &#123;</span><br><span class="line">        _startTime -= Time.deltaTime;</span><br><span class="line">        if (_startTime &lt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            _action.Invoke();</span><br><span class="line">            _stop = true;</span><br><span class="line">            _state = TimerWorkState.DONE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public TimerWorkState GetTimerState() =&gt; _state;</span><br><span class="line"></span><br><span class="line">    public void ResetTimer()</span><br><span class="line">    &#123;</span><br><span class="line">        _startTime = 0f;</span><br><span class="line">        _stop = true;</span><br><span class="line">        _action = null;</span><br><span class="line">        _state = TimerWorkState.NONE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>计时器管理器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Threading;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UIElements;</span><br><span class="line"></span><br><span class="line">public class TimerManager : SingleMono&lt;TimerManager&gt;</span><br><span class="line">&#123;</span><br><span class="line">    private List&lt;GameTimer&gt; _activeTimers = new List&lt;GameTimer&gt;();</span><br><span class="line">    private Queue&lt;GameTimer&gt; _dormancyTimers = new Queue&lt;GameTimer&gt;();</span><br><span class="line">    [SerializeField] private int _howManyTimer;</span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        InitTimer(_howManyTimer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        TimerWork();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //初始化计时器</span><br><span class="line">    private void InitTimer(int timer)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i = 0; i &lt; timer; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameTimer timer1 = new GameTimer();</span><br><span class="line">            _dormancyTimers.Enqueue(timer1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void TryGetOneTimer(float time,Action action)</span><br><span class="line">    &#123;</span><br><span class="line">        if(_dormancyTimers.Count == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            GameTimer timer = new GameTimer();</span><br><span class="line">            timer.CallOut(time, action);</span><br><span class="line">            _activeTimers.Add(timer);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            GameTimer timer = _dormancyTimers.Dequeue();</span><br><span class="line">            timer.CallOut(time, action); ;</span><br><span class="line">            _activeTimers.Add(timer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void TimerWork()</span><br><span class="line">    &#123;</span><br><span class="line">        if(_activeTimers.Count == 0) return;</span><br><span class="line">        for (int i = 0; i &lt; _activeTimers.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(_activeTimers[i].GetTimerState() == TimerWorkState.WORKERING)</span><br><span class="line">            &#123;</span><br><span class="line">                _activeTimers[i].Working();</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                _dormancyTimers.Enqueue(_activeTimers[i]);</span><br><span class="line">                _activeTimers[i].ResetTimer();</span><br><span class="line">                _activeTimers.Remove(_activeTimers[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity动作系统】急停实现思路</title>
      <link href="/2024/11/12/%E3%80%90Unity%E5%8A%A8%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%91%E6%80%A5%E5%81%9C%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF/"/>
      <url>/2024/11/12/%E3%80%90Unity%E5%8A%A8%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%91%E6%80%A5%E5%81%9C%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>很早前，我在b站看到网友的Unity制作视频，看到丝滑的跑步、冲刺、急停、待机切换，很是羡慕，自己操作起来总是困难重重。</br><br>意识到自身不足后，我又回去补唐老狮的Unity小框架了，我现在的进度是这样的(供参考)：唐老狮C#四部曲、唐老狮Unity入门基础核心、Unity进阶之InputSystem、唐老狮Unity基础小框架。</p><h1>流程</h1>在实现这个简单的动作系统之前，我先进行了三个工作，一是写了单例模式基类脚本，二是把相机逻辑、InputSystem配置和书写好了，三是写(抄袭)了个角色控制器基类脚本。之后才开始实现这个简单的动作系统。<h1>动画系统思路</h1>最先我想用有限状态机FSM+blendtree实现的，但最后还是采用以下的方式(先从比较常规的方法做起来比较好)大体思路是，将跑步动画、冲刺动画装到1D混合树，设置bool变量HasInput、速度变量Speed、bool变量Spring。如果HasInput为false,且Speed小于0.65，从混合树过渡到跑步急停；如果HasInput为true,且Speed大于0.65，从混合树过渡到冲刺急停；至于Spring，按下的时候，会将speed从当前速度往1平滑过渡，松开时再返回到原来速度。欢迎大佬们分享自己的思路和方法。<h1>代码展示</h1>首先写个单例模式，之前写过单例模式的文章，可以去参考一下。</br>然后写角色控制器基类，角色控制器基类需要包含以下内容：地面检测、坡度检测、重力系统、角色移动方向。这段我直接拿的第三方代码魔改的。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line">namespace GUIGUIGUI</span><br><span class="line">&#123;</span><br><span class="line">    [RequireComponent(typeof(CharacterController))]</span><br><span class="line">    public abstract class CharacterMovementControlBase : MonoBehaviour</span><br><span class="line">    &#123;</span><br><span class="line">        //主要拆分一下，</span><br><span class="line">        //1.首先我们创建个球型碰撞范围检测，需要中心点、偏移量、半径（就是检测范围）、检测层级</span><br><span class="line">        //2.其次我们考虑重力，重力加速度（上正下负）、y轴速度、y轴移动方向、y轴速度最大值(防止速度太快了)、下落时间、判断是否下落的最小时间</span><br><span class="line">        protected CharacterController _controller;</span><br><span class="line">        protected Animator _animator;</span><br><span class="line"></span><br><span class="line">        //地面检测</span><br><span class="line">        protected bool _characterIsOnGround;//角色是否在地面</span><br><span class="line">        [SerializeField, Header(&quot;地面检测&quot;)] protected float _characterOffset;//检测偏移量</span><br><span class="line">        [SerializeField] protected float _detectionRange;//检测范围</span><br><span class="line">        [SerializeField] protected LayerMask _whatisGround;//检测层级</span><br><span class="line"></span><br><span class="line">        //重力</span><br><span class="line">        protected readonly float CharacterGravity = -9.8f;//比如角色被击飞，上正下负</span><br><span class="line">        protected float _characterVerticalVelocity;//用来更新角色Y轴速度</span><br><span class="line">        protected float _fallOutDeltaTime;</span><br><span class="line">        protected float _fallOutTime = 0.15f;//用来防止角色下楼梯鬼畜,这个值用于重置下落时间，小于这个值也不播放下落动画</span><br><span class="line">        protected readonly float _characterVerticalMaxVelocity = 54f;//角色低于这个值才应用重力</span><br><span class="line">        protected Vector3 _characterVerticalDirection;//角色的Y轴移动方向。我们用CC的Move函数</span><br><span class="line">        protected Vector3 movedirection;</span><br><span class="line">        //初始化组件</span><br><span class="line">        protected virtual void Awake()</span><br><span class="line">        &#123;</span><br><span class="line">            _controller = GetComponent&lt;CharacterController&gt;();</span><br><span class="line">            _animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //初始化数据</span><br><span class="line">        protected virtual void Start()</span><br><span class="line">        &#123;</span><br><span class="line">            _fallOutDeltaTime = _fallOutTime;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Update()</span><br><span class="line">        &#123;</span><br><span class="line">            SetCharacterGracity();</span><br><span class="line">            UpdateCharacterGravity();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        //地面检测</span><br><span class="line">        private bool GroundDetection()</span><br><span class="line">        &#123;</span><br><span class="line">            //检测中心点</span><br><span class="line">            Vector3 detectionPosition = new Vector3(transform.position.x, transform.position.y - _characterOffset, transform.position.z);</span><br><span class="line">            //返回检测范围</span><br><span class="line">            return Physics.CheckSphere(detectionPosition, _detectionRange, (int)_whatisGround, QueryTriggerInteraction.Ignore);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //重力</span><br><span class="line">        private void SetCharacterGracity()</span><br><span class="line">        &#123;</span><br><span class="line">            _characterIsOnGround = GroundDetection();//检测是否在地面上</span><br><span class="line">            //如果角色在地面需要重置FallOutTime和垂直速度</span><br><span class="line">            if (_characterIsOnGround)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                _fallOutDeltaTime = _fallOutTime;</span><br><span class="line">                if (_characterVerticalVelocity &lt; 0f)</span><br><span class="line">                &#123;</span><br><span class="line">                    _characterVerticalVelocity = -2f;//_characterVerticalVelocity是个累积的东西，我们需要重置一下，就重置成-2吧</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            //角色在空中，需要判断是走楼梯还是下落</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                if (_fallOutDeltaTime &gt; 0f)</span><br><span class="line">                &#123;</span><br><span class="line">                    _fallOutDeltaTime -= Time.deltaTime;//0.15秒是帮助角色从较低高度下落，不想播放下跌动画，可以自定义时间的</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    //此刻我们处于空中状态，_fallOutDeltaTime的0.15秒被挥霍完变成0了，在空中0.15秒无法解决下落</span><br><span class="line">                    //说明角色还没有落地，应该不是下楼梯，有必要播下落动画</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (_characterVerticalVelocity &lt; _characterVerticalMaxVelocity)</span><br><span class="line">                &#123;</span><br><span class="line">                    _characterVerticalVelocity += CharacterGravity * Time.deltaTime;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protected virtual void OnAnimatorMove()</span><br><span class="line">        &#123;</span><br><span class="line">            _animator.ApplyBuiltinRootMotion();</span><br><span class="line">            UpdateCharacterMoveDirection(_animator.deltaPosition);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //重力移动模拟</span><br><span class="line">        private void UpdateCharacterGravity()</span><br><span class="line">        &#123;</span><br><span class="line">            _characterVerticalDirection.Set(0, _characterVerticalVelocity, 0);//我天还能用Set方法</span><br><span class="line">            _controller.Move(_characterVerticalDirection * Time.deltaTime);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //坡道检测,返回移动方向</span><br><span class="line">        private Vector3 StopResetDirection(Vector3 moveDirection)</span><br><span class="line">        &#123;</span><br><span class="line">            if (Physics.Raycast(transform.position + (transform.up * 5f), Vector3.down, out RaycastHit hit, _controller.height * .85f,</span><br><span class="line">                (int)_whatisGround, QueryTriggerInteraction.Ignore))</span><br><span class="line">            &#123;</span><br><span class="line">                if (Vector3.Dot(Vector3.up, hit.normal) != 0)//说明在坡上,hit,normal是发现向量，其实我觉得这步检查没必要</span><br><span class="line">                &#123;</span><br><span class="line">                    return moveDirection = Vector3.ProjectOnPlane(moveDirection, hit.normal);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            return moveDirection;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protected void UpdateCharacterMoveDirection(Vector3 Direction)</span><br><span class="line">        &#123;</span><br><span class="line">            movedirection = StopResetDirection(Direction);</span><br><span class="line">            _controller.Move(movedirection * Time.deltaTime);</span><br><span class="line">        &#125;</span><br><span class="line">        //这步没必要，只是方便我们检测。</span><br><span class="line">        private void OnDrawGizmos()</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 detectionPosition = new Vector3(transform.position.x, transform.position.y - _characterOffset, transform.position.z);</span><br><span class="line">            Gizmos.DrawWireSphere(detectionPosition, _detectionRange);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后配置InputAction,把InputAction封装成一个单例，做我们的输入系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class GameInputMgr : SingleMono&lt;GameInputMgr&gt;</span><br><span class="line">&#123;</span><br><span class="line">    private GameInoutAction action;</span><br><span class="line">    public Vector2 Movement =&gt; action.GameInput.Movement.ReadValue&lt;Vector2&gt;();</span><br><span class="line">    public Vector2 CameraLook =&gt; action.GameInput.CameraLook.ReadValue&lt;Vector2&gt;();</span><br><span class="line">    private bool isSpringPressed = false;</span><br><span class="line">    public bool Spring</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (action.GameInput.Spring.triggered)</span><br><span class="line">            &#123;</span><br><span class="line">                isSpringPressed = true;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">            if (isSpringPressed &amp;&amp; !action.GameInput.Spring.IsPressed()) // 检查是否松开</span><br><span class="line">            &#123;</span><br><span class="line">                isSpringPressed = false;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            return isSpringPressed; // 返回当前的按下状态</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        action = new GameInoutAction();</span><br><span class="line">    &#125;</span><br><span class="line">    private void OnEnable()</span><br><span class="line">    &#123;</span><br><span class="line">        action.Enable();</span><br><span class="line">    &#125;</span><br><span class="line">    private void OnDisable()</span><br><span class="line">    &#123;</span><br><span class="line">        action.Disable();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后写相机系统。我没有做相机碰撞检测(因为暂时用不到)</br><br>一个合格的相机，我们如何去设计呢？可以将相机分为位置更新和旋转更新，旋转更新通过鼠标移动、来改变相机xy旋转量。我们玩游戏时鼠标向上、相机反而往下看，这点需要注意。位置更新，设定好相机看向的物体、通过鼠标滚轮缩放改变距离。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class CameraController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Header(&quot;相机旋转速度&quot;)] private float rotateSpeed;</span><br><span class="line">    [SerializeField, Header(&quot;相机平滑速度&quot;)] private float transformSpeed;</span><br><span class="line">    [SerializeField, Header(&quot;相机限制距离&quot;)] private Vector2 cameraMaxDistace;</span><br><span class="line">    [SerializeField, Header(&quot;相机上下角&quot;)] private Vector2 MaxAngle;</span><br><span class="line">    [SerializeField, Header(&quot;相机平滑旋转时间&quot;)] private float smoothTime;</span><br><span class="line">    [SerializeField, Header(&quot;看向物体&quot;)] private Transform LookObject;</span><br><span class="line">    //相机输入</span><br><span class="line">    private Vector2 _input;</span><br><span class="line">    private Vector3 currentVelocity = Vector3.zero;</span><br><span class="line">    private Vector3 rotatePosition;</span><br><span class="line">    private float cameraDistace;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        CameraInput();</span><br><span class="line">        SetDistance();</span><br><span class="line">    &#125;</span><br><span class="line">    private void LateUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        UpdateRotate();</span><br><span class="line">        UpdatePosition();</span><br><span class="line">    &#125;</span><br><span class="line">    private void CameraInput()</span><br><span class="line">    &#123;</span><br><span class="line">        _input.x -= GameInputMgr.GetInstance().CameraLook.y * rotateSpeed;</span><br><span class="line">        _input.y += GameInputMgr.GetInstance().CameraLook.x * rotateSpeed;</span><br><span class="line">        _input.x = Mathf.Clamp(_input.x,MaxAngle.x,MaxAngle.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateRotate()</span><br><span class="line">    &#123;</span><br><span class="line">        rotatePosition = Vector3.SmoothDamp(rotatePosition, new Vector3(_input.x, _input.y, 0f), ref currentVelocity,smoothTime);</span><br><span class="line">        this.transform.eulerAngles = rotatePosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void SetDistance()</span><br><span class="line">    &#123;</span><br><span class="line">        cameraDistace -= Input.GetAxis(&quot;Mouse ScrollWheel&quot;);</span><br><span class="line">        cameraDistace = Mathf.Clamp(cameraDistace, cameraMaxDistace.x, cameraMaxDistace.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdatePosition()</span><br><span class="line">    &#123;</span><br><span class="line">        Vector3 position = (LookObject.position + (-transform.forward * cameraDistace));</span><br><span class="line">        this.transform.position = Vector3.Lerp(this.transform.position , position, Time.deltaTime * transformSpeed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>最后到我们写角色控制器的时候，按照思路如下写：<img src = "https://tuku.chuanxinet.com/i/2024/11/12/屏幕截图-2024-11-12-162331.png">图片</img><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class CameraController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Header(&quot;相机旋转速度&quot;)] private float rotateSpeed;</span><br><span class="line">    [SerializeField, Header(&quot;相机平滑速度&quot;)] private float transformSpeed;</span><br><span class="line">    [SerializeField, Header(&quot;相机限制距离&quot;)] private Vector2 cameraMaxDistace;</span><br><span class="line">    [SerializeField, Header(&quot;相机上下角&quot;)] private Vector2 MaxAngle;</span><br><span class="line">    [SerializeField, Header(&quot;相机平滑旋转时间&quot;)] private float smoothTime;</span><br><span class="line">    [SerializeField, Header(&quot;看向物体&quot;)] private Transform LookObject;</span><br><span class="line">    //相机输入</span><br><span class="line">    private Vector2 _input;</span><br><span class="line">    private Vector3 currentVelocity = Vector3.zero;</span><br><span class="line">    private Vector3 rotatePosition;</span><br><span class="line">    private float cameraDistace;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        CameraInput();</span><br><span class="line">        SetDistance();</span><br><span class="line">    &#125;</span><br><span class="line">    private void LateUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        UpdateRotate();</span><br><span class="line">        UpdatePosition();</span><br><span class="line">    &#125;</span><br><span class="line">    private void CameraInput()</span><br><span class="line">    &#123;</span><br><span class="line">        _input.x -= GameInputMgr.GetInstance().CameraLook.y * rotateSpeed;</span><br><span class="line">        _input.y += GameInputMgr.GetInstance().CameraLook.x * rotateSpeed;</span><br><span class="line">        _input.x = Mathf.Clamp(_input.x,MaxAngle.x,MaxAngle.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateRotate()</span><br><span class="line">    &#123;</span><br><span class="line">        rotatePosition = Vector3.SmoothDamp(rotatePosition, new Vector3(_input.x, _input.y, 0f), ref currentVelocity,smoothTime);</span><br><span class="line">        this.transform.eulerAngles = rotatePosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void SetDistance()</span><br><span class="line">    &#123;</span><br><span class="line">        cameraDistace -= Input.GetAxis(&quot;Mouse ScrollWheel&quot;);</span><br><span class="line">        cameraDistace = Mathf.Clamp(cameraDistace, cameraMaxDistace.x, cameraMaxDistace.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdatePosition()</span><br><span class="line">    &#123;</span><br><span class="line">        Vector3 position = (LookObject.position + (-transform.forward * cameraDistace));</span><br><span class="line">        this.transform.position = Vector3.Lerp(this.transform.position , position, Time.deltaTime * transformSpeed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity框架之事件中心模块</title>
      <link href="/2024/11/09/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%BA%8B%E4%BB%B6%E4%B8%AD%E5%BF%83%E6%A8%A1%E5%9D%97/"/>
      <url>/2024/11/09/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%BA%8B%E4%BB%B6%E4%B8%AD%E5%BF%83%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>本文引入一种常见的设计模式：观察者模式。</p><h1>事件中心模块作用</h1>在玩游戏时经常有这样的场景，你打死了一只怪：怪物爆金币、角色经验提升、角色天赋升级。假如你是游戏开发者，会怎么处理这些逻辑？我最先的想法是这样的：写一个void MonsterDead(){},在里面添加各种方法，GetMoney()、PlayerUpdate()。</br>这样写貌似也没问题，但是当逻辑多起来、维护起来就比较困难了，又杂又乱。用专业的语言来说，就是我们“代码耦合性高”。因此引入事件中心模块。<h1>思路</h1>在军队中，有着指挥部。我们是不是也可以在代码里建立个“指挥部”，把各种命令都交给指挥部来做？<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">//既然是指挥部，那就只有一个，继承单例模式基类</span><br><span class="line">public class EventMgr : SingletonBase&lt;EventMgr&gt;</span><br><span class="line">&#123;</span><br><span class="line">    //我们用字典来存储，思路是，用string来存储游戏里的事件，UnityAction执行触发事件后的一系列方法，比如爆金币、玩家升级</span><br><span class="line">    private Dictionary&lt;string,UnityAction&gt; eventmgr = new Dictionary&lt;string,UnityAction&gt;();</span><br><span class="line">    //我们写事件监听函数</span><br><span class="line">    public void AddEventListener(string name,UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventmgr.ContainsKey(name))</span><br><span class="line">        &#123;</span><br><span class="line">            eventmgr[name] += action;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            eventmgr.Add(name, action);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //游戏事件触发后执行的一系列逻辑</span><br><span class="line">    public void EventTrigger(string name)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!eventmgr.ContainsKey(name))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;指定方法不存在！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            eventmgr[name].Invoke();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//我们假设有个怪物类，触发事件“MonsterDead”</span><br><span class="line">public class Monster : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        EventMgr.GetInstance().EventTrigger(&quot;MonsterDead&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//之后我们玩家，只需要往这个事件里添加方法逻辑就好，往MonsterDead事件里添加函数MonsterDeadDo</span><br><span class="line">public class Player : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        EventMgr.GetInstance().AddEventListener(&quot;MonsterDead&quot;, MonsterDeadDo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 怪物死时要做些什么</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void MonsterDeadDo()</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;玩家得奖励&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就这样，我们的基础事件中心模块就写好了。</p><h1>进阶优化版</h1><p>之前写了个简单的事件管理中心，但它其实是有局限性的，只能传入无参的函数，对于有参的函数就不行了，于是有了v2.0版本。<br>最先想到的是，多声明几个字典，但这样就破坏了管理中心的理念，应该是只有一个字典、能装载不同的函数才对。那么新的思路就是把有参的、无参的都封装成一个，继承同一个接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.Events;</span><br><span class="line"></span><br><span class="line">public class GameEventManager : Single&lt;GameEventManager&gt;</span><br><span class="line">&#123;</span><br><span class="line">    public delegate void MyAction&lt;T1, T2, T3, T4, T5&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);</span><br><span class="line">    private interface IEventHelp</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private class EventHelp : IEventHelp</span><br><span class="line">    &#123;</span><br><span class="line">        public event UnityAction Action;</span><br><span class="line"></span><br><span class="line">        public void AddCall(UnityAction action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action += action;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Call()</span><br><span class="line">        &#123;</span><br><span class="line">            Action?.Invoke();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void RemoveCall(UnityAction action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action -= action;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private class EventHelp&lt;T&gt; : IEventHelp</span><br><span class="line">    &#123;</span><br><span class="line">        public event UnityAction&lt;T&gt; Action;</span><br><span class="line"></span><br><span class="line">        public void AddCall(UnityAction&lt;T&gt; action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action += action;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Call(T param)</span><br><span class="line">        &#123;</span><br><span class="line">            Action?.Invoke(param);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void RemoveCall(UnityAction&lt;T&gt; action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action -= action;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private class EventHelp&lt;T1, T2, T3&gt; : IEventHelp</span><br><span class="line">    &#123;</span><br><span class="line">        public event UnityAction&lt;T1, T2, T3&gt; Action;</span><br><span class="line"></span><br><span class="line">        public void AddCall(UnityAction&lt;T1, T2, T3&gt; action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action += action;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Call(T1 param1, T2 param2, T3 param3)</span><br><span class="line">        &#123;</span><br><span class="line">            Action?.Invoke(param1, param2, param3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void RemoveCall(UnityAction&lt;T1, T2, T3&gt; action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action -= action;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private class EventHelp&lt;T1, T2, T3, T4, T5&gt; : IEventHelp</span><br><span class="line">    &#123;</span><br><span class="line">        public event MyAction&lt;T1, T2, T3, T4, T5&gt; Action;</span><br><span class="line"></span><br><span class="line">        public void AddCall(MyAction&lt;T1, T2, T3, T4, T5&gt; action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action += action;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Call(T1 param1, T2 param2, T3 param3, T4 param4, T5 param5)</span><br><span class="line">        &#123;</span><br><span class="line">            Action?.Invoke(param1, param2, param3, param4, param5);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void RemoveCall(MyAction&lt;T1, T2, T3, T4, T5&gt; action)</span><br><span class="line">        &#123;</span><br><span class="line">            Action -= action;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Dictionary&lt;string, IEventHelp&gt; eventManager = new Dictionary&lt;string, IEventHelp&gt;();</span><br><span class="line"></span><br><span class="line">    // 添加事件监听</span><br><span class="line">    public void AddEventListening(string eventName, UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            eventManager[eventName] = new EventHelp();</span><br><span class="line">        &#125;</span><br><span class="line">        ((EventHelp)eventManager[eventName]).AddCall(action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 添加带参数的事件监听</span><br><span class="line">    public void AddEventListening&lt;T&gt;(string eventName, UnityAction&lt;T&gt; action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            eventManager[eventName] = new EventHelp&lt;T&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        ((EventHelp&lt;T&gt;)eventManager[eventName]).AddCall(action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AddEventListening&lt;T1, T2, T3&gt;(string eventName, UnityAction&lt;T1, T2, T3&gt; action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            eventManager[eventName] = new EventHelp&lt;T1, T2, T3&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        ((EventHelp&lt;T1, T2, T3&gt;)eventManager[eventName]).AddCall(action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AddEventListening&lt;T1, T2, T3, T4, T5&gt;(string eventName, MyAction&lt;T1, T2, T3, T4, T5&gt; action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            eventManager[eventName] = new EventHelp&lt;T1, T2, T3, T4, T5&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        ((EventHelp&lt;T1, T2, T3, T4, T5&gt;)eventManager[eventName]).AddCall(action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 删除事件监听</span><br><span class="line">    public void RemoveEvent(string eventName, UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.RemoveCall(action);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 删除带参数的事件监听</span><br><span class="line">    public void RemoveEvent&lt;T&gt;(string eventName, UnityAction&lt;T&gt; action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp&lt;T&gt;;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.RemoveCall(action);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void RemoveEvent&lt;T1, T2, T3&gt;(string eventName, UnityAction&lt;T1, T2, T3&gt; action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp&lt;T1, T2, T3&gt;;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.RemoveCall(action);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void RemoveEvent&lt;T1, T2, T3, T4, T5&gt;(string eventName, MyAction&lt;T1, T2, T3, T4, T5&gt; action)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp&lt;T1, T2, T3, T4, T5&gt;;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.RemoveCall(action);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 触发事件</span><br><span class="line">    public void InvokeEvent(string eventName)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.Call();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 触发带参数的事件</span><br><span class="line">    public void InvokeEvent&lt;T&gt;(string eventName, T param)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp&lt;T&gt;;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.Call(param);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void InvokeEvent&lt;T1, T2, T3&gt;(string eventName, T1 param1, T2 param2, T3 param3)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp&lt;T1, T2, T3&gt;;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.Call(param1, param2, param3);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void InvokeEvent&lt;T1, T2, T3, T4, T5&gt;(string eventName, T1 param1, T2 param2, T3 param3, T4 param4, T5 param5)</span><br><span class="line">    &#123;</span><br><span class="line">        if (eventManager.ContainsKey(eventName))</span><br><span class="line">        &#123;</span><br><span class="line">            var eventHelp = eventManager[eventName] as EventHelp&lt;T1, T2, T3, T4, T5&gt;;</span><br><span class="line">            if (eventHelp != null)</span><br><span class="line">            &#123;</span><br><span class="line">                eventHelp.Call(param1, param2, param3, param4, param5);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity框架之公共Mono模块</title>
      <link href="/2024/11/09/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%85%AC%E5%85%B1Mono%E6%A8%A1%E5%9D%97/"/>
      <url>/2024/11/09/Unity%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%85%AC%E5%85%B1Mono%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>这篇文章介绍一下公共Mono模块。</p><h1>为什么有公共Mono模块？</h1>很多时候我们写代码，不想继承MonoBehaviour类(比如减少性能开销、简化代码量，MonoBehaviour)，但又想用MonoBehaviour里Update、Start等方法。这时候就需要搭建公共Mono模块来实现我们的需求了。<h1>思路</h1>以实现Update为例，既然我们知道，不继承MonoBehaviour类的不能直接调用Update等方法，那么有没有什么办法、把我们的方法塞到update里呢？</br>答案是有的，这里有个知识点是“委托和事件”，我们可以把我们的方法、塞到委托里，在继承Mono的脚本里调用这个委托就可以了。我们创建一个继承MonoBehaviour的脚本MonoController，我们需要声明委托、还有向委托里添加删除方法的函数：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine.Events;</span><br><span class="line"></span><br><span class="line">public class MonoController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    //我创建两个事件，目的是提高安全性</span><br><span class="line">    private event UnityAction UnityStart;</span><br><span class="line">    private event UnityAction UnityUpdate;</span><br><span class="line">    //调用委托</span><br><span class="line">    private void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        if(UnityStart != null) </span><br><span class="line">            UnityStart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if(UnityUpdate != null)</span><br><span class="line">            UnityUpdate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //开始写我们的函数</span><br><span class="line">    public void AddStart(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        UnityStart += action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AddUpdate(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        UnityUpdate += action;</span><br><span class="line">    &#125;</span><br><span class="line">    public void RemoveStart(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        UnityStart -= action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void RemoveUpdate(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        UnityUpdate -= action;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上就是我们写的一个Mono控制器，接下来我们还需要写一个Mono管理器，既然是管理器我们肯定要继承单例模式基类脚本。管理器接收命令、分发到控制器执行。于是我创建个MonoMgr.cs的脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine.Events;</span><br><span class="line"></span><br><span class="line">public class MonoMgr : SingletonBase&lt;MonoMgr&gt;</span><br><span class="line">&#123;</span><br><span class="line">    //私有化一个控制器，写构造函数</span><br><span class="line">    private MonoController controller;</span><br><span class="line">    public MonoMgr()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject obj = new GameObject(&quot;MonoController&quot;);</span><br><span class="line">        controller = obj.AddComponent&lt;MonoController&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    //书写函数，我们加入的委托会在控制器执行</span><br><span class="line">    public void AddStart(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        controller.AddStart(action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AddUpdate(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        controller.AddUpdate(action);</span><br><span class="line">    &#125;</span><br><span class="line">    public void RemoveStart(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        controller.RemoveStart(action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void RemoveUpdate(UnityAction action)</span><br><span class="line">    &#123;</span><br><span class="line">        controller.RemoveUpdate(action);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来举个例子如何调用它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//我们没继承MonoBehaviour</span><br><span class="line">public class Test1</span><br><span class="line">&#123;</span><br><span class="line">    public void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;示例&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Test : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        Test1 t = new Test1;</span><br><span class="line">        MonoMgr.GetInstance().AddUpdate(t.Update);</span><br><span class="line">        //上面是一个单例里添加方法</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity学习踩坑记录</title>
      <link href="/2024/11/08/Unity%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2024/11/08/Unity%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>现在写可能比较早——因为我现在学Unity还没什么大的成果，有一定成果再来写肯定更好。那么为什么现在写呢，一方面是我现在想要摸鱼写写东西(bushi)，另一方面是希望能把我学Unity走的弯路分享出来，让大家都有借鉴意义。</p><h1>踩坑记录</h1><b>1.企图不学编程、直接做游戏。</b>刚开始时有很多小伙伴听说Unity有第三方插件、可以不写代码直接使用Unity，于是C#也不学了、或者学了一点点就不学了。我只能说，学Unity是避免不了写代码的。</br>学Unity，需要学好C#知识点。包括不限于：方法、属性、委托和事件、泛型、一些数据结构（List、栈、队列、哈希表、字典）、多线程。学好C#不光是学怎么去敲代码，更重要的是一种“面向对象”的思想。所以C#是必须学的。<p><b>2.基础不牢、直接跟进案例去学习。</b>我就是这样…我是看得唐老狮的课，最先把C#核心学完、就直接去学Unity了，结果看到泛型、委托和事件，一脸懵逼的我又回来学习C#进阶了。之后我又把Unity三部曲学完、跟着B站鬼鬼鬼ii的案例去学习，结果发现——代码我都看得懂、但不知道在干嘛。就像一个毫无经验的工人看建大楼，你会砌墙、抹水泥，但不知道要怎么建房子。于是现在又滚回去学Unity基础框架和MVC了;然后我又发现，UI开发、数据持久化这些东西也很重要，于是接下来还要学习UGUI和XML。总之就是一个在不断试错中、慢慢学习的过程。\</p><p><b>3.半途而废，没有决心。</b>在学习过程中，如果没有及时的正反馈结果，人就很容易放弃。Unity也是一样，要学的东西还是比较杂比较多的，做游戏需要综合运用，短期内对于零基础新人来说确实不是很友好。我的建议是，自己创建一个Unity游戏工程，边学边去完善它，一步一步来。</p><p><b>4.眼高手低、缺乏联系、只看不敲。</b>在学Unity的API时，一定要常敲代码，不能只看不敲，Unity的API很多、很容易忘记，敲代码过程中遇到不会的就上网查查、问问AI，再次记忆，多敲就熟练了。最先开始我连单例模式都不会写，现在也慢慢熟悉了。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity实现急停思路</title>
      <link href="/2024/11/01/Unity%E5%AE%9E%E7%8E%B0%E6%80%A5%E5%81%9C%E6%80%9D%E8%B7%AF/"/>
      <url>/2024/11/01/Unity%E5%AE%9E%E7%8E%B0%E6%80%A5%E5%81%9C%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>最近我想打造一个较为丝滑的Unity动作系统，最先我想上网找个案例、跟着案例的步骤来。结果找到的案例是siki学院的，吐槽siki的动作系统做得挺答辩的，我都知道用状态机、它都不用),滑步较为严重。后来又找到鬼鬼鬼ii的Unity课程，结果收费210…在诸多阻力下，我产生大胆想法：没人教、我自己写一个不是更好吗？</p><hr><p><b>先从简单开始</b>，我们先实现最基础的功能：待机、跑步、急停。我的思路是，把待机动画和跑步动画混合在一起。做成一个混合树。混合树有好多类型，我打算采取2D混合树，把待机、向前跑、向后跑、向左跑和向右跑五个动画融合起来，做成一个2D混合树，这样待机和跑步状态就切换比较自然。</p><p>那么如何实现急停呢？我有两个思路。</p><h3 id="思路一：调用动画事件"><a href="#思路一：调用动画事件" class="headerlink" title="思路一：调用动画事件"></a>思路一：调用动画事件</h3><p>思路一是，我们将待机和跑步通过混合树混合在一起，在混合树合适位置加一个动画事件——动画播放到合适位置时调用事件，然后过渡到Run_Stop状态中。<br>我觉得这种思路不太完善，因为“合适位置加一个动画事件”是比较难把握的，看起来可能会有突兀感，于是有了思路2。</p><h3 id="思路二：用多个混合树"><a href="#思路二：用多个混合树" class="headerlink" title="思路二：用多个混合树"></a>思路二：用多个混合树</h3><p>思路二是创建两个混合树，混合树A是待机动画和跑步动画混合在一起，0是完全待机、1是完全跑步。混合树B是跑步动画、急停动画、待机动画混合在一起，0是完全跑步、1是急停后待机。</p><p>当状态机A时，值是1（处于完全跑步状态）、我们调用Exit方法进入B，值是0，正好承接前面的状态，我们划分一下三个状态的权重，这样切换就比较自然了。AI给我提供了新的思路，子状态机之类的，明天再想。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Unity相机旋转脚本</title>
      <link href="/2024/10/30/%E6%89%8B%E5%86%99Unity%E7%9B%B8%E6%9C%BA%E6%97%8B%E8%BD%AC%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/10/30/%E6%89%8B%E5%86%99Unity%E7%9B%B8%E6%9C%BA%E6%97%8B%E8%BD%AC%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>学三个月C#和一个月Unity后，试图边学边开发游戏，首先要解决的便是摄像机。<br>其实Unity是提供了名叫cinemamachine的插件的，功能强大，然而我不想用Unity提供的，想自己手写一个，于是写了一个。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">using Unity.VisualScripting;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class CameraController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public Transform Target;</span><br><span class="line">    [Header(&quot;设置相机看角色头顶多高位置&quot;)]</span><br><span class="line">    public float upLook;</span><br><span class="line">    [Header(&quot;相机竖直方向限制&quot;)]</span><br><span class="line">    public float mYvalue;</span><br><span class="line">    [Header(&quot;鼠标旋转灵敏度&quot;)]</span><br><span class="line">    public float sensitivityMouseRotate = 100f;</span><br><span class="line">    [Header(&quot;鼠标缩放灵敏度&quot;)]</span><br><span class="line">    public float sensitivityMouse = 5f;</span><br><span class="line">    [Header(&quot;相机和人物距离&quot;)]</span><br><span class="line">    public float distance = 5f;</span><br><span class="line"></span><br><span class="line">    private float mX = 0; // 累积X轴旋转</span><br><span class="line">    private float mY = 0; // 累积Y轴旋转</span><br><span class="line"></span><br><span class="line">    void LateUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        Vector3 lookPosition = Target.position + Target.up * upLook;</span><br><span class="line"></span><br><span class="line">        // 累积相机旋转的值</span><br><span class="line">        mX += Input.GetAxis(&quot;Mouse X&quot;) * sensitivityMouseRotate * Time.deltaTime;</span><br><span class="line">        mY -= Input.GetAxis(&quot;Mouse Y&quot;) * sensitivityMouseRotate * Time.deltaTime;</span><br><span class="line">        mY = Mathf.Clamp(mY, -mYvalue, mYvalue);</span><br><span class="line"></span><br><span class="line">        // 设置相机的旋转状态</span><br><span class="line">        Quaternion myRotation = Quaternion.Euler(mY, mX, 0);</span><br><span class="line"></span><br><span class="line">        // 设置distance值</span><br><span class="line">        float scroll = Input.GetAxis(&quot;Mouse ScrollWheel&quot;);</span><br><span class="line">        distance -= scroll * sensitivityMouse * 0.5f;</span><br><span class="line">        distance = Mathf.Min(distance, 8f);</span><br><span class="line">        distance = Mathf.Max(distance, 1.5f);</span><br><span class="line"></span><br><span class="line">        // 更新相机的位置，使其与目标对象保持一定的距离</span><br><span class="line">        Vector3 position = Target.position + Vector3.up * upLook - myRotation * Vector3.forward * distance;</span><br><span class="line">        this.transform.position = position;</span><br><span class="line">        this.transform.rotation = myRotation;</span><br><span class="line">        this.transform.LookAt(lookPosition);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个相机的功能是，随着鼠标旋转可以围绕角色转，同时缩放鼠标滚轮可以拉近&#x2F;拉远镜头。为了防止上下移动幅度过大，进行了clamp取值，整体还是不错的。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>すみれ——普通人的故事</title>
      <link href="/2024/10/30/%E3%81%99%E3%81%BF%E3%82%8C%E2%80%94%E2%80%94%E6%99%AE%E9%80%9A%E4%BA%BA%E7%9A%84%E6%95%85%E4%BA%8B/"/>
      <url>/2024/10/30/%E3%81%99%E3%81%BF%E3%82%8C%E2%80%94%E2%80%94%E6%99%AE%E9%80%9A%E4%BA%BA%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>《すみれ》是猫猫社十五周年纪念作，也是我最喜欢的作品之一。<br>在我心中吧，这部作品和《Narcissu》不分上下，都是很喜欢的作品。只不过由于没有汉化、本作在国内偏冷门。<br>大概概括一下本作的故事，男主健二上网时结识了三个女主角，然而每个女主角都有自己的心理问题，于是男主角在现实中一个个帮助她们化解。<br>为什么喜欢这部作品呢，我觉得无论是男主、还是三位女主角，和我真得太像了。本作的心理描写、很大一部分描绘出了我曾经的心理活动，让人有种强烈的共鸣：这不就是我吗？</p><hr><p>第一位女主角是初芝堇(初芝すみれ)，如果要概括她的话，就是“缺爱型人格”吧，起初的小堇是非常内向的，在班里没有朋友，经常通过装睡逃避班级生活(和我现在装肚子痛不去开会一模一样)，甚至连放学坐公交都要避开和同学坐一辆。这样的小堇，经常陷入孤独、自卑和自我怀疑中。直到一次意外：自己的妈妈和男主健二的爸爸结婚了，健二使小堇变得更乐观开朗了。</p><p>玩这条线时我是很有感触的，因为小堇和我真得太像了：和同学避开同一辆公交、通过装睡逃避生活、内向孤独和细腻的情感，加上那作品中小堇的内心独白，让我很是触动。生活中不缺乏孤独者、自卑者，然而很少有作品去讲述他们的故事，所以第一条线就给我留下很好的印象。</p><hr><p>第二位女主角是佐佐木雏姬(佐々木雛姫)，玩这条线路时让我有股深深的无力感，有好几次都是强忍着眼泪。我觉得雏姬算是一定层面上、代表了我人生中最困难的时期吧。</br><br>如果概括雏姬，那应该是“创伤型人格”，雏姬的性格与她童年经历密切相关，雏姬的第一任父亲因为车祸去世，小时候上幼儿园、身边同学都被爸爸妈妈接走了，自己总是孤身一人。后来遇到了第二位父亲(也就是第三位女主角明里的父亲)，雏姬感受到短暂的温暖与爱，然而第二任父亲、因为扛不住生活的压力跳楼自杀了。后来的雏姬：害怕被爱、又渴望被爱;以前的不好的经历、害怕所爱之人离开自己，像爸爸一样永远抛弃自己，然而内心里又是渴望被爱的，最终雏姬的性格,主动封闭自己、不与外人建立联系——没有交流，就不会有爱。最后在男主“软磨硬泡”下，雏姬算是真正解开了心结，变得阳光开朗起来了。</p><p>本来玩完堇的线路，就已经感到很背刺了，玩了这条线路更是被狠狠背刺。如果说小堇代表了我曾经的不愉快，那么雏姬则是代表了我目前人生中最困难的时期。因为经历了很多创伤、从而自我封闭、不与人交流。玩这条线路时总有强烈的共鸣、让我回想起以前最困难的时候，眼泪一直打转转。最后健二与雏姬在月光下拥抱的场面，还是很让人欣慰的，也是个很不错的结局。</p><hr><p>第三位女主角是篠原あかり(篠原あかり),如果概括她的性格，那就是“逃避型人格”吧，我觉得明里这个角色，算是代表了我过去的几年——逃避、装睡、孤独、自责。<br>很多友友觉得，第三章挺魔幻的，尤其是《Narcissu:Sumire》玩家，更是一头雾水。于是想写写我所理解的第三章吧。<br>开头部分的灵魂入侵桥段，刚开始看起来确实让人一头雾水。玩完后对明里这个角色有了更深刻的认知。<br>一切的开始要从明里爸爸和雏姬妈妈结婚开始。明里很不喜欢新来的后妈，于是装睡逃避生活。爸爸以为她有嗜睡症、把她送到医院治疗。然而明里装睡的过程中，后妈、护士、医生对自己的态度很冷漠、恶意，形成了持续装睡的恶循环。<br>对明里来说，最大的救赎是男主片濑健二的到来，男主最先参加“试住院活动”——体验住院一周。明里渐渐喜欢上健二、和健二一起编织了一个名为”哈拉佩科公主大冒险”的故事，有很多设定：死后会在床上复活、可以灵魂入侵他人、敌人会发射激光。<br>在此期间，发生一件对明里和雏姬打击都很大的事——爸爸紫砂了。紫砂的原因大概有以下：自己的女儿明里得了嗜睡症（实际是装的）、工作压力大、和雏姬的妈妈吵架，最后这个父亲跳楼自杀了，对明里和雏姬打击都很大。明里变得更加自我封闭了：没有归宿、没有家人，自认为自身归处只有医院了。于是装睡十余年，自我封闭。<br>明里后来之所以出院，其实是因为愧疚感和负罪感——一定程度上，自己装病可能促进了爸爸的紫砂，后妈也被赶出家门，健二在学校也变得孤独不受欢迎，明里觉得都是自己的错。于是决定“进行赎罪”——先是给雏姬安排去名校上学，后来给他们寄电脑、聚集到galge学园成为网络上的好友，用自己的方式去帮助他们。<br>开头魔幻的部分，其实是明里小时候和健二创建的架空世界观：“哈拉佩科公主大冒险”。明里一直沉浸在自己的世界里，自我封闭。其中的设定其实很巧妙，比如把佐佐木佳子、野口小姐划分到敌人的队伍——是因为现实生活中这两个人对明里态度很差，男主则是女主的朋友。——这一魔幻的片段，正对应的是明里自我封闭的内心。</p><p>我觉得这段最让我感到无力、悲伤的桥段是，爸爸紫砂了，明里觉得没有亲人了、没有容纳自己的地方了——除了医院，自己还能去哪呢？自己给雏姬、健二都带来了不好的影响，心里自责万分，唯一的美好回忆就是小时候和健二在一起。于是决定通过装睡、逃避生活和现实。</p><hr><p>最后是男主角片濑健二，我觉得健二和现在的我很像。如果评价健二，那就是一个笨手笨脚、喜欢二次元文化、孤独善良的人吧。健二在学校并没留下愉快的回忆、后来通过爸爸的关系去公司上班，坐电梯都要和同事分开坐，每天上完班就回家上网，就是一个很普通的社会青年的形象。他也有过emo的时刻，“归根结底，我只是一个普通人罢了”，然而就是这样的普通人，救赎帮助了三位女主角，这作的男主还是很有代入感的。</p><hr><p>我很喜欢猫猫社，猫猫社的好多作品，都喜欢在作品中刻画一个笨手笨脚、而又善良的角色。猫猫社很多作品都在传承一个主题，那就是“平凡的美丽”。猫猫社的作品中总喜欢用“花”来寄托主题。《银色》里的菖蒲，代表着忠贞的爱情和友谊；《Narcissu》里的水仙，花语是珍爱自己；而《すみれ》里的三色堇，则因颜色不同代表不同寓意，暗指三位女主角。</p><p>我觉得猫猫社的作品，真的是“游戏选择玩家”了，如果没有一些创伤挫折、心理上的纠结等，感觉很难去理解作品本身的含义、也无法体会到那份感动吧。比如《Narcissu》，可能有住院经历的小伙伴、感触更深刻些，有的小伙伴没有类似的经历比较难以理解濑津美的做法。</p><p>苔花如米小，也如牡丹开。我觉得这句话概括猫猫社笔下的很多角色，很恰当。</p>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 猫猫社 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity判断向量夹角和看向物体</title>
      <link href="/2024/10/28/Unity%E5%88%A4%E6%96%AD%E5%90%91%E9%87%8F%E5%A4%B9%E8%A7%92%E5%92%8C%E7%9C%8B%E5%90%91%E7%89%A9%E4%BD%93/"/>
      <url>/2024/10/28/Unity%E5%88%A4%E6%96%AD%E5%90%91%E9%87%8F%E5%A4%B9%E8%A7%92%E5%92%8C%E7%9C%8B%E5%90%91%E7%89%A9%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<p>在进行学习时，我学了一堆api，经常容易搞混，具体怎么用经常混乱，于是记录一下，如何判断向量夹角。</p><hr><h3>>一，Vector3.dot（比较麻烦，一般不太推荐）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float angle = Mathf.Acos(Vector3.Dot(transform.forward, target.position - transform.position)) * Mathf.Rad2Deg;</span><br></pre></td></tr></table></figure><p>通过Vector3.dot，传入两个向量作为参数，会得到点乘结果，将点乘结果用反三角函数求出弧度值，再转化为角度值。</p><h3>二，Vector3.Angle （最推荐）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float angle = Vector3.Angle(transform.forward, (target.position - transform.position).normalized);</span><br></pre></td></tr></table></figure><p>直接传入两个向量，自己判断角度值，挺推荐的。</p><h3>三，Quaternion.Angle</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float angle = Quaternion.Angle(transform.rotation, target.rotation);</span><br></pre></td></tr></table></figure><p>如果你有目标物体的旋转（Quaternion），你可以使用Quaternion.Angle来计算两个旋转之间的夹角：</p><h4>四，叉乘（不太推荐）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Vector3 cross = Vector3.Cross(transform.forward, target.position - transform.position);</span><br><span class="line">float angle = Mathf.Acos(Vector3.Dot(transform.forward, target.position - transform.position) / (transform.forward.magnitude * (target.position - transform.position).magnitude)) * Mathf.Rad2Deg;</span><br></pre></td></tr></table></figure><p>此外还可以通过射线检测等方法获取夹角，最推荐Vector3.Angle</p><hr><p>然后是看向物体，主要两个API，一个是Transform.LookAt；一个是Quaternion.LookRotation；一个是Vector3.RotateTowards，这个方法可以将当前物体的一个向量旋转到目标物体的方向。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity资源分享</title>
      <link href="/2024/10/27/Unity%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
      <url>/2024/10/27/Unity%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p>此帖子用于分享一些我搜集的Unity资源，有能力希望大家支持正版（都可以在Unity商店找到），但是太贵了，于是分享一些。<br>另外国外有个网站，<a href="https://unityassets4free.com/%EF%BC%8C%E7%90%86%E8%AE%BA%E4%B8%8A%E8%83%BD%E4%B8%8B%E8%BD%BD%E5%BE%88%E5%A4%9A%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%EF%BC%8C%E4%BD%86%E6%98%AF%E8%BF%99%E7%BD%91%E7%AB%99%E4%B8%8D%E8%AE%A9%E6%8C%82%E6%A2%AF%E5%AD%90%E4%B8%8B%E8%BD%BD(),%E6%83%B3%E7%A0%94%E7%A9%B6%E7%9A%84%E5%90%8C%E5%AD%A6%E5%8F%AF%E4%BB%A5%E8%AF%95%E8%AF%95%E3%80%82">https://unityassets4free.com/，理论上能下载很多免费资源，但是这网站不让挂梯子下载(),想研究的同学可以试试。</a></p><hr><p>这个是PBR Stage Equipment 1.4（约人民币220多块），是个舞台场景文件<br>链接：<a href="https://pan.baidu.com/s/1MtxBJ8YWVzJyeP6Hkrkjqg?pwd=rora">https://pan.baidu.com/s/1MtxBJ8YWVzJyeP6Hkrkjqg?pwd=rora</a><br>提取码：rora<br>贴个123盘：<a href="https://www.123pan.com/s/RP16Vv-eHeW">https://www.123pan.com/s/RP16Vv-eHeW</a></p><hr><p><a href = "https://www.123pan.com/s/RP16Vv-iHeW" target ="_blank">MMD2UnityTool</a><br>这个一般用于vmd转动画anim（相机用的多）<br><a href = "https://www.123pan.com/s/RP16Vv-zHeW" target ="_blank">MMD4Mecanim_Beta_20200105</a><br>这个多用于pmx模型转fbx，做MMD比较常用<br><a href = "https://www.123pan.com/s/RP16Vv-LHeW" target ="_blank">Unity Assets Magica Cloth v1.12.13</a><br>售价25美元，作用貌似是让模型衣服、头发飘动效果更真实。</p><hr><p>破费0.78买的一套动作 (Girl GreatSword AnimSet)<br><a href="https://pan.baidu.com/s/1NjaW1ETHecbbVwBDW4NMSQ?pwd=8888">https://pan.baidu.com/s/1NjaW1ETHecbbVwBDW4NMSQ?pwd=8888</a><br>1.2版本的我单独传了份123盘<br><a href="https://www.123865.com/s/RP16Vv-6dtW">https://www.123865.com/s/RP16Vv-6dtW</a></p><p>花费0.5买的<br>Lucy,一套格斗动作<br><a href="https://pan.baidu.com/s/1qGKJ_pP__TBpoYidD6wOFg?pwd=vovm">https://pan.baidu.com/s/1qGKJ_pP__TBpoYidD6wOFg?pwd=vovm</a><br>123盘<br><a href="https://www.123865.com/s/RP16Vv-T3tW?%E6%8F%90%E5%8F%96%E7%A0%81:poxu">https://www.123865.com/s/RP16Vv-T3tW?提取码:poxu</a></p><p>店家给我发的<br>110套UE4 UE5卡通场景:<br>链接：<a href="https://pan.baidu.com/s/1us3QW5vRjxiv_lChWJGs3A">https://pan.baidu.com/s/1us3QW5vRjxiv_lChWJGs3A</a><br>提取码：6rlj</p><p>5套unity游戏制作教程合集:<br><a href="https://pan.baidu.com/s/1Y1n3LVu2u-cWhiRa_nZ92w">https://pan.baidu.com/s/1Y1n3LVu2u-cWhiRa_nZ92w</a> 提取码: 3rpr</p><p>99999+PPT模板链接：<br><a href="https://pan.baidu.com/s/17OkhDOd1IDWcc-k3lQG6Lg?pwd=yiyi">https://pan.baidu.com/s/17OkhDOd1IDWcc-k3lQG6Lg?pwd=yiyi</a><br>提取码：yiyi</p><p>999套简历合集：<br>链接:<a href="https://pan.baidu.com/s/1jUkoJdKojyGIOhhZBgIFmg?pwd=ke52">https://pan.baidu.com/s/1jUkoJdKojyGIOhhZBgIFmg?pwd=ke52</a><br>提取码:ke52<br>Hello谢谢！再来哦祝您天天好心情~</p><p>9542套3DMAX人物角色动作动画和上百个仙侠武器3DS MAX模型，以及UE4赛博朋克特效1套，UE4刀剑武器拖尾特效1套，⑩套UE4阵法特效</p><p>链接：<a href="https://pan.baidu.com/s/1xcK4acxuv98dUrF56fqN4A">https://pan.baidu.com/s/1xcK4acxuv98dUrF56fqN4A</a><br>提取码：jk2o</p><p>10套UE4阵法特效：</p><p>链接：<a href="https://pan.baidu.com/s/10sDgqJif_A9783ufMC-wRA">https://pan.baidu.com/s/10sDgqJif_A9783ufMC-wRA</a><br>提取码：7evy</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录四元数</title>
      <link href="/2024/10/23/%E8%AE%B0%E5%BD%95%E5%9B%9B%E5%85%83%E6%95%B0/"/>
      <url>/2024/10/23/%E8%AE%B0%E5%BD%95%E5%9B%9B%E5%85%83%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>在24年7月份，我在学Unity时碰到了名为“四元数”的数学知识，把我难坏了：不是，这四个数分别是什么意思？于是11月的我，希望能穿越到7月份帮自己解答疑惑。</p><h1>为什么要用四元数？</h1>表示空间的东西，最常用的就是欧拉角了。它以xyz三轴的旋转来表示，生活中很常用。但是它有些问题：<b>一是“万向节死锁”。</b>具体可以去b站找个视频去看，描述起来太抽象，简单说就是轴面在旋转后可能会重合，如x轴面与z轴面重合，这些特殊情况下可能会乱套。<b>而是“不唯一性”。</b>这个好理解，比如绕y轴旋转360度和720度是一样的，这就使我们在表现一个状态时、欧拉角不具有唯一性。<h1>四元数是什么？</h1>这里不用纠结于复杂的数学定义（因为我也不会），只谈它是什么：它表示的是，立体几何绕空间任意轴旋转一定读书——任意轴，不一定是xyz轴了，这就很方便。它解决了以上两个问题，引入第四个参数w。标准格式是（w,x,y,z），那么这四个参数分别是什么意思呢？假设一个物体，绕向量（x,y,z）旋转a度，那么它的四元数是：（cos a/2,sin a/2 * x,sin a/2 * y,sin a/2 * z）。完结（我当时找好几天我都不知道这四个数是什么意思）。在我们Unity中，这样去表示一个四元数（Quaternion）太麻烦、太抽象了,于是Unity封装了很好的方法：Quaternion.AngleAxis(float angle,Vector3 vector3)括号里只需要两个参数，一个是角度、一个是我们要绕着旋转的轴。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络冲浪经验分享</title>
      <link href="/2024/10/17/%E7%BD%91%E7%BB%9C%E5%86%B2%E6%B5%AA%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
      <url>/2024/10/17/%E7%BD%91%E7%BB%9C%E5%86%B2%E6%B5%AA%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p>在论坛里，有网友发了个名为“网上冲浪经验分享”的帖子，受此启发我也总结一下（其实我的博客就是记录这些的）。<br>我自己整理过几千个网址，包括动漫、学习、游戏下载、实用工具等等，一般都是我自己私用的（怕被人举报），不过这里感觉没什么问题（人少），于是压缩一份分享出来：<a href = "https://wwci.lanzouo.com/iFaeY2crr8re">蓝奏云</a>，请不要把它在各QQ群、论坛转载。</p><p>实际上，看到这里、把上边的压缩包下载解压了，剩下的内容都不需要看了。但这样显得我太氵了，于是随便写写。</p><hr><h2>一切的开始——强大的搜索引擎</h2>以前是百度搜索，可如今百度搜索，基本是把自己的信誉给弄没有了（一堆不相关的内容）。我首推的搜索引擎是<a href = "https://cn.bing.com/?mkt=zh-cn">必应</a>,原因很简单：广告少、准确率高、不用挂梯。其次是<a href = "https://yandex.com">Yandex</a>，不用翻墙、准确率高，还经常能搜出一些奇奇怪怪的东西。有能力的话，再推荐谷歌搜索（排到最后是因为它需要挂梯）。<h2>导航网站</h2>我开头发的压缩包，完全可以当成导航网站来用。不过要是说推荐的，我还是推荐我的友站<a href = "https://www.miaoaaa.com/">“ACG喵导航”</a>。<h2>关于galgame资源的寻找</h2>最推荐的是bilibili,因为哔站上有好多up主分享资源，门槛最低、最容易找、资源分布广泛。我的友站<a href = "https://www.miaoaaa.com/">“ACG喵导航”</a>收录了好多galgame网站，常见的galgame都能找到。对于一些比较冷门的资源，首先推荐区梓澪の妙妙屋（直接用必应搜索），下载速度较快。其次推荐绯月论坛和2dj，这两个论坛很多大佬自购、放流资源，绯月大概最有名，2dj需要邀请码注册。2dj的海外版叫“mikocon”,无需邀请码注册、不过需要挂梯子。</br>其次推荐的是ggbase和nyaa了，这两个是种子网站，需要自备磁力下载工具，我一般不会去用这两个。</br>最后推荐的是，anime-sharing、hentai-sharing、bangumi三个网站。anime-sharing是hongfire网站的继承，有来自全球各地的人分享资源，hentai-sharing有好多冷门资源被转载到anime-sharing，bangumi上经常有国人大佬在评论区分享资源。缺点是好多网盘是国外网盘，下载速度很慢。</br>最后的最后，就是我的小站“萤ノ光”了，之所以会有很多冷门资源，大多是网友找不到了、给我发信息，我去找的（），有的资源都快绝版了，找不到给我发邮箱，我试着去寻找一下）<h2>关于动漫资源的寻找</h2>我的友站<a href = "https://www.miaoaaa.com/">“ACG喵导航”</a>，包括开头我的文档整理了很多。我最推荐的还是“次元城动漫”，资源相对比较齐全。下载动漫的话，我用动漫花园比较多点（其实我不怎么看番剧），同时可以在我的Alist网盘中寻找。<h2>关于galgame制作</h2>新人上手galgame制作，我建议先选择webgal、humi、橙光这种引擎，原因是简单易上手，就算你一句代码也不会，也能用它制作出galgame。</br>其次我推荐的是renpy引擎，很多国G制作组都在使用，它的社区很强大、功能也很丰富，我之前参与国G《苍空的彼端》制作，就是用这个引擎写的分镜脚本。缺点是这个引擎的使用需要一些python知识（其实不会问题也不大，我就是零基础上手用的）。</br>接着是nvlmaker，其实这款已经不太推荐了，貌似其社区活跃度不高、少有维护，它是krkr引擎的改版，用起来比较方便，如果你想学习使用krkr引擎又不知道如何下手的话，可以试着去学习这款引擎。</br>然后是lightvn引擎。这款引擎在国内很冷门，目前似乎只有我的群友xiakk在做汉化（参考<a href = "https://github.com/xiakkto/Light.vn-Chinese-Wiki/wiki">lightvn中文汉化项目</a>），国内使用这款引擎的，我所知道的只有我和xiakk了。优点是使用起来很方便、不需要代码基础，官方文档很详细。缺点是国内教程少、缺乏汉化。</br>最后就是krkr和Catsystem2两款开源引擎了，功能很强大，柚子社的作品几乎都是krkr引擎制作的，Catsystem2的代表作（比如前翼社的《island》）,缺点是中文教程几乎没有，不会操作）</br>最最最后是Unity!，Unity这款引擎拿来做galgame感觉不太合适，但它也能做，不过学习周期长、还要学习C#编程语言，你不付费开头还会跳出大大的Unity图标，不建议用Unity做galgame。<hr><h1>网站制作篇（明天再码）</h1>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【C#知识点】公共前缀问题详解——substring、any、all</title>
      <link href="/2024/10/13/%E3%80%90C-%E7%9F%A5%E8%AF%86%E7%82%B9%E3%80%91%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94substring%E3%80%81any%E3%80%81all/"/>
      <url>/2024/10/13/%E3%80%90C-%E7%9F%A5%E8%AF%86%E7%82%B9%E3%80%91%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94substring%E3%80%81any%E3%80%81all/</url>
      
        <content type="html"><![CDATA[<p>今天在刷leetcode时看到一道标签为“简单”的题目，说是简单，对我这种C#新人、自学编程和算法的还是很有困难的。不过从这道题中学了些知识点，于是想记录一下。</p><hr><a href = "https://leetcode.cn/problems/longest-common-prefix/description/" target ="_blank">原题</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">编写一个函数来查找字符串数组中的最长公共前缀。</span><br><span class="line">如果不存在公共前缀，返回空字符串 &quot;&quot;。</span><br><span class="line">示例 1：</span><br><span class="line">输入：strs = [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class="line">输出：&quot;fl&quot;</span><br><span class="line">示例 2：</span><br><span class="line">输入：strs = [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class="line">输出：&quot;&quot;</span><br><span class="line">解释：输入不存在公共前缀。</span><br></pre></td></tr></table></figure><h1>整体思路</h1>看到这道题，我的思路是：首先我们进行两次遍历，第一次遍历strs的所有元素，第二次遍历我们把字符串当成数组、拿出字符来分别比较。至于字符的添加，我们用StringBuilder的append方法去加。于是在我苦思冥想下、诞生了第一种笨蛋方法：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public String LongestCommonPrefix(String[] strs)</span><br><span class="line">    &#123;</span><br><span class="line">        //判断特殊情况，字符为空</span><br><span class="line">        if (strs == null || strs.Length == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            return &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int length = strs.Length;</span><br><span class="line">        //我用count存储第一个字符串的长度</span><br><span class="line">        int count = strs[0].Length;</span><br><span class="line">        //我对字符串长度进行更新，找出最短的。</span><br><span class="line">        for (int i = 1; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            count = Math.Min(count, strs[i].Length); // 更新count为当前最短字符串的长度</span><br><span class="line">        &#125;</span><br><span class="line">        //StringBuilder实例化</span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        for (int j = 0; j &lt; count; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            char currentChar = strs[0][j];</span><br><span class="line">            for (int i = 1; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (j &gt;= strs[i].Length || strs[i][j] != currentChar)</span><br><span class="line">                &#123;</span><br><span class="line">                    return sb.ToString(); // 如果当前字符不匹配或超出了某个字符串的长度，返回当前构建的公共前缀</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sb.Append(currentChar); // 将匹配的字符添加到公共前缀中</span><br><span class="line">        &#125;</span><br><span class="line">        return sb.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码又臭又长，时间和内存上成功打败了30%和50%的同学，不太合适。</p><h1>SubString来解题</h1>于是我了解到一个方法，名叫SubString：我们定义一个数组：string str = "Hello,World";SubString有两个重载：string str1 = str.SubString(0,5)表示从索引0的位置开始、长度为五的字符串,打印出来就是Hello;string str2 = str.SubString(6)表示从索引为6的位置打印，打印出它和它之后的字符，就是World;于是乎，诞生了一个新思路：我们拿strs[0]开始，找到最后一个索引j,那个位置正好strs[0][j]等于strs[i][j],之后用SubString方法就简单了：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public String LongestCommonPrefix(String[] strs)</span><br><span class="line">    &#123;</span><br><span class="line">        if (strs.Length == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            return &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        string prefix = strs[0];</span><br><span class="line">        for (int i = 1; i &lt; strs.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int j = 0;</span><br><span class="line">            //while循环直接把条件限制死</span><br><span class="line">            while (j &lt; prefix.Length &amp;&amp; j &lt; strs[i].Length &amp;&amp; prefix[j] == strs[i][j])</span><br><span class="line">            &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            if (j == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                return &quot;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            prefix = prefix.Substring(0, j);</span><br><span class="line">        &#125;</span><br><span class="line">        return prefix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是以上代码在时间和内存上分别击败了74%和83%的同学。</p><h1>大佬解法</h1>于是乎，我有通过大佬解法了解到很多知识点：Any：本质上是个委托，装载匿名函数；是个布尔运算，如果至少有一个元素满足条件，它返回 true，否则返回 false。（与之相对的有All）=>:lambda表达式，与匿名函数使用<=:布尔运算符，如果左边小于等于右边返回true，否则是false.. :C#新引入的东西，strs[0][..i]就表示新创建个string，它由strs[0][0]到strs[0][i - 1]间所有字符组成。（不包括 i）s: 我们传入的字符串中的每个元素第一种情况：我们传入的元素的长度小于我们的索引，它已经检查到末尾了，的所有字符都符合我们的前缀，于是有了s.Length <= i第二种情况：检查到i的位置，发现不相等了。于是s[i] != strs[0][i]这两种情况、只要出现任意一种都行。最后我们返回从strs[0]一直到strs[0][i](不包括strs[0][i])之间的所有字符组成的字符串，就有了return strs[0][..i];<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public string LongestCommonPrefix(string[] strs)</span><br><span class="line">    &#123;</span><br><span class="line">        for (var i = 0; ; i++)</span><br><span class="line">        //Any能遍历所有元素，传入的s就是我们数组的元素的代表。</span><br><span class="line">            if (strs.Any(s =&gt; s.Length &lt;= i || s[i] != strs[0][i]))</span><br><span class="line">                return strs[0][..i]；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们代码进行了：先判断i有没有超过数字长度、strs的字符是否相等——没问题，i++;<br>等到以上任意一种情况不符合了————突然不相等了、或者最短的字符串所有字符都符合——Any判定为true，就终止循环了<br>如此很奇妙地解决问题，这下代码就很精简了。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>情感细腻的柔情大叔——片冈智</title>
      <link href="/2024/10/11/%E6%83%85%E6%84%9F%E7%BB%86%E8%85%BB%E7%9A%84%E6%9F%94%E6%83%85%E5%A4%A7%E5%8F%94%E2%80%94%E2%80%94%E7%89%87%E5%86%88%E6%99%BA/"/>
      <url>/2024/10/11/%E6%83%85%E6%84%9F%E7%BB%86%E8%85%BB%E7%9A%84%E6%9F%94%E6%83%85%E5%A4%A7%E5%8F%94%E2%80%94%E2%80%94%E7%89%87%E5%86%88%E6%99%BA/</url>
      
        <content type="html"><![CDATA[<p>这篇文章想要写写我最喜欢的脚本家，猫猫社的社长片冈智，他和猫猫社的作品，总能给我带来很深的思考。</p><p><b>人物介绍</b><br>以下内容引自萌娘百科：</p><blockquote><p>毕业于东京都立大学经济学部，曾名片冈智晴（Kataoka Toshiharu）。<br>最初以原画师身份开展创作，与其兄长片冈せいやん（原名片冈清司）组建同人游戏社团Stage☆nana。<br>其后加入戏画PB，并成立猫猫社，由于猫猫社成立初期缺少剧本，片冈智在这段时期被迫转型。<br>因经济原因可以简单理解为把商业游戏公司当同人社团运作，2006年1月20日宣布以Scarlett ～スカーレット～为猫猫社作品的结束，不加入新成立的棉花软件，闯荡好莱坞去了。猫猫社在2006年10月1日停止活动一年九个月后于2008年7月15日再开。<br>参与Nekoday（成都猫之日网络科技有限公司，2018年8月7日注册成立）新AVG制作。</p></blockquote><p>片冈智的代表作有哪些呢？最有名的就是《水仙》了，算是片冈智出道以来的巅峰作品了；其它比较出名的还有《银色》、《120日元》、《泡沫冬景》，剩下的很多作品也很优秀（比如我正在推的《すみれ》），但由于各种原因（比较致郁、没有汉化）而相对比较冷门些。</p><hr><h2>为什么成为一名“片冈粉”？</h2><p>我接触过很多脚本家的作品，新岛夕、sca自、田中罗密欧、虚渊玄、奈良原一铁、濑户口廉也…也读过很多文学家的作品，然而这些人中，我最喜欢的还是片冈智的文学创作风格。从读《水仙》开始喜欢上，到之后又体验了片冈智其它作品。我觉得喜欢片冈智有很多原因吧。</p><p><b>1.讲述者，而非创作者</b></p><p>我读的大多数文学作品，作者们都会掺杂自己的思想感情，体现自己对哲学、生命等不同主题的思考，然而读片冈智的一些作品却不是这样。最先读的是《水仙》，片冈智只是平淡地、以一个路人和讲述者的口吻去讲述这件事，他的文字很平淡、质朴，没有华丽的辞藻、也没有什么渲染。包括《银色》第一章、《冬季北极星》、《雨的边缘》，很多作品也都能体现出来。</p><p>我觉得这种创作最大的好处就是，能把足够的思考空间留给读者。故事的主旨、要传达的东西，全都交给读者去思考，有足够的独立性。</p><p><b>2.细腻的情感描写</b></p><p>很难想象，写下《水仙》的片冈智是一名上了年纪的中年大叔了。在粗犷的外表下、藏着一颗细腻的心。片冈智的作品对人物心理描写特别细致，体现在他笔下的很多角色中。如《水仙》里的濑津美，明明不喜欢吃炸土豆、却被妈妈以为喜欢吃，纠结的心理;《银色》第一章结尾菖蒲的接连发问：我究竟活着吗？我想要留下活着的证据。这些情感很容易让读者去带入体会。“我不喜欢七楼，也不喜欢家”，我能感受到的倒不是种绝望，而是一种无奈的悲伤吧。</p><p><b>3.真实的故事创作、强烈的共鸣</b></p><p>大多数galgame创作的角色，多是活泼开朗、乐观大方的。而片冈智笔下的很多角色却相反，大多是情感细腻、比较偏悲观和负能量的角色。这些角色的刻画多来自生活，如《水仙》里的濑津美来自片冈智儿时玩伴S美、高坂堇来自于片冈智当保安时“公园里的住客”，显得十分真实。</p><p>片冈智笔下的角色多是普通人的代表，他们的情感描写和经历很真实。比如《すみれ》，男主健二，坐电梯时都要一个人独自坐，女主角之一初芝堇通过假装睡觉逃避现实，让我直呼“这不就是我吗”。我最感动的一句话是，“不要说对不起，要说谢谢”，这句话受用至今。“对不起”只会让身边的人悲伤，而“谢谢”是表达感激的最好方式。以前我就经常为别人的帮助而感到愧疚，把“对不起”挂在嘴边，而如今都会说句“谢谢”。</p><hr>我有时就觉得，片冈智笔下的很多角色，就是异世界的自己。比如《すみれ》里的健二、佐佐木雏姬，他们的经历和心理与我很像很像；同时我觉得，或许我和片冈智的价值观上有很多相像之处，片冈智之前接受采访时说，《水仙》的主题之一是传承，而这个主题我在刚打《水仙》第一部时，就能很好地感受到，片冈智说的很多话都让我挺认同的。<p>片冈智的好多作品，对我来说，就像是在照镜子一般，每次体验都会有深刻的自省，会有新的体会。他笔下一些抑郁、悲观、内耗的角色，不就是emo时的自己吗？但是在他们的身上，一直体现着一个很重要的主题。想起一句诗能很好地概括：苔花如米小，也学牡丹开。无论是生命结束之际的濑津美，还是“想要留下活着的证据”的菖蒲，他们身上都体现着这种精神，也一直激励着我，要努力地前行。昙花一现，即是永恒。</p>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银色——猫猫社早期作品</title>
      <link href="/2024/10/10/%E9%93%B6%E8%89%B2%E2%80%94%E2%80%94%E7%8C%AB%E7%8C%AB%E7%A4%BE%E6%97%A9%E6%9C%9F%E4%BD%9C%E5%93%81/"/>
      <url>/2024/10/10/%E9%93%B6%E8%89%B2%E2%80%94%E2%80%94%E7%8C%AB%E7%8C%AB%E7%A4%BE%E6%97%A9%E6%9C%9F%E4%BD%9C%E5%93%81/</url>
      
        <content type="html"><![CDATA[<p>今天在往萤ノ光小站传资源时，传了一部名为《你所希冀的未来》的游戏，之后玩完也要为它写一篇。在去bangumi打分的时候、同“致郁”标签下看到了《银色》，又翻到了我以前的《银色》录播视频，后劲突然来了。</p><p>《银色》是猫猫社第二部作品，发售于2000年，比我还大五岁，是猫猫社第一部致郁作。全作一共有五个篇章。我接触这部作品的契机是《水仙》，因为《水仙》，去了解了其作者片冈智，然后在贴吧看到有人讨论《银色》，很多人很推崇它、而且比较冷门致郁。于是我下载这部游戏去玩了。</p><p>《银色》一共有五个章节，第一章和第五章是片冈智写的，其它的由不同人负责。故事整体上可以分为古代和现代两个部分，古代部分的背景是，天下大旱、民不聊生，大井迹造银丝求雨；现代部分则是围绕失语症少女菖蒲展开。银丝是贯穿全作的重要线索：有了银丝、可以实现任何人的愿望。五个篇章都是围绕银丝来讲的。</p><hr>五章中我最喜欢的是第一章和第二章，最不喜欢第三章，第四章、第五章中规中矩吧。第一章讲的是无名少女与匪徒的故事，两个普通人相爱、在大雪中死去，这一章很好地体现出片冈智那奇特的写作手法，玩起来让我鼻头酸酸的，我能想到的词语是：普通人、平凡的伟大。</br>第二章里的狭雾是我最喜欢的角色，这个故事让我想到的词语是，人性的自私、少女的善良。村里人暗中谋划、把狭雾献祭河神，要害死狭雾。然而狭雾虽然知道、还是甘愿赴死。狭雾在大雨中的CG，给我很深的震撼。觉得有种古早gal的美感、震撼感。</br>第三章讲的是姐妹滥用银丝、反目成仇的故事，这章我最不喜欢。能看出作者想表达的是，不要滥用外界力量、放纵人性欲望、最终会酿成恶果。但是夕奈的形象反差太大了，前期是温柔姐姐、后期突然变成坏蛋了，人物塑造不行。这章给读者展现了一个反例——滥用外界力量、造成悲剧的故事，一定程度上挺值得深思的。第四章和第五章是古代部分和现代穿插在一起的，古代部分讲的是大井迹造银丝、与乡里少女相爱、最后死去的故事。这一段和《水仙3》“死神的新娘”那一章挺像的，让我想起高原英治梦断名古屋的场面；现代部分讲的是少女菖蒲和男主的故事，少女克服了失语症，而银丝才算真正意义上迎来好结局。<hr>《银色》这部作品我觉得还是很优秀、很令人动容的。首先夸赞音乐，猫猫社的音乐质量一直很高，在早期也一样，很好的渲染出了致郁的氛围。在剧本方面，缺点是不同作者写一部作品、质量参差不齐，而且此时猫猫社没能脱离18+元素，觉得去掉18+反而更好；不过在这部作品中，已经很好地体现了片冈智那优秀的文笔，为后来《水仙》的创作提供了铺垫吧。<p>《银色》的主题是什么？我觉得，它告诉人们，普通人努力的样子也很美，努力活着的菖蒲、有自己想法的狭雾…同时不要太过依靠外界的力量，否则可能酿成悲剧吧。bangumi上有一个评价我觉得写得很好——“昙花一现，即是永恒”，《银色》记录的正是些普通人“昙花一现”的故事，他们的离开总能给玩家带来很多思考。总体上，我还是很喜欢这部作品的。</p><p>值得一提的是，《水仙》有句话：一个冬日的故事，一段灿烂的回忆。而《银色》结尾的话是：一个夏日的故事，一段灿烂的回忆。当时让我乱想翩翩。</p>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> galgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端学习2】CSS知识点总结(0.1版本)</title>
      <link href="/2024/10/09/%E3%80%90%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A02%E3%80%91CSS%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
      <url>/2024/10/09/%E3%80%90%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A02%E3%80%91CSS%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>前言：由于css内容实在是太多，我发现仅凭我一个人根本写不完，于是我会在本文档引用一些外部链接，可以跳转去看其他人的文档。<br>我现在还在思考怎么去写这个css笔记，它和html不一样,html好总结，所以我会陆续进行修改更新。等我完全完成了这些任务，会发到github上。</p><p>接下来我们将要学习css，如果要讲完所有css知识点，对我来说是不可能的，因为css太多了。曾经有本砖头厚的书、记录的全是css，所以我只能总结常用的。css是个博大的学问，具体要实现什么需求时、再具体去学习。不过我会在其他文章记录一些比较流行的css特效。</p><p>我建议读者在学习时，自己建个html文件，把我写的css粘贴到里边看效果(博客展示不方便，容易乱，因为我文章用html写的)</p><h1>css知识点</h1><h2>基础语法</h2>css规则由两个主要部分：选择器和声明，一个生命有一条属性和一个值，属性间用分号隔开。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">.hljs &#123;</span><br><span class="line">  background: #f5f5f5;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">.hljs是选择器，background是属性、#f5f5f5是值</span><br></pre></td></tr></table></figure><hr><h2>css的引入方式</h2><b>1.内联样式</b>直接在标签内部写css语句，如:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;color: red;font-size: 30px;&quot;&gt;我是一个段落&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>缺点是维护成本高，如果是几千行代码，想修改css时得翻找半天，效率低下，一般不建议使用。</p><p><b>2.内部样式</b><br> 把样式写到head中的style标签中。这里涉及到元素选择器的知识，以下代码中，p标签和h2标签会受到css影响产生效果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;第一个网页&lt;/title&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line">            p&#123;</span><br><span class="line">                color: blueviolet;</span><br><span class="line">                font-size: 15px;</span><br><span class="line">            &#125;</span><br><span class="line">            h2&#123;</span><br><span class="line">                color:coral;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h2&gt;我是h2标题&lt;/h2&gt;</span><br><span class="line">        &lt;p&gt;我是第二个段落&lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>优点上，比内联样式要好很多，可以直接根据标签名使用了。缺点上，感觉还是不太好维护、显得冗杂（我们css一般都要写一大堆的，就这样塞head里不合适）</p><p><b>3.外部样式</b><br>这是目前最推荐、也最常用的方法：专门创建后缀为css的文件，在里边写，然后html文件引用。<br>这里我在同级目录下创建名为style.css的文件，写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">    color: darkorange;</span><br><span class="line">    font-size: 75px;</span><br><span class="line">&#125;</span><br><span class="line">/*style.css文件 与下面的html位于同一目录下*/</span><br></pre></td></tr></table></figure><p>然后在html头部添加语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;第一个网页&lt;/title&gt;</span><br><span class="line">        &lt;link rel=&quot;stylesheet&quot; href=&quot;./style.css&quot;&gt;(我们添加的语句)</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h2&gt;我是h2标题&lt;/h2&gt;</span><br><span class="line">        &lt;p&gt;我是第二个段落&lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在添加的语句中，rel必须是stylesheet，表示我们引用的是css文件,href填的是我们css文件的本地相对路径。</br><br>外部样式表的优点在于：易于维护、方便引用。在做网站时很多人喜欢把css文件直接托管到服务器上，不光自己可以引用、别人也能用。<br>优先级上，（内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</p><hr><h2>css的选择器</h2>多多少少能找到的选择器，大概有十余种，其中最主要的也就五种。</br><p><font color = "red"><h3>五大基础选择器</h3></font><br><b>1.元素选择器</b></br><br>会给被标签包裹的元素加上css效果，如示例代码我们给span标签和p标签加了个color属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        p&#123;</span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;边学Unity，边学&lt;span&gt;前端&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><b>2.类选择器</b><br>选择器格式为”.+类名”，为当前类下的元素加上css效果：<br>下面我们定义两个类分别叫“oneclass”和“twoclass”,加上color属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.oneclass/*定义类选择器*/&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">.twoclass&#123;</span><br><span class="line">    color: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2 class=&quot;oneclass&quot;&gt;你好&lt;/h2&gt;</span><br><span class="line">&lt;p class = &quot;twoclass&quot;&gt;我不好&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><b>3.id选择器</b><br>规定用#来定义,与类选择器比较像，但它只能用一次，用完就销毁了，把html比作食物，那id选择器就是配套的一次性筷子。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">#mytitle</span><br><span class="line">&#123;</span><br><span class="line">    border:3px dashed green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2 id=&quot;mytitle&quot;&gt;你好&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">之后mytitle这个id便销毁了，接下来不能再用了，只能换个id名字。</span><br></pre></td></tr></table></figure><p><b>4.全局选择器</b><br>对全局生效的选择器，用*来定义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">*&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;所有标签都得听我的&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;无论你是什么标签&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><b>5.合并选择器</b><br>和上边的选择器基本一样。只不过可以把多个选择器合并起来，中间用逗号隔开。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.oneclass,.twoclass&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2 class=&quot;oneclass&quot;&gt;你好&lt;/h2&gt;</span><br><span class="line">&lt;p class = &quot;twoclass&quot;&gt;我不好&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><font color = "blue"><h3>高级选择器</h3></font><br>接下来的选择器是比较复杂、高级的（要上难度了，但不算特别重要）</p><h4>1.属性选择器</h4>我感觉解释起来比较抽象，想起来我们学HTML时的input标签了吗，当时是不是有好多属性。如type、name(忘了的话再重新翻翻看)，我们的属性编辑器就是针对这些的。属性选择器大概可以分为七类:基本格式是：标签[属性]<b>1.存在选择器</b>选择所有具有指定属性的元素，不论其属性值为何。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p[type] &#123;</span><br><span class="line">  选择p标签下，所有带有 &#x27;type&#x27; 属性的元素</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>2.完全匹配选择器</b><br>选择属性值完全等于指定值的元素，才会启用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[href=&quot;https://www.example.com&quot;]</span><br><span class="line">&#123;</span><br><span class="line">  选择href属性值完全等于指定URL的元素</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>3.开始匹配选择器</b><br>选择属性值以指定值开头的元素。下例子，href属性以https:&#x2F;&#x2F;开头的才能实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a[href^=&quot;https://&quot;]</span><br><span class="line">&#123;</span><br><span class="line">  选择a标签下，href属性值以&#x27;https://&#x27;开始的元素</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>4.结束匹配选择器</b><br>选择属性值以指定值结束的元素。下例子，href属性以.pdf结束的才能实现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[href$=&#x27;.pdf&#x27;] &#123;</span><br><span class="line">  选择href属性值以&#x27;.pdf&#x27;结束的元素</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>5.包含匹配选择器</b><br>选择属性值包含指定字符串的元素。下例子p标签下的title属性，只要包含hello的都能实现，无论是hello1还是hello2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p[title*=&#x27;hello&#x27;] &#123;</span><br><span class="line">  选择p标签下title属性值包含&#x27;hello&#x27;字符串的元素</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>6.词匹配选择器</b><br>匹配含有特定单词的元素，下例中如果你把active拼错了，那就匹配不了了，这也是他与包含匹配选择器的区别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[class~=&#x27;active&#x27;] &#123;</span><br><span class="line">  选择class属性值中包含&#x27;active&#x27;单词的元素</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>7.前缀匹配选择器</b><br>选择属性值以指定值开始或者完全等于指定值的元素，主要用于语言代码或者文档类型这样的属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[lang|=&#x27;en&#x27;] &#123;</span><br><span class="line">  /* 选择lang属性值以&#x27;en&#x27;开始或等于&#x27;en&#x27;的元素 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是个简单的示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Attribute Selectors Example&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  /* 存在选择器 */</span><br><span class="line">  [type] &#123;</span><br><span class="line">    color: blue;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /* 完全匹配选择器 */</span><br><span class="line">  [href=&quot;https://www.example.com&quot;] &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /* 开始匹配选择器 */</span><br><span class="line">  [href^=&quot;https://&quot;] &#123;</span><br><span class="line">    color: green;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /* 结束匹配选择器 */</span><br><span class="line">  [href$=&quot;.pdf&quot;] &#123;</span><br><span class="line">    color: red;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /* 包含匹配选择器 */</span><br><span class="line">  [title*=&quot;hello&quot;] &#123;</span><br><span class="line">    background-color: yellow;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /* 词匹配选择器 */</span><br><span class="line">  [class~=&quot;active&quot;] &#123;</span><br><span class="line">    border: 1px solid black;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /* 前缀匹配选择器 */</span><br><span class="line">  [lang|=&quot;en&quot;] &#123;</span><br><span class="line">    font-style: italic;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 存在选择器 --&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; placeholder=&quot;Type something...&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 完全匹配选择器 --&gt;</span><br><span class="line">&lt;a href=&quot;https://www.example.com&quot;&gt;Example Domain&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 开始匹配选择器 --&gt;</span><br><span class="line">&lt;a href=&quot;https://www.example.com/about&quot;&gt;About Example&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 结束匹配选择器 --&gt;</span><br><span class="line">&lt;a href=&quot;https://www.example.com/resume.pdf&quot;&gt;Resume&lt;/a&gt; </span><br><span class="line"></span><br><span class="line">&lt;!-- 包含匹配选择器 --&gt;</span><br><span class="line">&lt;div title=&quot;hello world&quot;&gt;Hello World&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 词匹配选择器 --&gt;</span><br><span class="line">&lt;div class=&quot;container active&quot;&gt;Active Container&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 前缀匹配选择器 --&gt;</span><br><span class="line">&lt;p lang=&quot;en-US&quot;&gt;English Paragraph&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这些请参考以下文章<br><a href = "https://blog.csdn.net/ASHIYI66/article/details/141295816" target = "_blank">伪类选择器、伪元素选择器、组合选择器</a></p><hr><h2>CSS背景</h2>CSS 背景属性用于定义HTML元素的背景。CSS 属性定义背景效果:background-color(定义了元素的背景颜色)background-image(描述了元素的背景图像)background-repeat(设置定位与不平铺)background-attachment(设置图像是否固定、是否随页面滚动)background-position(改变图像在背景中的位置)background-size(设置图像大小)具体每个属性我建议你自己查，我发现我全写下来根本不现实()<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">.example &#123;</span><br><span class="line">  /* 设置背景颜色为浅蓝色 */</span><br><span class="line">  background-color: #add8e6;</span><br><span class="line">  </span><br><span class="line">  /* 设置背景图像为一张图片 */</span><br><span class="line">  background-image: url(&#x27;https://www.helloimg.com/i/2024/10/08/670526445bc46.jpg&#x27;);</span><br><span class="line">  </span><br><span class="line">  /* 设置背景图像不平铺 */</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  常用的就repeat-y,repeat-x了</span><br><span class="line">  </span><br><span class="line">  /* 设置背景图像固定，不随页面滚动 */</span><br><span class="line">  background-attachment: fixed;</span><br><span class="line">  具体参考</span><br><span class="line">  https://blog.csdn.net/m0_60744481/article/details/130582748</span><br><span class="line">  </span><br><span class="line">  /* 设置背景图像的位置在右下角 */</span><br><span class="line">  background-position: bottom right;</span><br><span class="line">  几个英文单词组合，九宫格形式</span><br><span class="line"></span><br><span class="line">  /* 设置背景图像大小 */</span><br><span class="line">  background-size: 1000px 800px;</span><br><span class="line">  第一个参数填图像长，第二个宽</span><br><span class="line">  background-size: cover;</span><br><span class="line">  cover表覆盖，可能把图片剪切了，以适应屏幕</span><br><span class="line">  contain属性表完整的图片适应屏幕。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2>文字属性</h2><a href = "https://www.runoob.com/css/css-text.html" target = "_blank">具体参考这里</a>text-align: center/right/left;设置文字居中方式text-decoration: underline(上划线);overline(下划线);line-through(定义删除线);text-transform: captialized(每个单词开头大写);uppercase(全部大写);lowercase(全部小写);text-indent: 50px;设置文字首行缩进;<h2>表格属性</b><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">为表格添加边框，第一个值为边框大小，第二个为实线/虚线，第三个是边框颜色。</span><br><span class="line">加了td后就是每个td标签、单元格都实现这种效果</span><br><span class="line">tabel,td&#123;</span><br><span class="line">  border: 1px solid red;</span><br><span class="line">&#125;</span><br><span class="line">border-collapse: collapse;（边框折叠，把双边框变成单边框。）</span><br><span class="line">width和height: 设置表格宽高</span><br><span class="line">text-align: 设置文字左右对齐方式，right left center</span><br><span class="line">vertical-align: 设置文字垂直对齐方式，top bottom center</span><br><span class="line">padding: 20px;设置表格文字与上下左右四个边框的距离</span><br><span class="line">background-color: 设置背景颜色</span><br><span class="line">color: 设置表格文字颜色</span><br></pre></td></tr></table></figure><h2>盒子模型</h2>因为其像盒子嵌套，所以叫“盒子模型”<a href = "https://www.runoob.com/css/css-boxmodel.html">参考菜鸟教程</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">padding: 50px 20px;内边距,第一个值上下，第二个值左右</span><br><span class="line">border: 50px;边框</span><br><span class="line">margin: 50px 20px;外边距,第一个值上下，第二个值左右</span><br><span class="line">更高级的用法，分别表示上下左右，</span><br><span class="line">如padding-left，margin-left，表示左</span><br><span class="line">注意border比较特殊，不能border: 50px,20px;</span><br></pre></td></tr></table></figure><h2>弹性盒子模型</h2>弹性盒子模型适用的场景是，一个大盒子装有好几个小盒子<a href = "https://blog.csdn.net/m0_46612221/article/details/120876111">参考CSDN</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">display: flex;启用弹性盒子模型</span><br><span class="line">flex-direction: row(默认方式，横向从左到右对齐)|row-reverse(从右到左)|column(从上到下纵向排列)|column-reverse(从下到上)</span><br><span class="line">justify-content: flex-start(垂直方向上居上摆放)|flex-end(垂直方向上居下摆放)|center(垂直方向居中)</span><br><span class="line">align-items: 和上边参数一样，表左右方向，start居左，end居右</span><br><span class="line">flex-grow: 1; 适用于子盒子的，子盒子分配比例(语言描述比较抽象，建议实际操作)；</span><br></pre></td></tr></table></figure><h2>浮动流</h2>float属性，只有left和right,新建一个层级。清除浮动用clear]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【杂谈】柚子社历史</title>
      <link href="/2024/10/08/%E3%80%90%E6%9D%82%E8%B0%88%E3%80%91%E6%9F%9A%E5%AD%90%E7%A4%BE%E5%8E%86%E5%8F%B2/"/>
      <url>/2024/10/08/%E3%80%90%E6%9D%82%E8%B0%88%E3%80%91%E6%9F%9A%E5%AD%90%E7%A4%BE%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p>写于2023.12.21</p><p>近些年来，柚子社在圈内名气一直很高，甚至在圈外都有一定的知名度。柚子社的废萌剧情、可爱画风、搞笑演出，得到了大部分玩家的喜爱。于是搜集资料，聊一聊柚子社的发展史。</p><hr><h1>诞生</h1><p>柚子社的成员最先是有六个人，全部来自于 株式会社Visual Art’s.在当时，Visual Art’s算是比较有名的公司了，旗下游戏品牌众多，比如Key社——《Clannad》:能哭的地方只有厕所和爸爸的怀里；SAGA PLANETS：《闪耀青春追逐记》、《ambitious mission》；包括冷门佳作《对你说再见》（俗称sayo教）也是其子品牌的作品。在2023年，Visual Art’s 被腾讯收购了</p><p>柚子社6名创业人Famishin、小舞一（こぶいち）、梦璃凛（むりりん）、天宫リツ、煎路、ろど，原是Visual Art’s旗下品牌之一Studio Mebius（已经白死不活啦）的职员，曾参与《SNOW》的制作。《SNOW》这部作品在当时获得了比较大的成功，几个年轻人觉得自己可以进行创业，开辟属于自己的天地</p><p>后来六人离开工作室，成立同人组织“TEAM-EXODUS”，于2005年12月30日在C69发售同人游戏《しょうよん! コドモ☆ちゃれんじ》。</p><p>其后“TEAM-EXODUS”作为母体，以Famishin为代表人法人化，创立柚子社（YUZU SOFT），并于2006年7月28日发售处女作《BRA-BAN! -The bonds of melody-》。截至目前（不算上子公司“酸柚子”）一共发布了12部作品。</p><p>柚子社六元老到现在也比较活跃，Famishin主要负责音乐和导演，在新作《天使纷扰》中也是负责起了这两项工作；小舞一（こぶいち）、梦璃凛（むりりん）主要负责原画，两人互相学习、交流，你所喜欢的很多角色基本都是这两人画的，柚子社的两个王牌画师；天宫リツ主要负责剧本，煎路主要负责画一些CG，ろど负责一些杂务（如网站设计、影片设计）</p><hr><h1>起步阶段:不断尝试</h1><p>柚子社的第一部作品是《管乐恋曲！<del>The bonds of melody</del>》，于2006年7月28日发售。作为柚子社的处女作，是柚子社少有的纯校园无魔幻要素的作品，这一部作品能体现出柚子社对于现实的思考，对离异家庭和校园霸凌进行了适当的探讨，并且已经有了天台野战，摔跤，月工之类的要素了，每个女主和两个配角都有出场BGM，甚至还为最后的演出甚至专门做了动画。但是缺点也比较明显：剧情发展过快、部分桥段重复，属于是一部纯日常、比较中规中矩的作品，没有大卖也没有亏本。</p><p>第二部作品是《E×E》，可以说是柚子社的黑历史了。在发售了处女作后，柚子社想尝试做一些剧情作，把侧重点往剧情方向转移，决定做一个比较黑深残的作品，学习隔壁虚渊玄，于2007年6月1日发售这部作品。背景设定不错：苦命男主遇到本应该死去的母亲却反被攻击，背后藏着什么秘密？但是无奈 天宫リツ 能力并不足够优秀，主线剧情不完整、还有ntr元素混入。一些东西让玩家看的莫名其妙，更像是一部残次品，理所当然，这部作品销量惨淡。</p><hr><h1>柚子剧情巅峰作（自己认为...）：夏空彼方</h1><p>经历了第二次失败后，柚子社深深地反省了自己的问题，天宫リツ 也意识到自己能力有限，于是拉上了另一个脚本家 玉泽圆，经过反省、构思，于2008年5月23日发售了第三部作品《夏空彼方》。故事讲述了男主朝仓壮太在假期期间来到了塔弦岛度假，住在叔母家的旅馆帮忙的故事（key社的夏日口袋会不会也是参考了这部作品呢？），催泪的剧情、优秀的人设，甚至有人称之为“第二部《Clannad》”。销量上远超上一部作品。值得一提的是，上部作品在国内没有多少汉化组接手，而这一部各种版本的汉化遍地开花，也得到了汉化组组员的好评。这部作品也比较特殊，只有三条女主线，没有单人线，剧情方面借鉴了欧美的一部电影《初恋50次》</p><p>我觉得，这部作品宣告了柚子社探索阶段的结束。柚子社在催泪方面还是进行了一定的尝试。不过，催泪的剧情、感人的音乐，估计柚子社再也做不出第二部《夏空彼方》了。可见是一个重要的转折点。有人说：夏空之后无柚子。也有人说：夏空之后真柚子。前三部作品柚子社一直在寻找自己的方向，风格也各有迥异，自《夏空彼方》后柚子社找到了自己的方向和定位。</p><hr><h1>初识废萌</h1><p>在上一次作品成功之后，柚子社开始尝试去制作废萌，华丽的转型为废萌，并将技术进行革新，启用了1280*720的分辨率。<br>两名王牌画师的技艺也炉火纯青，两个人画的立绘根本分不清是谁画的，画风几乎统一。<br>脚本家 天宫リツ 也拉了其他人共同创作，如写过《纯白交响曲》的北川晴、“中二社”的镜游（代表作《悠久之翼》）、绀野アスタ(代表作《亚托莉:我挚爱的时光》)，一起创作了很多优秀的作品。</p><p>从第四作《天神乱漫》起，柚子社的风格转向了轻松的日常搞笑（毕竟谁不喜欢可爱的美少女呢），UI系统也在带带更新进步，在第五部作品《noble works》里就已经具备了backlog跳跃的功能，第六部《DRACU-RIOT!》在剧情和黑深残等方面进行了适当的尝试，但还是以废萌为主，到第七部《天色幻想岛》，画风已经开始有近些年柚子作品的感觉了。</p><hr><h1>废萌领跑者：从0721开始！</h1>到了2015年，一部作品的横空出世以及出色的成绩，更是坚定了柚子社做废萌的决心，以图书馆0721开始，再到上头的Ciallo～(∠・ω< )⌒★，成为了柚子厨必备技能。柚子社的画风、UI系统、脚本都走向了成熟。这部作品就是《魔女的夜宴》<p>这部作品在国内的名气只增不减，出现了各种各样的同人二创、以及网友制作的各种奇怪的表情包，更是教会了广大柚子厨如何0721以及打招呼的正确用语，是柚子社废萌作品走向成熟的转折点，从此以后柚子厨数量暴增。</p><p>之后柚子社的作品越来越受欢迎，光《千恋*万花》销量就超过了40万份，柚子社也开始沿用Ciallo梗，讨喜的剧情和人设、没有黑深残的剧情、轻松搞笑的日常，获得广大玩家的喜爱。之后柚子社创立了子公司yuzusoft sour，子公司目前只发售了《PARQUET》这部作品。2023年4月28日，柚子社推出新作《天使☆騒々 RE-BOOT!》</p><hr><h1>总结</h1>从柚子社的发展史中，可以看出，最先柚子社还是尝试了许多，有黑深残、有刀子剧情作，后来开始主打废萌，可能废萌才是柚子社最擅长的吧，很多人也喜欢废萌。但柚子社的作品里，还是有刀子作剧情作的。或许柚子社不太擅长于制作一些黑深残、催泪的剧情作，不过柚子社能找到自己的定位、做自己擅长的类型，并慢慢发展下去，结果还是很不错的。]]></content>
      
      
      <categories>
          
          <category> galgame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Unity1】Unity入门笔记</title>
      <link href="/2024/10/08/%E3%80%90Unity1%E3%80%91Unity%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/10/08/%E3%80%90Unity1%E3%80%91Unity%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div id="content_views" class="htmledit_views">                    <p id="main-toc"><strong>目录</strong></p> <p id="%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0-toc" style="margin-left:0px;"><a href="#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0" rel="nofollow">生命周期函数</a></p> <p id="%C2%A0Inspector%E7%AA%97%E5%8F%A3%E5%8F%AF%E7%BC%96%E8%BE%91%E7%9A%84%E5%8F%98%E9%87%8F-toc" style="margin-left:0px;"><a href="#%C2%A0Inspector%E7%AA%97%E5%8F%A3%E5%8F%AF%E7%BC%96%E8%BE%91%E7%9A%84%E5%8F%98%E9%87%8F" rel="nofollow"> Inspector窗口可编辑的变量</a></p> <p id="MonoBehavior%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%86%85%E5%AE%B9-toc" style="margin-left:0px;"><a href="#MonoBehavior%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%86%85%E5%AE%B9" rel="nofollow">MonoBehavior中的重要内容</a></p> <p id="GameObject%E7%9F%A5%E8%AF%86%E7%82%B9-toc" style="margin-left:0px;"><a href="#GameObject%E7%9F%A5%E8%AF%86%E7%82%B9" rel="nofollow">GameObject知识点</a></p> <p id="%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F-toc" style="margin-left:40px;"><a href="#%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F" rel="nofollow">成员变量</a></p> <p id="%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95-toc" style="margin-left:40px;"><a href="#%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95" rel="nofollow">静态方法</a></p> <p id="%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1-toc" style="margin-left:80px;"><a href="#%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1" rel="nofollow">创建对象</a></p> <p id="%E6%9F%A5%E6%89%BE%E5%AF%B9%E8%B1%A1-toc" style="margin-left:80px;"><a href="#%E6%9F%A5%E6%89%BE%E5%AF%B9%E8%B1%A1" rel="nofollow">查找对象</a></p> <p id="%E9%80%9A%E8%BF%87%E5%90%8D%E5%AD%97%E6%9F%A5%E6%89%BE%E5%8D%95%E4%B8%AA%E5%AF%B9%E8%B1%A1-toc" style="margin-left:120px;"><a href="#%E9%80%9A%E8%BF%87%E5%90%8D%E5%AD%97%E6%9F%A5%E6%89%BE%E5%8D%95%E4%B8%AA%E5%AF%B9%E8%B1%A1" rel="nofollow">通过名字查找单个对象</a></p> <p id="%E9%80%9A%E8%BF%87Tag%E6%9D%A5%E6%9F%A5%E6%89%BE%E5%AF%B9%E8%B1%A1-toc" style="margin-left:120px;"><a href="#%E9%80%9A%E8%BF%87Tag%E6%9D%A5%E6%9F%A5%E6%89%BE%E5%AF%B9%E8%B1%A1" rel="nofollow">通过Tag来查找单个对象</a></p> <p id="%E9%80%9A%E8%BF%87Tag%E6%9F%A5%E6%89%BE%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1-toc" style="margin-left:120px;"><a href="#%E9%80%9A%E8%BF%87Tag%E6%9F%A5%E6%89%BE%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1" rel="nofollow">通过Tag查找多个对象</a></p> <p id="%E6%89%BE%E5%88%B0%E5%9C%BA%E6%99%AF%E4%B8%AD%E6%8C%82%E8%BD%BD%E6%9F%90%E4%B8%AA%E8%84%9A%E6%9C%AC-toc" style="margin-left:120px;"><a href="#%E6%89%BE%E5%88%B0%E5%9C%BA%E6%99%AF%E4%B8%AD%E6%8C%82%E8%BD%BD%E6%9F%90%E4%B8%AA%E8%84%9A%E6%9C%AC" rel="nofollow">找到场景中挂载某个脚本</a></p> <p id="%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%AF%B9%E8%B1%A1%EF%BC%88%E5%85%8B%E9%9A%86%E5%AF%B9%E8%B1%A1%EF%BC%89%E7%9A%84%E6%96%B9%E6%B3%95-toc" style="margin-left:80px;"><a href="#%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%AF%B9%E8%B1%A1%EF%BC%88%E5%85%8B%E9%9A%86%E5%AF%B9%E8%B1%A1%EF%BC%89%E7%9A%84%E6%96%B9%E6%B3%95" rel="nofollow">实例化对象&#xff08;克隆对象&#xff09;的方法</a></p> <p id="%E5%88%A0%E9%99%A4%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95-toc" style="margin-left:80px;"><a href="#%E5%88%A0%E9%99%A4%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95" rel="nofollow">删除对象的方法</a></p> <p id="%E8%BF%87%E5%9C%BA%E6%99%AF%E4%B8%8D%E7%A7%BB%E9%99%A4-toc" style="margin-left:80px;"><a href="#%E8%BF%87%E5%9C%BA%E6%99%AF%E4%B8%8D%E7%A7%BB%E9%99%A4" rel="nofollow">过场景不移除</a></p> <p id="%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95-toc" style="margin-left:40px;"><a href="#%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95" rel="nofollow">成员方法</a></p> <p id="%E5%88%9B%E5%BB%BA%E7%A9%BA%E7%89%A9%E4%BD%93-toc" style="margin-left:80px;"><a href="#%E5%88%9B%E5%BB%BA%E7%A9%BA%E7%89%A9%E4%BD%93" rel="nofollow">创建空物体</a></p> <p id="%E4%B8%BA%E5%AF%B9%E8%B1%A1%E6%B7%BB%E5%8A%A0%E8%84%9A%E6%9C%AC-toc" style="margin-left:80px;"><a href="#%E4%B8%BA%E5%AF%B9%E8%B1%A1%E6%B7%BB%E5%8A%A0%E8%84%9A%E6%9C%AC" rel="nofollow">为对象添加脚本</a></p> <p id="%E6%A0%87%E7%AD%BE%E6%AF%94%E8%BE%83-toc" style="margin-left:80px;"><a href="#%E6%A0%87%E7%AD%BE%E6%AF%94%E8%BE%83" rel="nofollow">标签比较</a></p> <p id="%E8%AE%BE%E7%BD%AE%E5%A4%B1%E6%B4%BB%2F%E6%BF%80%E6%B4%BB-toc" style="margin-left:80px;"><a href="#%E8%AE%BE%E7%BD%AE%E5%A4%B1%E6%B4%BB%2F%E6%BF%80%E6%B4%BB" rel="nofollow">设置失活/激活</a></p> <p id="%E6%AC%A1%E8%A6%81%E7%9A%84%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95-toc" style="margin-left:80px;"><a href="#%E6%AC%A1%E8%A6%81%E7%9A%84%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95" rel="nofollow">次要的成员方法</a></p> <p id="%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3_Time-toc" style="margin-left:0px;"><a href="#%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3_Time" rel="nofollow">时间相关_Time</a></p> <p id="%E6%97%B6%E9%97%B4%E7%BC%A9%E6%94%BE%E6%AF%94-toc" style="margin-left:40px;"><a href="#%E6%97%B6%E9%97%B4%E7%BC%A9%E6%94%BE%E6%AF%94" rel="nofollow">时间缩放比</a></p> <p id="%E5%B8%A7%E9%97%B4%E9%9A%94%E6%97%B6%E9%97%B4-toc" style="margin-left:40px;"><a href="#%E5%B8%A7%E9%97%B4%E9%9A%94%E6%97%B6%E9%97%B4" rel="nofollow">帧间隔时间</a></p> <p id="%E5%8F%97scale%E5%BD%B1%E5%93%8D-toc" style="margin-left:80px;"><a href="#%E5%8F%97scale%E5%BD%B1%E5%93%8D" rel="nofollow">受scale影响</a></p> <p id="%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D-toc" style="margin-left:80px;"><a href="#%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D" rel="nofollow">不受scale影响</a></p> <p id="%E6%B8%B8%E6%88%8F%E5%BC%80%E5%A7%8B%E5%88%B0%E7%8E%B0%E5%9C%A8%E7%9A%84%E6%97%B6%E9%97%B4-toc" style="margin-left:40px;"><a href="#%E6%B8%B8%E6%88%8F%E5%BC%80%E5%A7%8B%E5%88%B0%E7%8E%B0%E5%9C%A8%E7%9A%84%E6%97%B6%E9%97%B4" rel="nofollow">游戏开始到现在的时间</a></p> <p id="%E5%8F%97scale%E5%BD%B1%E5%93%8D-toc" style="margin-left:80px;"><a href="#%E5%8F%97scale%E5%BD%B1%E5%93%8D" rel="nofollow">受scale影响</a></p> <p id="%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D-toc" style="margin-left:80px;"><a href="#%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D" rel="nofollow">不受scale影响</a></p> <p id="%E7%89%A9%E7%90%86%E5%B8%A7%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94-toc" style="margin-left:40px;"><a href="#%E7%89%A9%E7%90%86%E5%B8%A7%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94" rel="nofollow">物理帧时间间隔</a></p> <p id="%E5%8F%97scale%E5%BD%B1%E5%93%8D-toc" style="margin-left:80px;"><a href="#%E5%8F%97scale%E5%BD%B1%E5%93%8D" rel="nofollow">受scale影响</a></p> <p id="%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D-toc" style="margin-left:80px;"><a href="#%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D" rel="nofollow">不受scale影响</a></p> <p id="%C2%A0%E5%B8%A7%E6%95%B0-toc" style="margin-left:40px;"><a href="#%C2%A0%E5%B8%A7%E6%95%B0" rel="nofollow"> 帧数</a></p> <p id="Transform-toc" style="margin-left:0px;"><a href="#Transform" rel="nofollow">Transform</a></p> <p id="Vector3%E5%9F%BA%E7%A1%80%E5%92%8CTransform%E4%BD%8D%E7%BD%AE-toc" style="margin-left:40px;"><a href="#Vector3%E5%9F%BA%E7%A1%80%E5%92%8CTransform%E4%BD%8D%E7%BD%AE" rel="nofollow">Vector3基础和Transform位置</a></p> <p id="%E7%94%B3%E6%98%8E%E5%8F%98%E9%87%8F-toc" style="margin-left:80px;"><a href="#%E7%94%B3%E6%98%8E%E5%8F%98%E9%87%8F" rel="nofollow">申明变量</a></p> <p id="%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97-toc" style="margin-left:80px;"><a href="#%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97" rel="nofollow">基本运算</a></p> <p id="%C2%A0%E5%B8%B8%E7%94%A8-toc" style="margin-left:80px;"><a href="#%C2%A0%E5%B8%B8%E7%94%A8" rel="nofollow"> 常用</a></p> <p id="%E4%BD%8D%E7%BD%AE-toc" style="margin-left:80px;"><a href="#%E4%BD%8D%E7%BD%AE" rel="nofollow">位置</a></p> <p id="%E7%BB%9D%E5%AF%B9%E4%BD%8D%E7%BD%AE-toc" style="margin-left:120px;"><a href="#%E7%BB%9D%E5%AF%B9%E4%BD%8D%E7%BD%AE" rel="nofollow">绝对位置</a></p> <p id="%E7%9B%B8%E5%AF%B9%E4%BD%8D%E7%BD%AE-toc" style="margin-left:120px;"><a href="#%E7%9B%B8%E5%AF%B9%E4%BD%8D%E7%BD%AE" rel="nofollow">相对位置</a></p> <p id="%E5%AF%B9%E8%B1%A1%E5%BD%93%E5%89%8D%E7%9A%84%E6%9C%9D%E5%90%91-toc" style="margin-left:120px;"><a href="#%E5%AF%B9%E8%B1%A1%E5%BD%93%E5%89%8D%E7%9A%84%E6%9C%9D%E5%90%91" rel="nofollow">对象当前的朝向</a></p> <p id="Transform%E4%BD%8D%E7%A7%BB-toc" style="margin-left:40px;"><a href="#Transform%E4%BD%8D%E7%A7%BB" rel="nofollow">Transform位移</a></p> <p id="%E8%87%AA%E5%B7%B1%E8%AE%A1%E7%AE%97%E7%A7%BB%E5%8A%A8-toc" style="margin-left:80px;"><a href="#%E8%87%AA%E5%B7%B1%E8%AE%A1%E7%AE%97%E7%A7%BB%E5%8A%A8" rel="nofollow">自己计算移动</a></p> <p id="API%E7%A7%BB%E5%8A%A8-toc" style="margin-left:80px;"><a href="#API%E7%A7%BB%E5%8A%A8" rel="nofollow">API移动</a></p> <p id="Transform%E8%A7%92%E5%BA%A6%E5%92%8C%E6%97%8B%E8%BD%AC-toc" style="margin-left:40px;"><a href="#Transform%E8%A7%92%E5%BA%A6%E5%92%8C%E6%97%8B%E8%BD%AC" rel="nofollow">Transform角度和旋转</a></p> <p id="%E8%A7%92%E5%BA%A6%E7%9B%B8%E5%85%B3-toc" style="margin-left:80px;"><a href="#%E8%A7%92%E5%BA%A6%E7%9B%B8%E5%85%B3" rel="nofollow">角度相关</a></p> <p id="%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%85%B3-toc" style="margin-left:80px;"><a href="#%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%85%B3" rel="nofollow">旋转相关</a></p> <p id="Transform%E7%BC%A9%E6%94%BE%E5%92%8C%E7%9C%8B%E5%90%91-toc" style="margin-left:40px;"><a href="#Transform%E7%BC%A9%E6%94%BE%E5%92%8C%E7%9C%8B%E5%90%91" rel="nofollow">Transform缩放和看向</a></p> <p id="%E7%BC%A9%E6%94%BE-toc" style="margin-left:80px;"><a href="#%E7%BC%A9%E6%94%BE" rel="nofollow">缩放</a></p> <p id="%E7%9C%8B%E5%90%91-toc" style="margin-left:80px;"><a href="#%E7%9C%8B%E5%90%91" rel="nofollow">看向</a></p> <p id="Transform%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB-toc" style="margin-left:40px;"><a href="#Transform%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB" rel="nofollow">Transform父子关系</a></p> <p id="%E8%8E%B7%E5%8F%96%E5%92%8C%E8%AE%BE%E7%BD%AE%E7%88%B6%E5%AF%B9%E8%B1%A1-toc" style="margin-left:80px;"><a href="#%E8%8E%B7%E5%8F%96%E5%92%8C%E8%AE%BE%E7%BD%AE%E7%88%B6%E5%AF%B9%E8%B1%A1" rel="nofollow">获取和设置父对象</a></p> <p id="%E6%8A%9B%E5%A6%BB%E5%BC%83%E5%AD%90-toc" style="margin-left:80px;"><a href="#%E6%8A%9B%E5%A6%BB%E5%BC%83%E5%AD%90" rel="nofollow">抛妻弃子</a></p> <p id="%E8%8E%B7%E5%8F%96%E5%AD%90%E5%AF%B9%E8%B1%A1-toc" style="margin-left:80px;"><a href="#%E8%8E%B7%E5%8F%96%E5%AD%90%E5%AF%B9%E8%B1%A1" rel="nofollow">获取子对象</a></p> <p id="%E5%AD%90%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C-toc" style="margin-left:80px;"><a href="#%E5%AD%90%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C" rel="nofollow">子对象操作</a></p> <p id="Transform%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2-toc" style="margin-left:40px;"><a href="#Transform%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2" rel="nofollow">Transform坐标转换</a></p> <p id="%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E8%BD%AC%E6%9C%AC%E5%9C%B0%E5%9D%90%E6%A0%87-toc" style="margin-left:80px;"><a href="#%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E8%BD%AC%E6%9C%AC%E5%9C%B0%E5%9D%90%E6%A0%87" rel="nofollow">世界坐标转本地坐标</a></p> <p id="%E6%9C%AC%E5%9C%B0%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E7%B3%BB-toc" style="margin-left:80px;"><a href="#%E6%9C%AC%E5%9C%B0%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E7%B3%BB" rel="nofollow">本地坐标转世界坐标</a></p> <p id="Input%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5-toc" style="margin-left:0px;"><a href="#Input%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5" rel="nofollow">Input鼠标键盘输入</a></p> <p id="%E9%BC%A0%E6%A0%87%E5%9C%A8%E5%B1%8F%E5%B9%95%E7%9A%84%E4%BD%8D%E7%BD%AE-toc" style="margin-left:40px;"><a href="#%E9%BC%A0%E6%A0%87%E5%9C%A8%E5%B1%8F%E5%B9%95%E7%9A%84%E4%BD%8D%E7%BD%AE" rel="nofollow">鼠标在屏幕的位置</a></p> <p id="%E6%A3%80%E6%B5%8B%E9%BC%A0%E6%A0%87%E8%BE%93%E5%85%A5-toc" style="margin-left:40px;"><a href="#%E6%A3%80%E6%B5%8B%E9%BC%A0%E6%A0%87%E8%BE%93%E5%85%A5" rel="nofollow">检测鼠标输入</a></p> <p id="%E6%A3%80%E6%B5%8B%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5-toc" style="margin-left:40px;"><a href="#%E6%A3%80%E6%B5%8B%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5" rel="nofollow">检测键盘输入</a></p> <p id="%E6%A3%80%E6%B5%8B%E9%BB%98%E8%AE%A4%E8%BD%B4%E8%BE%93%E5%85%A5-toc" style="margin-left:40px;"><a href="#%E6%A3%80%E6%B5%8B%E9%BB%98%E8%AE%A4%E8%BD%B4%E8%BE%93%E5%85%A5" rel="nofollow">检测默认轴输入</a></p> <p id="Input%E8%A7%A6%E6%91%B8%E6%89%8B%E6%9F%84%E9%99%80%E8%9E%BA%E4%BB%AA-toc" style="margin-left:0px;"><a href="#Input%E8%A7%A6%E6%91%B8%E6%89%8B%E6%9F%84%E9%99%80%E8%9E%BA%E4%BB%AA" rel="nofollow">Input触摸手柄陀螺仪</a></p> <p id="%E6%A3%80%E6%B5%8B%E4%BB%BB%E6%84%8F%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE-toc" style="margin-left:40px;"><a href="#%E6%A3%80%E6%B5%8B%E4%BB%BB%E6%84%8F%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE" rel="nofollow">检测任意键盘按键</a></p> <p id="%E6%89%8B%E6%9F%84%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3-toc" style="margin-left:40px;"><a href="#%E6%89%8B%E6%9F%84%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3" rel="nofollow">手柄输入相关</a></p> <p id="%E8%A7%A6%E6%91%B8%E3%80%81%E9%99%80%E8%9E%BA%E4%BB%AA%E7%9B%B8%E5%85%B3-toc" style="margin-left:40px;"><a href="#%E8%A7%A6%E6%91%B8%E3%80%81%E9%99%80%E8%9E%BA%E4%BB%AA%E7%9B%B8%E5%85%B3" rel="nofollow">触摸、陀螺仪相关</a></p> <p id="%E5%B1%8F%E5%B9%95%E7%9B%B8%E5%85%B3Screen-toc" style="margin-left:0px;"><a href="#%E5%B1%8F%E5%B9%95%E7%9B%B8%E5%85%B3Screen" rel="nofollow">屏幕相关Screen</a></p> <p id="Camera%E5%8F%AF%E7%BC%96%E8%BE%91%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E-toc" style="margin-left:0px;"><a href="#Camera%E5%8F%AF%E7%BC%96%E8%BE%91%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E" rel="nofollow">Camera可编辑参数说明</a></p> <p id="Clear%20Flags-toc" style="margin-left:40px;"><a href="#Clear%20Flags" rel="nofollow">Clear Flags</a></p> <p id="Culling%20Mask-toc" style="margin-left:40px;"><a href="#Culling%20Mask" rel="nofollow">Culling Mask</a></p> <p id="Projection-toc" style="margin-left:40px;"><a href="#Projection" rel="nofollow">Projection</a></p> <p id="perspective%E9%80%8F%E8%A7%86%E6%A8%A1%E5%BC%8F%EF%BC%88%E8%BF%91%E5%A4%A7%E8%BF%9C%E5%B0%8F%EF%BC%8C%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E3D%E6%B8%B8%E6%88%8F%EF%BC%89-toc" style="margin-left:80px;"><a href="#perspective%E9%80%8F%E8%A7%86%E6%A8%A1%E5%BC%8F%EF%BC%88%E8%BF%91%E5%A4%A7%E8%BF%9C%E5%B0%8F%EF%BC%8C%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E3D%E6%B8%B8%E6%88%8F%EF%BC%89" rel="nofollow">perspective透视模式&#xff08;近大远小&#xff0c;一般用于3D游戏&#xff09;</a></p> <p id="orthographic%20%E6%AD%A3%E4%BA%A4%E6%91%84%E5%83%8F%E6%9C%BA%EF%BC%88%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E2D%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%EF%BC%89-toc" style="margin-left:80px;"><a href="#orthographic%20%E6%AD%A3%E4%BA%A4%E6%91%84%E5%83%8F%E6%9C%BA%EF%BC%88%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E2D%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%EF%BC%89" rel="nofollow">orthographic 正交摄像机&#xff08;一般用于2D游戏制作&#xff09;</a></p> <p id="Clipping%20Planes-toc" style="margin-left:40px;"><a href="#Clipping%20Planes" rel="nofollow">Clipping Planes</a></p> <p id="Depth-toc" style="margin-left:40px;"><a href="#Depth" rel="nofollow">Depth</a></p> <p id="Redering%20path-toc" style="margin-left:40px;"><a href="#Redering%20path" rel="nofollow">Redering path</a></p> <p id="Occlusion%20Culling-toc" style="margin-left:40px;"><a href="#Occlusion%20Culling" rel="nofollow">Occlusion Culling</a></p> <p id="Viewport%20Rect%C2%A0-toc" style="margin-left:40px;"><a href="#Viewport%20Rect%C2%A0" rel="nofollow">Viewport Rect </a></p> <p id="Rendering%20path-toc" style="margin-left:40px;"><a href="#Rendering%20path" rel="nofollow">Rendering path</a></p> <p id="%E5%8F%AA%E5%81%9A%E4%BA%86%E8%A7%A3-toc" style="margin-left:40px;"><a href="#%E5%8F%AA%E5%81%9A%E4%BA%86%E8%A7%A3" rel="nofollow">只做了解</a></p> <p id="Camera%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3-toc" style="margin-left:0px;"><a href="#Camera%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3" rel="nofollow">Camera代码相关</a></p> <p id="%E5%85%89%E6%BA%90%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80-toc" style="margin-left:0px;"><a href="#%E5%85%89%E6%BA%90%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80" rel="nofollow">光源系统基础</a></p> <p id="%E5%85%89%E6%BA%90%E7%BB%84%E4%BB%B6-toc" style="margin-left:40px;"><a href="#%E5%85%89%E6%BA%90%E7%BB%84%E4%BB%B6" rel="nofollow">光源组件</a></p> <p id="Type%E5%85%89%E6%BA%90%E7%B1%BB%E5%9E%8B-toc" style="margin-left:80px;"><a href="#Type%E5%85%89%E6%BA%90%E7%B1%BB%E5%9E%8B" rel="nofollow">Type光源类型</a></p> <p id="Color%E5%85%89%E6%BA%90%E9%A2%9C%E8%89%B2-toc" style="margin-left:80px;"><a href="#Color%E5%85%89%E6%BA%90%E9%A2%9C%E8%89%B2" rel="nofollow">Color光源颜色</a></p> <p id="Mode%E5%85%89%E6%BA%90%E6%A8%A1%E5%BC%8F-toc" style="margin-left:80px;"><a href="#Mode%E5%85%89%E6%BA%90%E6%A8%A1%E5%BC%8F" rel="nofollow">Mode光源模式</a></p> <p id="Intensity%E5%85%89%E6%BA%90%E4%BA%AE%E5%BA%A6-toc" style="margin-left:80px;"><a href="#Intensity%E5%85%89%E6%BA%90%E4%BA%AE%E5%BA%A6" rel="nofollow">Intensity光源亮度</a></p> <p id="Shadow%C2%A0Type-toc" style="margin-left:80px;"><a href="#Shadow%C2%A0Type" rel="nofollow">Shadow Type</a></p> <p id="Cookie-toc" style="margin-left:80px;"><a href="#Cookie" rel="nofollow">Cookie</a></p> <p id="Draw%20Halo-toc" style="margin-left:80px;"><a href="#Draw%20Halo" rel="nofollow">Draw Halo</a></p> <p id="Flare-toc" style="margin-left:80px;"><a href="#Flare" rel="nofollow">Flare</a></p> <p id="Culling%20Mask-toc" style="margin-left:80px;"><a href="#Culling%20Mask" rel="nofollow">Culling Mask</a></p> <p id="Indirect%20Multiplier-toc" style="margin-left:80px;"><a href="#Indirect%20Multiplier" rel="nofollow">Indirect Multiplier</a></p> <p id="RealtimeShadows-toc" style="margin-left:80px;"><a href="#RealtimeShadows" rel="nofollow">RealtimeShadows</a></p> <p id="Cookie%20Size-toc" style="margin-left:80px;"><a href="#Cookie%20Size" rel="nofollow">Cookie Size</a></p> <p id="%E5%85%89%E9%9D%A2%E6%9D%BF%E7%9B%B8%E5%85%B3-toc" style="margin-left:40px;"><a href="#%E5%85%89%E9%9D%A2%E6%9D%BF%E7%9B%B8%E5%85%B3" rel="nofollow">光面板相关</a></p> <p id="%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE-toc" style="margin-left:80px;"><a href="#%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE" rel="nofollow">环境相关设置</a></p> <p id="%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE-toc" style="margin-left:80px;"><a href="#%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE" rel="nofollow">其他设置</a></p> <p id="%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B-toc" style="margin-left:0px;"><a href="#%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B" rel="nofollow">碰撞检测</a></p> <p id="%E5%88%9A%E4%BD%93-toc" style="margin-left:40px;"><a href="#%E5%88%9A%E4%BD%93" rel="nofollow">刚体</a></p> <p id="%E7%A2%B0%E6%92%9E%E5%99%A8-toc" style="margin-left:40px;"><a href="#%E7%A2%B0%E6%92%9E%E5%99%A8" rel="nofollow">碰撞器</a></p> <p id="%E7%A7%8D%E7%B1%BB%EF%BC%9A-toc" style="margin-left:80px;"><a href="#%E7%A7%8D%E7%B1%BB%EF%BC%9A" rel="nofollow">种类&#xff1a;</a></p> <p id="%E5%85%B1%E5%90%8C%E5%8F%82%E6%95%B0%EF%BC%9A-toc" style="margin-left:80px;"><a href="#%E5%85%B1%E5%90%8C%E5%8F%82%E6%95%B0%EF%BC%9A" rel="nofollow">共同参数&#xff1a;</a></p> <p id="%E5%B8%B8%E7%94%A8%E7%A2%B0%E6%92%9E%E5%99%A8%EF%BC%9A-toc" style="margin-left:80px;"><a href="#%E5%B8%B8%E7%94%A8%E7%A2%B0%E6%92%9E%E5%99%A8%EF%BC%9A" rel="nofollow">常用碰撞器&#xff1a;</a></p> <p id="%E5%BC%82%E5%BD%A2%E7%89%A9%E4%BD%93%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%A7%8D%E7%A2%B0%E6%92%9E%E5%99%A8%E7%BB%84%E5%90%88-toc" style="margin-left:80px;"><a href="#%E5%BC%82%E5%BD%A2%E7%89%A9%E4%BD%93%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%A7%8D%E7%A2%B0%E6%92%9E%E5%99%A8%E7%BB%84%E5%90%88" rel="nofollow">异形物体使用多种碰撞器组合</a></p> <p id="%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E7%A2%B0%E6%92%9E%E5%99%A8-toc" style="margin-left:80px;"><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E7%A2%B0%E6%92%9E%E5%99%A8" rel="nofollow">不常用的碰撞器</a></p> <p id="%C2%A0%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8-toc" style="margin-left:40px;"><a href="#%C2%A0%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8" rel="nofollow"> 物理材质</a></p> <p id="%E5%88%9B%E5%BB%BA%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8-toc" style="margin-left:80px;"><a href="#%E5%88%9B%E5%BB%BA%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8" rel="nofollow">创建物理材质</a></p> <p id="%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8%E5%8F%82%E6%95%B0-toc" style="margin-left:80px;"><a href="#%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8%E5%8F%82%E6%95%B0" rel="nofollow">物理材质参数</a></p> <p id="%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0-toc" style="margin-left:40px;"><a href="#%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0" rel="nofollow">碰撞检测函数</a></p> <p id="%E7%89%A9%E7%90%86%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0-toc" style="margin-left:80px;"><a href="#%E7%89%A9%E7%90%86%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0" rel="nofollow">物理碰撞检测响应函数</a></p> <p id="%E8%A7%A6%E5%8F%91%E5%99%A8%E6%A3%80%E6%B5%8B%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0-toc" style="margin-left:80px;"><a href="#%E8%A7%A6%E5%8F%91%E5%99%A8%E6%A3%80%E6%B5%8B%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0" rel="nofollow">触发器检测响应函数</a></p> <p id="%E6%98%8E%E7%A1%AE%E4%BD%95%E6%97%B6%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0-toc" style="margin-left:80px;"><a href="#%E6%98%8E%E7%A1%AE%E4%BD%95%E6%97%B6%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0" rel="nofollow">明确何时响应函数</a></p> <p id="%E7%A2%B0%E6%92%9E%E5%92%8C%E8%A7%A6%E5%8F%91%E5%99%A8%E5%87%BD%E6%95%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E5%86%99%E6%88%90%E8%99%9A%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E5%AD%90%E7%B1%BB%E4%B8%AD%E9%87%8D%E5%86%99%E9%80%BB%E8%BE%91-toc" style="margin-left:80px;"><a href="#%E7%A2%B0%E6%92%9E%E5%92%8C%E8%A7%A6%E5%8F%91%E5%99%A8%E5%87%BD%E6%95%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E5%86%99%E6%88%90%E8%99%9A%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E5%AD%90%E7%B1%BB%E4%B8%AD%E9%87%8D%E5%86%99%E9%80%BB%E8%BE%91" rel="nofollow">碰撞和触发器函数都可以写成虚函数&#xff0c;在子类中重写逻辑</a></p> <p id="%E5%88%9A%E4%BD%93%E5%8A%A0%E5%8A%9B-toc" style="margin-left:40px;"><a href="#%E5%88%9A%E4%BD%93%E5%8A%A0%E5%8A%9B" rel="nofollow">刚体加力</a></p> <p id="%E5%88%9A%E4%BD%93%E8%87%AA%E5%B8%A6%E6%B7%BB%E5%8A%A0%E5%8A%9B%E7%9A%84%E6%96%B9%E6%B3%95-toc" style="margin-left:80px;"><a href="#%E5%88%9A%E4%BD%93%E8%87%AA%E5%B8%A6%E6%B7%BB%E5%8A%A0%E5%8A%9B%E7%9A%84%E6%96%B9%E6%B3%95" rel="nofollow">刚体自带添加力的方法</a></p> <p id="%E5%8A%9B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%A8%A1%E5%BC%8F-toc" style="margin-left:80px;"><a href="#%E5%8A%9B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%A8%A1%E5%BC%8F" rel="nofollow">力的几种模式</a></p> <p id="%E5%8A%9B%E5%9C%BA%E8%84%9A%E6%9C%AC-toc" style="margin-left:80px;"><a href="#%E5%8A%9B%E5%9C%BA%E8%84%9A%E6%9C%AC" rel="nofollow">力场脚本</a></p> <p id="%E5%88%9A%E4%BD%93%E7%9A%84%E4%BC%91%E7%9C%A0-toc" style="margin-left:80px;"><a href="#%E5%88%9A%E4%BD%93%E7%9A%84%E4%BC%91%E7%9C%A0" rel="nofollow">刚体的休眠</a></p> <p id="%C2%A0%E9%9F%B3%E6%95%88%E7%B3%BB%E7%BB%9F-toc" style="margin-left:0px;"><a href="#%C2%A0%E9%9F%B3%E6%95%88%E7%B3%BB%E7%BB%9F" rel="nofollow"> 音效系统</a></p> <p id="%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5-toc" style="margin-left:40px;"><a href="#%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5" rel="nofollow">音频文件导入</a></p> <p id="%C2%A0%E9%9F%B3%E9%A2%91%E6%BA%90%E5%92%8C%E9%9F%B3%E9%A2%91%E7%9B%91%E5%90%AC%E8%84%9A%E6%9C%AC-toc" style="margin-left:40px;"><a href="#%C2%A0%E9%9F%B3%E9%A2%91%E6%BA%90%E5%92%8C%E9%9F%B3%E9%A2%91%E7%9B%91%E5%90%AC%E8%84%9A%E6%9C%AC" rel="nofollow"> 音频源和音频监听脚本</a></p> <p id="%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6%E9%9F%B3%E9%A2%91%E6%BA%90-toc" style="margin-left:40px;"><a href="#%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6%E9%9F%B3%E9%A2%91%E6%BA%90" rel="nofollow">代码控制音频源</a></p> <p id="%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6%E6%92%AD%E6%94%BE%E5%81%9C%E6%AD%A2-toc" style="margin-left:80px;"><a href="#%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6%E6%92%AD%E6%94%BE%E5%81%9C%E6%AD%A2" rel="nofollow">代码控制播放停止</a></p> <p id="%E6%A3%80%E6%B5%8B%E9%9F%B3%E6%95%88%E6%98%AF%E5%90%A6%E6%92%AD%E6%94%BE%E5%AE%8C%E6%AF%95-toc" style="margin-left:80px;"><a href="#%E6%A3%80%E6%B5%8B%E9%9F%B3%E6%95%88%E6%98%AF%E5%90%A6%E6%92%AD%E6%94%BE%E5%AE%8C%E6%AF%95" rel="nofollow">检测音效是否播放完毕</a></p> <p id="%E5%8A%A8%E6%80%81%E6%8E%A7%E5%88%B6%E9%9F%B3%E6%95%88%E6%92%AD%E6%94%BE-toc" style="margin-left:80px;"><a href="#%E5%8A%A8%E6%80%81%E6%8E%A7%E5%88%B6%E9%9F%B3%E6%95%88%E6%92%AD%E6%94%BE" rel="nofollow">动态控制音效播放</a></p> <p id="%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3-toc" style="margin-left:40px;"><a href="#%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3" rel="nofollow">麦克风输入相关</a></p> <p id="%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E9%BA%A6%E5%85%8B%E9%A3%8E%E4%BF%A1%E6%81%AF-toc" style="margin-left:80px;"><a href="#%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E9%BA%A6%E5%85%8B%E9%A3%8E%E4%BF%A1%E6%81%AF" rel="nofollow">获取设备麦克风信息</a></p> <p id="%E5%BC%80%E5%A7%8B%E5%BD%95%E5%88%B6-toc" style="margin-left:80px;"><a href="#%E5%BC%80%E5%A7%8B%E5%BD%95%E5%88%B6" rel="nofollow">开始录制</a></p> <p id="%E7%BB%93%E6%9D%9F%E5%BD%95%E5%88%B6-toc" style="margin-left:80px;"><a href="#%E7%BB%93%E6%9D%9F%E5%BD%95%E5%88%B6" rel="nofollow">结束录制</a></p> <p id="%E8%8E%B7%E5%8F%96%E9%9F%B3%E9%A2%91%E6%95%B0%E6%8D%AE%E7%94%A8%E4%BA%8E%E5%AD%98%E5%82%A8%E6%88%96%E4%BC%A0%E8%BE%93-toc" style="margin-left:80px;"><a href="#%E8%8E%B7%E5%8F%96%E9%9F%B3%E9%A2%91%E6%95%B0%E6%8D%AE%E7%94%A8%E4%BA%8E%E5%AD%98%E5%82%A8%E6%88%96%E4%BC%A0%E8%BE%93" rel="nofollow">获取音频数据用于存储或传输</a></p> <hr id="hr-toc" /> <p></p> <h2 id="%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0">生命周期函数</h2> <pre><code class="language-cs">using System.Collections;using System.Collections.Generic;using UnityEngine;<p>public class Lesson1 : MonoBehaviour<br>&#123;<br>    &#x2F;&#x2F;当前类对象被创建时才会调用<br>    &#x2F;&#x2F;类似构造函数 创建时进行一些初始化操作<br>    void Awake()<br>    &#123;<br>        print(&#34;Awake&#34;);<br>    &#125;<br>    &#x2F;&#x2F;当对象被激活时调用<br>    void OnEnable()<br>    &#123;<br>        print(&#34;Onenable&#34;);<br>    &#125;<br>    &#x2F;&#x2F;用于初始化信息 但比Awake要晚一点<br>    &#x2F;&#x2F;在对象进行第一次帧更新之前执行<br>    void Start()<br>    &#123;<br>        print(&#34;Start&#34;);<br>    &#125;<br>    &#x2F;&#x2F;它主要是用于进行物理更新<br>    &#x2F;&#x2F;它的时间间隔是可在project setting中的 Time里去设置的<br>    void FixedUpdate()<br>    &#123;<br>        print(&#34;FixedUpdate&#34;);<br>    &#125;<br>    &#x2F;&#x2F;处理游戏核心逻辑性更新的函数&#xff0c;每次循环执行一次<br>    void Update()<br>    &#123;<br>        print(&#34;Update&#34;);<br>    &#125;<br>    &#x2F;&#x2F;一般用来更新摄像机位置<br>    &#x2F;&#x2F;update和Lateupdate之间 Unity进了一些处理处理动画相关的更新<br>    void LateUpdate()<br>    &#123;<br>        print(&#34;LateUpdate&#34;);<br>    &#125;<br>    &#x2F;&#x2F;对象失活时调用<br>    void OnDisable()<br>    &#123;<br>        print(&#34;Ondisable&#34;);<br>    &#125;<br>    &#x2F;&#x2F;对象被删除时调用<br>    void OnDestroy()<br>    &#123;<br>        print(&#34;OnDestroy&#34;);<br>    &#125;<br>&#125;<br></code></pre> </p><h2 id="%C2%A0Inspector%E7%AA%97%E5%8F%A3%E5%8F%AF%E7%BC%96%E8%BE%91%E7%9A%84%E5%8F%98%E9%87%8F"> Inspector窗口可编辑的变量</h2> <p>1.私有和保护类无法显示编辑</p> <p>2.可以使私有和保护类在窗口中显示编辑&#xff0c;要加上强制序列化字段&#xff1a;</p> <pre><code class="language-cs">    [SerializeField]    private int i1;</code></pre> <p>3.公共类可以显示编辑</p> <p>4.公共类也可以使其不能在窗口中显示编辑&#xff0c;要加上隐藏字段&#xff1a;</p> <pre><code class="language-cs">    [HideInInspector]    public string s;</code></pre> <p>5.大部分类型都能显示编辑&#xff1a;</p> <pre><code class="language-cs">using System.Collections;using System.Collections.Generic;using System.Data.SqlTypes;using UnityEngine;<p>public enum E_TestEnum<br>&#123;<br>    Normal,<br>    Player,<br>&#125;<br>public struct MyStruct<br>&#123;<br>    public int x;<br>    public int y;<br>&#125;<br>public class MyClass<br>&#123;<br>    public int age;<br>    public string name;<br>&#125;<br>public class Lesson2 : MonoBehaviour<br>&#123;</p><pre><code>//可以被显示public int[] array;public List&amp;lt;int&amp;gt; list;public E_TestEnum type;public GameObject gameObj;//不能被显示public Dictionary&amp;lt;int, string&amp;gt; dic;//字典public MyStruct myStruct;//自定义类型public MyClass myClass;</code></pre><p>}<br></code></pre> </p><p>6.使自定义类型能够显示编辑&#xff0c;在类定义之前加上[System.Serializable]:</p> <pre><code class="language-cs">[System.Serializable]public struct MyStruct&#123;    public int x;    public int y;&#125;</code></pre> <p>7.其它补充&#xff1a;</p> <pre><code class="language-cs">using System.Collections;using System.Collections.Generic;using System.Data.SqlTypes;using UnityEngine;<p>public class Lesson2 : MonoBehaviour<br>&#123;<br>    &#x2F;&#x2F;文字标签分组<br>    [Header(&#34;基础属性&#34;)]<br>    public int age&#61;10;<br>    public string name;<br>    [Header(&#34;战斗属性&#34;)]<br>    public int atk;<br>    public int def;<br>    &#x2F;&#x2F;悬停注释<br>    [Tooltip(&#34;闪避&#34;)]<br>    public int miss;<br>    &#x2F;&#x2F;间隔<br>    [Space()]<br>    public int crit;<br>    &#x2F;&#x2F;显示滑条范围<br>    [Range(0,10)]<br>    public float luck;<br>    &#x2F;&#x2F;多行显示字符串&#xff0c;默认为三行<br>    [Multiline()]<br>    public string s1;<br>    [TextArea(3,4)]<br>    public string s2;<br>    &#x2F;&#x2F;添加快捷方法&#xff0c;第一个参数为按钮名&#xff0c;第二个为方法名&#xff08;不能带参数&#xff09;<br>    [ContextMenuItem(&#34;重置&#34;,&#34;Test&#34;)]<br>    public int Money;<br>    private void Test()<br>    &#123;<br>        Money &#61; 1;<br>    &#125;<br>    &#x2F;&#x2F;为方法添加特性&#xff0c;使其能在Inspector中执行<br>    [ContextMenu(&#34;测试&#34;)]<br>    private void testFun()<br>    &#123;<br>        print(&#34;测试成功&#34;);<br>    &#125;</p><p>&#125;<br></code></pre> </p><p>注意&#xff1a;</p> <p>1. Inspector窗口中的变量关联的就是对象的成员变量&#xff0c;运行时改变他们就是在改变成员变量</p> <p>2.脚本部署完毕后&#xff0c;再改变脚本中变量的默认值&#xff0c;窗口中的值也不会改变&#xff0c;可以先移除脚本在拖拽上去</p> <p>3.如果需要使用运行中的值可以先copy再paste</p> <h2 id="MonoBehavior%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%86%85%E5%AE%B9">MonoBehavior中的重要内容</h2> <pre><code class="language-cs">using JetBrains.Annotations;using System.Collections;using System.Collections.Generic;using Unity.VisualScripting;using UnityEngine;<p>public class Lesson3 : MonoBehaviour<br>&#123;</p><pre><code>void Start()&#123;    //1.获取依附的Gameobject    print(this.gameObject.name);//this可省略&amp;#xff0c;可直接用gameObject获取    //2.获取依附的Gameobject的位置信息    //得到对象位置信息    print(this.transform.position);//位置    print(this.transform.eulerAngles);//角度    print(this.transform.lossyScale);//缩放大小    //this.gameObject.transform 与 this.transform相同&amp;#xff0c;故使用后者&amp;#xff0c;this也可省        //控制脚本是否激活&amp;#xff1a;    this.enabled &amp;#61; true;    this.enabled &amp;#61; false;    //得到依附对象上挂载的其它脚本    public Lesson2 Other;    print(Other.gameObject.name);        //1.得到自己挂载的单个脚本    //根据脚本名获取,若没有对应脚本则获取失败返回空值    Lesson3_Test t &amp;#61; this.GetComponent(&amp;#34;Lesson3_Test&amp;#34;) as Lesson3_Test;//父类装到子类需转换类型    print(t);    //根据Type获取    t &amp;#61; this.GetComponent(typeof(Lesson3_Test)) as Lesson3_Test;    print(t);    //根据泛型获取 建议使用泛型获取 因为不用二次转换    t &amp;#61; this.GetComponent&amp;lt;Lesson3_Test&amp;gt;();    print(t);    //2.得到自己挂载的同种类型的多个脚本    Lesson3[] arr &amp;#61; this.GetComponents&amp;lt;Lesson3&amp;gt;();    List&amp;lt;Lesson3&amp;gt; l &amp;#61; new List&amp;lt;Lesson3&amp;gt;();    this.GetComponents&amp;lt;Lesson3&amp;gt;(l);    //3.得到子对象挂载的脚本&amp;#xff0c;它默认也会找自己身上是否有挂载了该脚本    t &amp;#61; this.GetComponentInChildren&amp;lt;Lesson3_Test&amp;gt;();//圆弧括号内的参数为true/false&amp;#xff0c;若为true则子对象失活也能查找到该脚本&amp;#xff0c;默认为false    //得子对象 挂载脚本 多个    Lesson3_Test[] lts &amp;#61; this.GetComponentsInChildren&amp;lt;Lesson3_Test&amp;gt;(true);    print(lts.Length);    List &amp;lt; Lesson3_Test &amp;gt; list2 &amp;#61; new List&amp;lt;Lesson3_Test&amp;gt;(); this.GetComponentsInChildren&amp;lt;Lesson3_Test&amp;gt;(true, list2);    print(list2.Count);    //4.得到父对象挂载的脚本(它默认也会找自己身上是否挂载该脚本)    t &amp;#61; this.GetComponentInParent&amp;lt;Lesson3_Test&amp;gt;();    print(t);    lts &amp;#61; this.GetComponentsInParent &amp;lt; Lesson3_Test &amp;gt; (); print(lts.Length);    //5.尝试获取脚本    if(this.TryGetComponent&amp;lt;Lesson3_Test&amp;gt;(out t))    &#123;        //相关处理    &#125;    &#125;</code></pre><p>}<br></code></pre> </p><h2 id="GameObject%E7%9F%A5%E8%AF%86%E7%82%B9">GameObject知识点</h2> <h3 id="%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F">成员变量</h3> <pre><code class="language-cs">//名字print(this.gameObject.name);this.gameObject.name &#61; &#34;改名&#34;;print(this.gameObject.name);//是否激活print(this.gameObject.activeSelf);//是否为静态print(this.gameObject.isStatic);//层级&#xff08;int类型&#xff09;print(this.gameObject.layer);//标签&#xff08;string类型&#xff09;print(this.gameObject.tag);//transformprint(this.gameObject.transform);//GameObject中也有transform//但Mono中也有所以与this.transform效果相同</code></pre> <h3 id="%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95">静态方法</h3> <h4 id="%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1">创建对象</h4> <p>可以通过GameObject.CreatePrimitive方法创建已有几何体&#xff0c;并且可对其内容进行修改&#xff1a;</p> <pre><code>GameObject obj &#61; GameObject.CreatePrimitive(PrimitiveType.Cube);obj.name &#61; &#34;创建的立方体&#34;;</code></pre> <h4 id="%E6%9F%A5%E6%89%BE%E5%AF%B9%E8%B1%A1">查找对象</h4> <h5 id="%E9%80%9A%E8%BF%87%E5%90%8D%E5%AD%97%E6%9F%A5%E6%89%BE%E5%8D%95%E4%B8%AA%E5%AF%B9%E8%B1%A1">通过名字查找单个对象</h5> <p>使用GameObject.Find()方法&#xff0c;但是效率低下&#xff0c;会遍历场景中所有对象</p> <pre><code>GameObject obj2 &#61; GameObject.Find(&#34;创建&#34;);if (obj2 !&#61; null)&#123;    print(&#34;未找到对应对象&#34;);&#125;else&#123;    print(obj2.name);&#125;</code></pre> <h5 id="%E9%80%9A%E8%BF%87Tag%E6%9D%A5%E6%9F%A5%E6%89%BE%E5%AF%B9%E8%B1%A1">通过Tag来查找单个对象</h5> <p>使用GameObject.FindGameObjectsWithTag(&#34;Tagname&#34;)或者GameObject.FindWithTag(&#34;Tagname&#34;)来查找&#xff0c;二者相同</p> <pre><code class="language-cs">GameObject obj3 &#61; GameObject.FindWithTag(&#34;Player&#34;);if (obj3 !&#61; null)&#123;    print(&#34;根据tag找到的对象&#34; &#43; obj3.name);&#125;else&#123;    print(&#34;根据tag未找到对象&#34;);&#125;</code></pre> <p>以上两种查找方式都找不到失活的对象&#xff0c;而且若查找到多个符合条件的对象无法确定返回的是哪一个</p> <h5 id="%E9%80%9A%E8%BF%87Tag%E6%9F%A5%E6%89%BE%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1">通过Tag查找多个对象</h5> <p>使用GameObject.FindGameObjectsWithTag(&#34;Tagname&#34;)&#xff0c;也找不到失活的对象</p> <pre><code class="language-cs">GameObject[] objs &#61; GameObject.FindGameObjectsWithTag(&#34;Player&#34;);print(objs.Length);</code></pre> <h5 id="%E6%89%BE%E5%88%B0%E5%9C%BA%E6%99%AF%E4%B8%AD%E6%8C%82%E8%BD%BD%E6%9F%90%E4%B8%AA%E8%84%9A%E6%9C%AC">找到场景中挂载某个脚本</h5> <p>使用GameObject.FindObjectOfType&lt;&gt;()&#xff0c;效率更加低下&#xff0c;遍历场景中的对象还要遍历对象上的所有脚本。</p> <pre><code class="language-cs">Lesson4  o  &#61; GameObject.FindObjectOfType&lt;Lesson4&gt;();print(o.gameObject.name);</code></pre> <h4 id="%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%AF%B9%E8%B1%A1%EF%BC%88%E5%85%8B%E9%9A%86%E5%AF%B9%E8%B1%A1%EF%BC%89%E7%9A%84%E6%96%B9%E6%B3%95">实例化对象&#xff08;克隆对象&#xff09;的方法</h4> <p>作用是根据已有的GameObject对象&#xff0c;创建出一个与之一样的对象。</p> <p>一种是克隆场景上已有的对象&#xff0c;另一种是克隆预设体&#xff0c;将对象或者预设体拖拽过去即可。</p> <p>使用GameObject.Instantiate()函数&#xff0c;该函数属于Object类中&#xff0c;故如果继承了MonoBehavior类使用时可以不加上GameObject直接使用</p> <pre><code class="language-cs">GameObject obj5 &#61; GameObject.Instantiate(pre);</code></pre> <h4 id="%E5%88%A0%E9%99%A4%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95">删除对象的方法</h4> <p>使用GameObject.Destroy(&#34;要删除的对象名称&#34;&#xff0c;延迟删除时间)方法&#xff0c;该函数也是在Object类中&#xff0c;如果继承了MonoBehavior类也可以直接使用。</p> <pre><code class="language-cs">GameObject.Destroy(obj5,5);</code></pre> <p>Destroy还可以删除指定的脚本对象。</p> <pre><code class="language-cs">Destroy(this);</code></pre> <p>注意:这个Destroy方法 不会马上移除对象 只是给这个对象加了一个移除标识</p> <p>般情况下 它会在下一帧时把这个对象移除并从内存中移除</p> <p>若想立即删除可以使用GameObject.DestroyImmediate()函数&#xff0c;如果没有特殊需求就不需要使用这个方法&#xff0c;由于Destroy方法是异步的可以减少游戏的卡顿</p> <h4 id="%E8%BF%87%E5%9C%BA%E6%99%AF%E4%B8%8D%E7%A7%BB%E9%99%A4">过场景不移除</h4> <p>默认情况下&#xff0c;切换场景时&#xff0c;场景上的所有对象都会被自动删除&#xff0c;若希望某个对象在过场景时不被删除&#xff0c;使用GameObject.DontDestroyOnLoad();</p> <pre><code class="language-cs">GameObject.DontDestroyOnLoad(this.gameObject);//当前脚本所依附的对象过场景不删除</code></pre> <h3 id="%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95">成员方法</h3> <h4 id="%E5%88%9B%E5%BB%BA%E7%A9%BA%E7%89%A9%E4%BD%93">创建空物体</h4> <p>new一个GameObject就是在创建一个空物体</p> <pre><code class="language-cs">GameObject obj6 &#61; new GameObject();GameObject obj7 &#61; new GameObject(&#34;创建的空物体&#34;);GameObject obj8 &#61; new GameObject(&#34;创建挂脚本的空物体&#34;, typeof(Lesson1), typeof(Lesson2));</code></pre> <h4 id="%E4%B8%BA%E5%AF%B9%E8%B1%A1%E6%B7%BB%E5%8A%A0%E8%84%9A%E6%9C%AC">为对象添加脚本</h4> <p>继承了MonoBehavior的脚本&#xff0c;是不能够new出来的&#xff0c;若要动态添加继承了MonoBehavior的脚本在某一个对象上则直接使用AddComponent&#xff1a;</p> <pre><code class="language-cs">Lesson2 l2 &#61;  obj6.AddComponent(typeof(Lesson2)) as Lesson2;Lesson1 l1 &#61; obj6.AddComponent&lt;Lesson1&gt;();//使用泛型更方便</code></pre> <p>得到脚本的成员方法和继承MonoBehavior的类得到脚本的方法相同&#xff0c;故不再赘述</p> <h4 id="%E6%A0%87%E7%AD%BE%E6%AF%94%E8%BE%83">标签比较</h4> <pre><code class="language-cs">if (this.gameObject.CompareTag(&#34;Player&#34;))//括号内也可以写成this.gameObject.tag &#61;&#61; &#34;Player&#34;&#123;    print(&#34;该对象的标签是Player&#34;);&#125;else&#123;    print(&#34;该对象的标签不是Player&#34;);&#125;</code></pre> <h4 id="%E8%AE%BE%E7%BD%AE%E5%A4%B1%E6%B4%BB%2F%E6%BF%80%E6%B4%BB">设置失活/激活</h4> <p>参数传false失活&#xff0c;true激活</p> <pre><code class="language-cs">obj6.SetActive(false);obj7.SetActive(false);obj8.SetActive(false);</code></pre> <h4 id="%E6%AC%A1%E8%A6%81%E7%9A%84%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95">次要的成员方法</h4> <p>了解即可&#xff0c;不建议使用&#xff0c;效率低</p> <pre><code class="language-cs">this.gameObject.SendMessage(&#34;函数名&#34;);//自己查找执行该函数this.gameObject.BroadcastMessage(&#34;函数名&#34;);//自己和自己的子对象都查找执行该函数this.gameObject.SendMessageUpwards(&#34;函数名&#34;);//自己和自己的父对象都查找执行该函数</code></pre> <p>这些要查找执行的函数都可以带参数&#xff0c;参数写在函数名后面即可</p> <h2 id="%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3_Time">时间相关_Time</h2> <h3 id="%E6%97%B6%E9%97%B4%E7%BC%A9%E6%94%BE%E6%AF%94">时间缩放比</h3> <pre><code class="language-cs">//时间停止Time.timeScale &#61;0;//回复正常Time.timeScale &#61; 1;//2倍速Time.timeScale&#61;2;</code></pre> <h3 id="%E5%B8%A7%E9%97%B4%E9%9A%94%E6%97%B6%E9%97%B4">帧间隔时间</h3> <p>最近的一帧用了多长时间</p> <h4 id="%E5%8F%97scale%E5%BD%B1%E5%93%8D">受scale影响</h4> <pre><code class="language-cs">print(&#34;受scale影响的时间&#34;&#43;Time.deltaTime);</code></pre> <h4 id="%E4%B8%8D%E5%8F%97scale%E5%BD%B1%E5%93%8D">不受scale影响</h4> <pre><code class="language-cs">print(&#34;不受scale影响的时间&#34; &#43; Time.unscaledDeltaTime);</code></pre> <p>帧间隔时间,主要用来计算位移&#xff0c;要根据需求选择计算的时间间隔&#xff0c;如果希望游戏暂停时就不动的就用前者&#xff0c;如果希望不受暂停影响就用后者。</p> <h3 id="%E6%B8%B8%E6%88%8F%E5%BC%80%E5%A7%8B%E5%88%B0%E7%8E%B0%E5%9C%A8%E7%9A%84%E6%97%B6%E9%97%B4">游戏开始到现在的时间</h3> <h4>受scale影响</h4> <pre><code class="language-cs">print(&#34;游戏开始到现在的&#34;&#43;Time.time);</code></pre> <h4>不受scale影响</h4> <pre><code class="language-cs">print(&#34;不受scale影响的游戏开始到现在的时间&#34;&#43;Time.unscaledTime);</code></pre> <h3 id="%E7%89%A9%E7%90%86%E5%B8%A7%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94">物理帧时间间隔</h3> <h4>受scale影响</h4> <pre><code class="language-cs">print(Time.fixedDeltaTime);</code></pre> <h4>不受scale影响</h4> <pre><code class="language-cs">print(Time.fixedUnscaledDeltaTime);</code></pre> <h3 id="%C2%A0%E5%B8%A7%E6%95%B0"> 帧数</h3> <p>从开始到现在游戏跑了多少帧&#xff0c;即多少次循环</p> <pre><code class="language-cs">print(Time.frameCount);</code></pre> <h2 id="Transform">Transform</h2> <p>游戏对象(Gameobject)位移、旋转、缩放、父子关系、坐标转换等相关操作都由它处理<br /> 是Unity提供的极其重要的类</p> <h3 id="Vector3%E5%9F%BA%E7%A1%80%E5%92%8CTransform%E4%BD%8D%E7%BD%AE">Vector3基础和Transform位置</h3> <p>Vector3主要是用来表示三维坐标系中的一个点或者一个向量</p> <h4 id="%E7%94%B3%E6%98%8E%E5%8F%98%E9%87%8F">申明变量</h4> <pre><code class="language-cs">Vector3 v &#61; new Vector3();v.x &#61; 10;v.y &#61; 10;v.z &#61; 10;Vector3 v2 &#61; new Vector3(10,10);//默认z为0Vector3 v3 &#61; new Vector3(10,10,10);Vector3 v4;v4.x &#61; 10;v4.y &#61; 10;v4.z &#61; 10;</code></pre> <h4 id="%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97">基本运算</h4> <pre><code class="language-cs">print(v - v3);print(v &#43; v2);print(v * 10);print(v / 10);</code></pre> <h4 id="%C2%A0%E5%B8%B8%E7%94%A8"> 常用</h4> <pre><code class="language-cs">print(Vector3.zero);//000print(Vector3.right);//100print(Vector3.left);//-100print(Vector3.forward);//001print(Vector3.back);//00-1print(Vector3.up);//010print(Vector3.down);//0-10</code></pre> <p>常用的一个方法&#xff1a;计算距离&#xff1a;</p> <pre><code class="language-cs">print(Vector3.Distance(v2,v*2));</code></pre> <h4 id="%E4%BD%8D%E7%BD%AE">位置</h4> <h5 id="%E7%BB%9D%E5%AF%B9%E4%BD%8D%E7%BD%AE">绝对位置</h5> <p>相对于世界坐标</p> <pre><code class="language-cs">print(this.transform.position);</code></pre> <h5 id="%E7%9B%B8%E5%AF%B9%E4%BD%8D%E7%BD%AE">相对位置</h5> <p>相对于父对象&#xff0c;没有父对象时与position相同</p> <pre><code class="language-cs">print(this.transform.localPosition);</code></pre> <p>transform的xyz是不能直接单独修改的&#xff0c;但是可以用vector给他赋值</p> <pre><code class="language-cs">print(this.transform.position);print(this.transform.localPosition);<p>this.transform.position &#61; new Vector3(10, 10, 10);<br>this.transform.localPosition &#61; Vector3.up * 10;<br>&#x2F;&#x2F;如果只想改一个值xy和z要保持原有坐标一致<br>&#x2F;&#x2F;1.直接赋值<br>this.transform.position &#61; new Vector3(19, this.transform.position.y, this.transform.position.z);<br>&#x2F;&#x2F;2.先取出来 再赋值<br>&#x2F;&#x2F;虽然不能直接改 transform的 xyz 但是 Vector3是可以直接改 xyz的&#x2F;&#x2F;所以可以先取出来改vector3 再重新赋值<br>Vector3 vPos &#61; this.transform.localPosition;<br>vPos.x &#61; 10;<br>this.transform.localPosition &#61; vPos;</code></pre> </p><h5 id="%E5%AF%B9%E8%B1%A1%E5%BD%93%E5%89%8D%E7%9A%84%E6%9C%9D%E5%90%91">对象当前的朝向</h5> <p>由于对象可以旋转&#xff0c;对象的朝向会与世界坐标朝向不同</p> <pre><code class="language-cs">print(this.transform.forward);//对象当前的各朝向//对象当前的面朝向print(this.transform.forward);//对象当前的头顶朝向print(this.transform.up);//对象当前的右手边print(this.transform.right);</code></pre> <h3 id="Transform%E4%BD%8D%E7%A7%BB">Transform位移</h3> <h4 id="%E8%87%AA%E5%B7%B1%E8%AE%A1%E7%AE%97%E7%A7%BB%E5%8A%A8">自己计算移动</h4> <p>用当前所在位置加上我要移动的位移得到我所在的最终位置</p> <pre><code class="language-cs">this.transform.position &#43;&#61; this.transform.forward*1*Time.deltaTime;//对象面朝向移动this.transform.position &#43;&#61; Vector3.forward*1*Time.deltaTime;//世界坐标系移动</code></pre> <h4 id="API%E7%A7%BB%E5%8A%A8">API移动</h4> <p>使用this.transform.Translate()</p> <pre><code class="language-cs">//参数一:表示位移多少 路程 &#61; 方向 * 速度 * 时间//参数二:表示相对坐标系默认该参数是相对于自己坐标系的<p>&#x2F;&#x2F;相对于世界坐标系的 z轴 动<br>this.transform.Translate(Vector3.forward * 1 * Time.deltaTime, Space.World);<br>&#x2F;&#x2F;相对于世界坐标的自己的面朝向去动<br>this.transform.Translate(this.transform.forward <em>1</em> Time.deltaTime, Space.World);<br>&#x2F;&#x2F;相对于自己的坐标系下 &#xff0c;再加上旋转的方向<br>this.transform.Translate(this.transform.forward * 1 * Time.deltaTime, Space.Self);<br>&#x2F;&#x2F;相对于自己的坐标系下的 z轴正方向移动<br>this.transform.Translate(Vector3.forward * 1 * Time.deltaTime, Space.Self);</code></pre> </p><p>一般用API来位移</p> <h3 id="Transform%E8%A7%92%E5%BA%A6%E5%92%8C%E6%97%8B%E8%BD%AC">Transform角度和旋转</h3> <h4 id="%E8%A7%92%E5%BA%A6%E7%9B%B8%E5%85%B3">角度相关</h4> <pre><code class="language-cs">//相对世界坐标角度print(this.transform.eulerAngles);//相对父对象角度print(this.transform.localEulerAngles);//注意:设置角度和设置位置一样 不能单独设置xyz 要一起设置//若要改变面板角度则要设置相对角度this.transform.localEulerAngles &#61; new Vector3(10,10,10);this.transform.eulerAngles &#61; new Vector3(10, 10, 10);print(this.transform.localEulerAngles);</code></pre> <h4 id="%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%85%B3">旋转相关</h4> <pre><code class="language-cs">//API计算//自转//参数一 每一帧旋转的角度  每个轴具体转多少度//参数二 默认相对于自己坐标系进行的旋转,Space.World为相对世界坐标系旋转this.transform.Rotate(new Vector3(0,10,0)* Time.deltaTime);this.transform.Rotate(new Vector3(0, 10, 0) * Time.deltaTime, Space.World);<p>&#x2F;&#x2F;相对于某个轴 转多少度<br>&#x2F;&#x2F;参数一:是相对哪个轴进行转动<br>&#x2F;&#x2F;参数二:转动的角度<br>&#x2F;&#x2F;参数三:默认相对于自己的坐标系 Space.World为相对世界坐标系旋转<br>this.transform.Rotate(Vector3.right,10* Time.deltaTime);<br>this.transform.Rotate(Vector3.right, 10 * Time.deltaTime,Space.World);</p><p>&#x2F;&#x2F;相对于某一个点转<br>&#x2F;&#x2F;参数一:相当于哪一个点转<br>&#x2F;&#x2F;参数二:相对于该点哪一个轴转<br>&#x2F;&#x2F;参数三:转的度数旋转速度*时间<br>this.transform.RotateAround(Vector3.zero, Vector3.right, 10 * Time.deltaTime);</code></pre> </p><h3 id="Transform%E7%BC%A9%E6%94%BE%E5%92%8C%E7%9C%8B%E5%90%91">Transform缩放和看向</h3> <h4 id="%E7%BC%A9%E6%94%BE">缩放</h4> <p>缩放不能单独改xyz 只能一起改(并且相对于世界坐标系的缩放大小不能修改)</p> <p>故更改缩放大小都是相对父对象进行修改</p> <pre><code class="language-cs">//相对世界坐标系print(this.transform.lossyScale);//相对本地坐标系(父对象)print(this.transform.localScale);                                                this.transform.localScale&#61;new Vector3(3,3,3);</code></pre> <p>Unity没有提供关于缩放的API&#xff0c;只能自己算</p> <pre><code class="language-cs">this.transform.localScale &#43;&#61; Vector3.one * Time.deltaTime;</code></pre> <h4 id="%E7%9C%8B%E5%90%91">看向</h4> <p>让一个对象一直面向某一个点或者某一个对象</p> <pre><code class="language-cs">//看向一个点 相对于世界坐标系的this.transform.LookAt(Vector3.zero);//看向一个对象 就传入一个对象的 Transform信息this.transform.LookAt(lookAtObj);</code></pre> <h3 id="Transform%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB">Transform父子关系</h3> <h4 id="%E8%8E%B7%E5%8F%96%E5%92%8C%E8%AE%BE%E7%BD%AE%E7%88%B6%E5%AF%B9%E8%B1%A1">获取和设置父对象</h4> <pre><code class="language-cs">//获取父对象print(this.transform.parent.name);this.transform.parent &#61; null;//取消父对象//设置父对象this.transform.parent &#61; GameObject.Find(&#34;Father2&#34;).transform;<p>&#x2F;&#x2F;通过API来进行父子关系的设置</p><p>this.transform.SetParent(null);&#x2F;&#x2F;取消父对象<br>this.transform.SetParent(GameObject.Find(&#34;Father2&#34;).transform);&#x2F;&#x2F;设置父对象<br>&#x2F;&#x2F;参数一: 父对象<br>&#x2F;&#x2F;参数二: 是否保留世界坐标的 位置 角度 缩放 信息<br>&#x2F;&#x2F;true 会保留 世界坐标下的状态和父对象进行计算得到本地坐标系的信息&#xff0c;实际位置&#xff08;世界坐标中&#xff09;不变<br>&#x2F;&#x2F;false不会保留 使变成字对象后界面显示的内容和之前相同&#xff08;在世界坐标中会变化&#xff09;<br>this.transform.SetParent(GameObject.Find(&#34;Father3&#34;).transform, false);<br>this.transform.SetParent(GameObject.Find(&#34;Father3&#34;).transform, true);</code></pre> </p><h4 id="%E6%8A%9B%E5%A6%BB%E5%BC%83%E5%AD%90">抛妻弃子</h4> <p>删除不了儿子与孙子之间的父子关系</p> <pre><code class="language-cs">this.transform.DetachChildren();</code></pre> <h4 id="%E8%8E%B7%E5%8F%96%E5%AD%90%E5%AF%B9%E8%B1%A1">获取子对象</h4> <p>可以找到失活的子对象&#xff0c;找不到子对象的子对象</p> <pre><code class="language-cs">print(this.transform.Find(&#34;cube(1)&#34;).name);print(this.transform.childCount);//输出子对象的个数&#xff0c;失活的也算this.transform.GetChild(0);//通过索引得到子对象&#xff0c;超出个数会报错</code></pre> <h4 id="%E5%AD%90%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C">子对象操作</h4> <pre><code class="language-cs">public Transform son;...if(son.IsChildOf(this.transform))print(&#34;是我的儿子&#34;);//得到自己作为儿子的编号print(son.GetSiblingIndex());//把自己设置为第一个儿子son.SetAsFirstSibling();//把自己设置为最后一个儿子son.SetAsLastSibling();//把自己设置为指定个儿子,超出范围就直接设置成最后一个索引son.SetSiblingIndex(15);</code></pre> <h3 id="Transform%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2">Transform坐标转换</h3> <h4 id="%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E8%BD%AC%E6%9C%AC%E5%9C%B0%E5%9D%90%E6%A0%87">世界坐标转本地坐标</h4> <pre><code class="language-cs">print(Vector3.forward);//世界坐标系的点转换为相对本地坐标系的点//受到缩放影响print(&#34;转换后的点&#34; &#43; this.transform.InverseTransformPoint(Vector3.forward));<p>&#x2F;&#x2F;世界坐标系的方向 转换 为相对本地坐标系的方向<br>&#x2F;&#x2F;不受缩放影响<br>print(&#34;转换后的方向&#34; &#43; this.transform.InverseTransformDirection(Vector3.forward));<br>&#x2F;&#x2F;受缩放影响<br>print(&#34;转换后的方向(受缩放影响)&#34; &#43; this.transform.InverseTransformVector(Vector3.forward));</code></pre> </p><h4 id="%E6%9C%AC%E5%9C%B0%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E7%B3%BB">本地坐标转世界坐标</h4> <pre><code class="language-cs">//本地坐标系的点转换为相对世界坐标系的点 受到缩放影响print(&#34;本地 转 世界 点&#34;&#43; this.transform.TransformPoint(Vector3.forward));//本地坐标系的方向 转换 为相对世界坐标系的方向//不受缩放影响print(&#34;本地 转 世界 方向&#34;&#43; this.transform.TransformDirection(Vector3.forward));//受缩放影响print(&#34;本地 转 世界 方向&#34;&#43; this.transform.TransformVector(Vector3.forward));</code></pre> <h2 id="Input%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5">Input鼠标键盘输入</h2> <h3 id="%E9%BC%A0%E6%A0%87%E5%9C%A8%E5%B1%8F%E5%B9%95%E7%9A%84%E4%BD%8D%E7%BD%AE">鼠标在屏幕的位置</h3> <pre><code class="language-cs">//屏幕左下角为坐标原点 往右是x轴正方向 往上时v轴正方向//返回值时vector3 但是只有 x和y有值 z一直是0 是因为屏幕本来就是2D的 不存在z轴print(Input.mousePosition);</code></pre> <h3 id="%E6%A3%80%E6%B5%8B%E9%BC%A0%E6%A0%87%E8%BE%93%E5%85%A5">检测鼠标输入</h3> <p>可以发射子弹</p> <p>可以控制摄像机转动</p> <pre><code class="language-cs">//鼠标按下一瞬间 进入//只要按下的这一瞬间 进入一次//0左键 1右键 2中键if (Input.GetMouseButtonDown(1))&#123;    print(&#34;鼠标某一个键按下了&#34;);&#125;<p>&#x2F;&#x2F;鼠标抬起一瞬间 进入<br>if (Input.GetMouseButtonUp(0))<br>&#123;<br>    print(&#34;鼠标某一个键抬起了&#34;);<br>&#125;</p><p>&#x2F;&#x2F;鼠标长按按下抬起都会进入<br>&#x2F;&#x2F;就是 当按住按键不放时 会一直进入 这个判断</p><p>if(Input.GetMouseButton(1))<br>&#123;<br>    print(&#34;右键按下&#34;);<br>&#125;</p><p>&#x2F;&#x2F;中键滚动<br>&#x2F;&#x2F;返回值的y -1下 0不动 1上<br>&#x2F;&#x2F;返回值为Vector2的值 鼠标滚轮滚动会改变其中的y值<br>print(Input.mouseScrollDelta);</code></pre> </p><h3 id="%E6%A3%80%E6%B5%8B%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5">检测键盘输入</h3> <pre><code class="language-cs">//键盘按下if (Input.GetKeyDown(KeyCode.W))&#123;    print(&#34;w键按下&#34;);&#125;</code></pre> <p>KeyCode是枚举类型</p> <pre><code class="language-cs">//传入字符串的重载//传入的字符串不能是大写的不然会报错//但是键盘的大小写都能识别if(Input.GetKeyDown(&#34;q&#34;))&#123;    print(&#34;键按下&#34;);&#125;</code></pre> <h3 id="%E6%A3%80%E6%B5%8B%E9%BB%98%E8%AE%A4%E8%BD%B4%E8%BE%93%E5%85%A5">检测默认轴输入</h3> <p>unity提供了 更方便的方法 来帮助我们控制对象的位移和旋转</p> <pre><code class="language-cs">//参数名可以看 project setting 中的 input manager//键盘AD按下时 返回 -1到1之间的变换//该值就是左右方向-1到0代表左&#xff0c;0到1代表右 我们可以通过它来控制 对象左右移动 或者左右旋转print(Input.GetAxis(&#34;Horizontal&#34;));//键盘SW按下时 返回 -1到1之间的变换//该值就是前后方向-1到0代表后&#xff0c;0到1代表前 我们可以通过它来控制 对象上下移动 或者上下旋转print(Input.GetAxis(&#34;Vertical&#34;));<p>&#x2F;&#x2F;鼠标横向移动时 -1 到 1 左 右<br>print(Input .GetAxis(&#34;Mouse X&#34;));<br>&#x2F;&#x2F;鼠标竖向移动时-1到1下上<br>print(Input.GetAxis(&#34;Mouse Y&#34;));<br>&#x2F;&#x2F;GetAxisRaw方法和 GetAxis使用方式相同<br>&#x2F;&#x2F;只不过 它的返回值 只会是-101不会有中间值  而GetAxis方法返回的值是-1到0到1的渐变值</code></pre> </p><h2 id="Input%E8%A7%A6%E6%91%B8%E6%89%8B%E6%9F%84%E9%99%80%E8%9E%BA%E4%BB%AA">Input触摸手柄陀螺仪</h2> <h3 id="%E6%A3%80%E6%B5%8B%E4%BB%BB%E6%84%8F%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE">检测任意键盘按键</h3> <pre><code class="language-cs">//是否有任意键或鼠标长按if (Input.anyKey)    print(&#34;有一个键长按&#34;);//是否有任意键或鼠标按下if (Input.anyKeyDown)    print(&#34;有一个键 按下&#34;);print(Input.inputString);</code></pre> <h3 id="%E6%89%8B%E6%9F%84%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3">手柄输入相关</h3> <pre><code class="language-cs">//得到连接的手柄的所有按钮名字string[]strs &#61; Input.GetJoystickNames();//某一个手柄键按下if(Input.GetButtonDown(&#34;Jump&#34;))&#123;<p>&#125;<br>&#x2F;&#x2F;某一个手柄键抬起<br>if (Input.GetButtonUp(&#34;Jump&#34;))<br>&#123;</p><p>&#125;<br>&#x2F;&#x2F;某一个手柄键长按<br>if (Input.GetButton(&#34;Jump&#34;))<br>&#123;</p><p>&#125;</code></pre> </p><h3 id="%E8%A7%A6%E6%91%B8%E3%80%81%E9%99%80%E8%9E%BA%E4%BB%AA%E7%9B%B8%E5%85%B3">触摸、陀螺仪相关</h3> <pre><code class="language-cs">//移动设备触摸相关if (Input.touchCount &gt; 0)&#123;    Touch t1 &#61; Input.touches[0];//位置    print(t1.position);//相对上次位置的变化    print(t1.deltaPosition);&#125;//是否启用多点触控Input.multiTouchEnabled &#61;false;//陀螺仪(重力感应)//是否开启陀螺仪 必须开启 才能正常使用Input.gyro.enabled &#61; true;//电脑上无法得到该值&#xff0c;手机上才能得到//重力加速度向量print(Input.gyro.gravity);<p>&#x2F;&#x2F;旋转速度<br>print(Input.gyro.rotationRate);<br>&#x2F;&#x2F;陀螺仪 当前的旋转四元数<br>&#x2F;&#x2F;比如 用这个角度信息 来控制 场景上的一个3D物体受到重力影响<br>&#x2F;&#x2F;手机怎么动 它怎么动<br>print(Input.gyro.attitude);</code></pre> </p><h2 id="%E5%B1%8F%E5%B9%95%E7%9B%B8%E5%85%B3Screen">屏幕相关Screen</h2> <pre><code class="language-cs">//当前屏幕分辨率Resolution r &#61; Screen.currentResolution; print(&#34;当前屏幕分辨率的宽&#34; &#43; r.width &#43;&#34;高&#34;&#43;r.height);//屏幕窗口当前宽高//需要用窗口宽高做计算时使用print(Screen.width);print(Screen.height);//屏幕休眠模式Screen.sleepTimeout &#61; SleepTimeout.NeverSleep;<p>Screen.fullScreen &#61; true;<br>&#x2F;&#x2F;窗口模式<br>&#x2F;&#x2F;独占全屏Fu11screenMode.ExclusiveFullscreen<br>&#x2F;&#x2F;全屏窗口FullScreenMode.FullscreenWindow<br>&#x2F;&#x2F;最大化窗口FullscreenMode.MaximizedWindow<br>&#x2F;&#x2F;窗口模式Fu1lscreenMode.Windowed<br>Screen.fullScreenMode &#61; FullScreenMode.Windowed;</p><p>&#x2F;&#x2F;移动设备屏幕转向相关<br>&#x2F;&#x2F;允许自动旋转为左横向 Home键在左<br>Screen.autorotateToLandscapeLeft &#61;true;<br>&#x2F;&#x2F;允许自动旋转为右横向 Home键在右<br>Screen.autorotateToLandscapeRight &#61;true;<br>&#x2F;&#x2F;允许自动旋转到纵问 Home键在下<br>Screen.autorotateToPortrait &#61;true;<br>&#x2F;&#x2F;允许自动旋转到纵向倒着看 Home键在上<br>Screen.autorotateToPortraitUpsideDown&#61;true;</p><p>&#x2F;&#x2F;指定屏幕显示方向<br>Screen.orientation &#61; ScreenOrientation.AutoRotation;</p><p>&#x2F;&#x2F;设置分辨率 一般移动设备不使用<br>Screen.SetResolution(1920,1080,false);</code></pre> </p><h2 id="Camera%E5%8F%AF%E7%BC%96%E8%BE%91%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">Camera可编辑参数说明</h2> <h3 id="Clear%20Flags">Clear Flags</h3> <p>skybox天空盒&#xff1a;模拟天空背景&#xff0c;用于3D</p> <p>Solid Color颜色填充&#xff1a;填充背景颜色&#xff0c;一般用于2D</p> <p>Depth only只画该层&#xff0c;背景透明&#xff1a;多个摄像机叠加渲染与Depth叠加使用</p> <p>Don&#39;t Clear不移除&#xff0c;覆盖渲染&#xff1a;一般不用</p> <h3 id="Culling%20Mask">Culling Mask</h3> <p>选择渲染层级&#xff0c;可以指定渲染或不渲染某一层级的对象</p> <h3 id="Projection">Projection</h3> <h4 id="perspective%E9%80%8F%E8%A7%86%E6%A8%A1%E5%BC%8F%EF%BC%88%E8%BF%91%E5%A4%A7%E8%BF%9C%E5%B0%8F%EF%BC%8C%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E3D%E6%B8%B8%E6%88%8F%EF%BC%89">perspective透视模式&#xff08;近大远小&#xff0c;一般用于3D游戏&#xff09;</h4> <p>Fov Axis&#xff1a;决定光学仪器的视野范围</p> <p>Field of view&#xff1a;视口大小</p> <p>Physical Camera&#xff08;物理摄像机&#xff09;&#xff1a;摄影相关参数&#xff0c;如Focal Length&#xff08;焦距&#xff09;、Sensor Type&#xff08;传感器类型&#xff09;、Sensor Size&#xff08;传感器尺寸&#xff09;等</p> <h4 id="orthographic%20%E6%AD%A3%E4%BA%A4%E6%91%84%E5%83%8F%E6%9C%BA%EF%BC%88%E4%B8%80%E8%88%AC%E7%94%A8%E4%BA%8E2D%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%EF%BC%89">orthographic 正交摄像机&#xff08;一般用于2D游戏制作&#xff09;</h4> <p>size为大小</p> <h3 id="Clipping%20Planes">Clipping Planes</h3> <p>裁剪平面距离&#xff0c;最近能看多近&#xff0c;最远能看多远</p> <h3 id="Depth">Depth</h3> <p>渲染顺序上的深度&#xff0c;深度大的Camera后被渲染&#xff0c;小的先被渲染&#xff0c;后渲染的会把前渲染的挡住</p> <h3 id="Redering%20path">Redering path</h3> <p>渲染纹理&#xff0c;可以把摄像机画面渲染到一张图上&#xff0c;在Project右键创建Render Texture&#xff0c;主要用于制作小地图</p> <h3 id="Occlusion%20Culling">Occlusion Culling</h3> <p>是否启用剔除遮挡&#xff0c;被挡住的模型不被渲染</p> <h3 id="Viewport%20Rect%C2%A0">Viewport Rect </h3> <p>视口范围&#xff0c;屏幕上将绘制该摄像机的视图位置&#xff0c;用于双摄像机游戏&#xff0c;0-1相当于宽高百分比</p> <h3 id="Rendering%20path">Rendering path</h3> <p>渲染路径</p> <h3 id="%E5%8F%AA%E5%81%9A%E4%BA%86%E8%A7%A3">只做了解</h3> <p>Allow HDR 是否允许高动态范围渲染</p> <p>Allow MSAA 是否允许抗锯齿</p> <p>Allow DYnamic Resolution 是否允许动态分辨路呈现</p> <p>Target Display 用于那个显示器&#xff0c;主要用来开发有多个屏幕的平台游戏</p> <h2 id="Camera%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3">Camera代码相关</h2> <p>重要静态成员</p> <pre><code class="language-cs">//获取摄像机//如果用之前的知识 public一个对象然后将camera拖进去 来获取摄像机//主摄像机的获取//如果想通过这种方式 快速获取摄像机 那么场景上必须有一个 tag为Maincamera的摄像机print(Camera.main.name);//获取摄像机的数量print(Camera.allCamerasCount);//得到所有摄像机Camera[] AllCamera &#61; Camera.allCameras; print(AllCamera.Length);<p>&#x2F;&#x2F;渲染相关委托<br>&#x2F;&#x2F;摄像机剔除前处理的委托函数<br>Camera.onPreCull &#43;&#61; (c) &#61;&gt;<br>&#123;</p><p>&#125;;<br>&#x2F;&#x2F;摄像机 渲染前处理的委托<br>Camera.onPreRender &#43;&#61; (c) &#61;&gt;<br>&#123;</p><p>&#125;;<br>&#x2F;&#x2F;摄像机 渲染后 处理的委托<br>Camera.onPostRender &#43;&#61; (c) &#61;&gt;<br>&#123;</p><p>&#125;;</code></pre> </p><p> 重要成员</p> <pre><code class="language-cs">public class Lesson14 : MonoBehaviour&#123;    public Transform obj;    // Start is called before the first frame update    void Start()    &#123;        //世界坐标转屏幕坐标        //转换过后x和y对应的就是屏幕坐标 z对应的是该物体离摄像机有多远&#xff0c;两者的z之差        //我们会用这个来做的功能 最多的 就是头顶血条相关的功能        <pre><code>    Vector3 v &amp;#61; Camera.main.WorldToScreenPoint(this.transform.position);    print(v);&#125;// Update is called once per framevoid Update()&#123;    //屏幕坐标转世界坐标    Vector3 v1 &amp;#61; Input.mousePosition;    //只所以改变z轴 是因为 如果不改 z默认为0    //转换过去的世界坐标系的点 永远都是一个点 可以理解为 视口 相交的焦点    //改变z才能在视野中显示出来    v1.z &amp;#61; 10;    obj.position &amp;#61; Camera.main.ScreenToWorldPoint(v1);   // print(Camera.main.ScreenToWorldPoint(v1));&#125;</code></pre><p>}</code></pre> </p><h2 id="%E5%85%89%E6%BA%90%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80">光源系统基础</h2> <h3 id="%E5%85%89%E6%BA%90%E7%BB%84%E4%BB%B6">光源组件</h3> <h4 id="Type%E5%85%89%E6%BA%90%E7%B1%BB%E5%9E%8B">Type光源类型</h4> <p>Point&#xff1a;点光源&#xff0c;参数&#xff1a;Range&#xff08;照射范围&#xff09;</p> <p>Spot&#xff1a;聚光灯&#xff0c;方向光&#xff08;环境光&#xff09;&#xff0c;参数&#xff1a;Range&#xff08;照射范围&#xff09;Spot Angle&#xff08;光锥角度&#xff09;</p> <p>Area&#xff1a;面光源&#xff08;仅在烘焙状态下有用&#xff0c;节约性能&#xff0c;提前将光源效果计算好再将算好的图贴上去&#xff0c;并非实施计算&#xff0c;但是有物体移动到该光源下时&#xff0c;光影效果不受该光源影响&#xff09;</p> <h4 id="Color%E5%85%89%E6%BA%90%E9%A2%9C%E8%89%B2">Color光源颜色</h4> <h4 id="Mode%E5%85%89%E6%BA%90%E6%A8%A1%E5%BC%8F">Mode光源模式</h4> <p>Realtime&#xff1a;实时光源&#xff0c;实时渲染&#xff0c;效果好&#xff0c;性能消耗大</p> <p>Baked&#xff1a;烘焙光源&#xff0c;提前计算好&#xff0c;无法动态变化</p> <p>Mixed&#xff1a;混合光源&#xff0c;预先计算&#43;实时运算</p> <h4 id="Intensity%E5%85%89%E6%BA%90%E4%BA%AE%E5%BA%A6">Intensity光源亮度</h4> <h4 id="Shadow%C2%A0Type">Shadow Type</h4> <p>Noshadows&#xff1a;关闭阴影</p> <p>HardShadows&#xff1a;生硬阴影&#xff0c;性能消耗较低</p> <p>SoftShadows&#xff1a;柔和阴影&#xff0c;性能消耗较高</p> <h4 id="Cookie">Cookie</h4> <p>投影遮罩</p> <h4 id="Draw%20Halo">Draw Halo</h4> <p>球形光环开关&#xff0c;光源周围产生光晕</p> <h4 id="Flare">Flare</h4> <p>耀斑&#xff0c;若希望摄像机能看到耀斑效果&#xff0c;需要在摄像机上加上Flare Layer脚本&#xff0c;不加脚本摄像机中看不到</p> <h4>Culling Mask</h4> <p>剔除遮罩层  &#xff0c;决定哪些层的光源对象收到该光源的影响&#xff0c;和Camera中的效果类似</p> <p></p> <p>以下了解即可</p> <h4 id="Indirect%20Multiplier">Indirect Multiplier</h4> <p>调整间接光的强度&#xff0c;大于1每次反射会使光更亮&#xff0c;小于1每次反射会使光更暗</p> <h4 id="RealtimeShadows">RealtimeShadows</h4> <p>strength&#xff1a;阴影暗度 0-1之间&#xff0c;越大阴影越暗</p> <p>Resolution&#xff1a;阴影贴图渲染分辨率&#xff0c;越高越逼真、消耗越高</p> <p>Bias&#xff1a;阴影推理光源的距离</p> <p>Normal Bias&#xff1a;阴影投射面延法线收缩距离</p> <p>Near Panel&#xff1a;渲染阴影的近裁剪面</p> <h4 id="Cookie%20Size">Cookie Size</h4> <p>方向光源&#xff08;Spot&#xff09;才有&#xff0c;但一般不设置&#xff0c;用来调整遮罩大小</p> <p>Render Mode</p> <p>渲染优先级</p> <p>auto&#xff1a;运行时确定</p> <p>Important&#xff1a;以像素质量为单位进行渲染&#xff0c;效果逼真&#xff0c;消耗大</p> <p>Not important&#xff1a;以快速模式进行渲染</p> <p></p> <h3 id="%E5%85%89%E9%9D%A2%E6%9D%BF%E7%9B%B8%E5%85%B3">光面板相关</h3> <h4 id="%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE">环境相关设置</h4> <p>Skybox Meterial&#xff1a;改变天空和材质</p> <p>Sun Source&#xff1a;太阳来源&#xff0c;不设置会默认使用场景中最亮的方向光为太阳</p> <p>Environment Lighting&#xff1a;环境光设置{<!-- --></p> <p>Source&#xff1a;环境光光源颜色&#xff0c;Skybox&#xff08;以天空和材质作为环境光颜色&#xff09;&#xff0c;Gradient&#xff08;可以为天空、地面、地平线单独选择颜色&#xff0c;得到混合的效果&#xff09;</p> <p>Intensity Multiplier&#xff1a;环境光亮度</p> <p>Ambient Mode&#xff1a;全局光照模式&#xff0c;只有启用了实时全局和全局烘焙时才有用&#xff0c;Realtime&#xff08;已弃用&#xff09;&#xff0c;Baked&#xff08;烘焙&#xff09;</p> <p>}</p> <h4 id="%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE">其他设置</h4> <h2 id="%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B">碰撞检测</h2> <p>碰撞产生的必要条件&#xff1a;两个物体都有碰撞器且至少其中一个是刚体</p> <h3 id="%E5%88%9A%E4%BD%93">刚体</h3> <p>Mass&#xff1a;质量&#xff08;默认为千克&#xff09;&#xff0c;质量越大惯性越大</p> <p>Drag&#xff1a;空气阻力&#xff0c;0表示没有空气阻力</p> <p>Angular Drag&#xff1a;扭矩阻力&#xff0c;影响旋转&#xff0c;0表示没有空气阻力</p> <p>Use Gravity&#xff1a;是否受重力影响</p> <p>Is Kinematic&#xff1a;若启用则不会被物理引擎影响&#xff0c;只能通过transform对其进行移动</p> <p>Interpolate&#xff1a;插值运算&#xff0c;让刚体运动更平滑&#xff08;None&#xff08;不应用插值运算&#xff09;&#xff0c;Interpolate&#xff08;根据前一帧的改变平滑变换&#xff09;&#xff0c;Extrapolate&#xff08;差值运算&#xff0c;根据下一帧的变换来平滑变换&#xff09;&#xff09;</p> <p>Collision Detection&#xff08;碰撞检测模式&#xff0c;用于防止快速移动的物体穿过其他物体而不检测碰撞&#xff0c;一帧移动距离过大直接穿过碰撞对象&#xff09;</p> <p></p> <p>Constraint&#xff1a;约束对刚体运动的限制&#xff08;Freeze Position&#xff1a;有选择地停止刚体沿着世界xyz轴移动&#xff1b;Freeze Rotation&#xff1a;有选择地停止刚体沿着世界xyz轴旋转&#xff09;</p> <h3 id="%E7%A2%B0%E6%92%9E%E5%99%A8">碰撞器</h3> <h4 id="%E7%A7%8D%E7%B1%BB%EF%BC%9A">种类&#xff1a;</h4> <p>盒状、球状、胶囊、网格、轮胎、地形&#xff08;前三种性能高&#xff0c;后三者性能低&#xff09;</p> <h4 id="%E5%85%B1%E5%90%8C%E5%8F%82%E6%95%B0%EF%BC%9A">共同参数&#xff1a;</h4> <p>Is Trigger:是否为触发器&#xff0c;启用该属性则该物体将用于触发事件、并被物理引擎忽略&#xff0c;主要用于没有物理效果的碰撞检测</p> <p>Material&#xff1a;物理材质&#xff0c;可以确定碰撞体和其他碰撞对象的交互方式</p> <p>Center&#xff1a;碰撞体在局部控件对象中的中心点位置</p> <h4 id="%E5%B8%B8%E7%94%A8%E7%A2%B0%E6%92%9E%E5%99%A8%EF%BC%9A">常用碰撞器&#xff1a;</h4> <p>BoxCollider&#xff08;盒状&#xff09;</p> <p>Size参数&#xff1a;碰撞体在XYZ轴上的大小</p> <p>Sphere Collider&#xff08;球状&#xff09;</p> <p>Radius参数&#xff1a;碰撞体的半径大小</p> <p>Capsule Collider&#xff08;胶囊&#xff09;</p> <p>Radius参数&#xff1a;胶囊体的半径</p> <p>Height参数&#xff1a;胶囊体的高度</p> <p>Direction参数&#xff1a;胶囊体在对象局部空间中的轴向</p> <h4 id="%E5%BC%82%E5%BD%A2%E7%89%A9%E4%BD%93%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%A7%8D%E7%A2%B0%E6%92%9E%E5%99%A8%E7%BB%84%E5%90%88">异形物体使用多种碰撞器组合</h4> <p>刚体对象的子对象碰撞器信息参与碰撞检测&#xff0c;给父对象加上刚体脚本&#xff0c;子对象也会参与碰撞</p> <h4 id="%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E7%A2%B0%E6%92%9E%E5%99%A8">不常用的碰撞器</h4> <p>Mesh Collider&#xff08;网格碰撞器&#xff09;、Wheel Collider&#xff08;环状碰撞器&#xff09;、Terrain Collider&#xff08;地形碰撞器&#xff09;</p> <p>网格碰撞器&#xff1a;</p> <p>轮胎&#xff1a;</p> <p>和刚体父对象一起使用&#xff0c;父对象质量要足够大&#xff0c;不然会被轮胎弹飞</p> <p>地形碰撞器&#xff1a;</p> <h3 id="%C2%A0%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8"> 物理材质</h3> <h4 id="%E5%88%9B%E5%BB%BA%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8">创建物理材质</h4> <p>右键create Physic Material后拖拽给碰撞体脚本中的Material栏</p> <h4 id="%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8%E5%8F%82%E6%95%B0">物理材质参数</h4> <h3 id="%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0">碰撞检测函数</h3> <h4 id="%E7%89%A9%E7%90%86%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0">物理碰撞检测响应函数</h4> <p>只要得到了碰撞到的对象的任意信息就可以得到他的所有信息</p> <p>Collision中包含的碰撞到自己的对象的相关信息<br /> 相关参数<br /> 碰撞自己的对象的碰撞器的信息</p> <pre><code class="language-cs">collision.collider</code></pre> <p>碰撞对象&#xff08;GameObject&#xff09;</p> <pre><code class="language-cs">collision.gameObject</code></pre> <p>碰撞对象的位置信息</p> <pre><code class="language-cs">collision.transform</code></pre> <p>触碰点数相关</p> <pre><code class="language-cs">collision.contactCount</code></pre> <p>接触点的具体坐标</p> <pre><code class="language-cs">ContactPoint[] pos&#61; collision.contacts</code></pre> <p> 函数&#xff1a;</p> <pre><code class="language-cs">private void OnCollisionEnter(Collision collision)&#123;    print(this.name &#43; &#34;被&#34;&#43;collision.gameObject.name&#43;&#34;撞了&#34;);&#125;//碰撞结束时会自动执行该函数private void OnCollisionExit(Collision collision)&#123;    print(this.name &#43; &#34;被&#34; &#43; collision.gameObject.name &#43; &#34;结束碰撞了&#34;);&#125;//两个物体相互接触/摩擦时会自动执行该函数&#xff0c;但不是一直接触一直执行private void OnCollisionStay(Collision collision)&#123;    print(this.name &#43; &#34;一直在和&#34; &#43; collision.gameObject.name &#43; &#34;接触&#34;);&#125;</code></pre> <h4 id="%E8%A7%A6%E5%8F%91%E5%99%A8%E6%A3%80%E6%B5%8B%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0">触发器检测响应函数</h4> <pre><code class="language-cs">//第一次接触时会调用private void OnTriggerEnter(Collider other)&#123;    print(this.name &#43; &#34;被&#34; &#43; other.gameObject.name &#43; &#34;触发了&#34;);&#125;//二者接触时会调用private void OnTriggerExit(Collider other)&#123;    print(this.name &#43; &#34;被&#34; &#43; other.gameObject.name &#43; &#34;结束触发了&#34;);&#125;//二者结束接触时会调用private void OnTriggerStay(Collider other)&#123;    print(this.name &#43; &#34;一直在和&#34; &#43; other.gameObject.name &#43; &#34;触发&#34;);&#125;</code></pre> <h4 id="%E6%98%8E%E7%A1%AE%E4%BD%95%E6%97%B6%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0">明确何时响应函数</h4> <p>只要挂载对象和其他物体能产生碰撞或者触发&#xff0c;就能执行对应的碰撞/触发函数</p> <p> 只在子对象上挂载该脚本检测碰撞&#xff0c;如果该子对象没有刚体组件不能执行&#xff0c;需要挂载到他的具有刚体组件的父对象上&#xff0c;挂载到父对象上若只有子对象碰撞到了也会触发</p> <p>根据需求来写这6个函数</p> <p>要明确物理碰撞和触发器响应的区别</p> <h4 id="%E7%A2%B0%E6%92%9E%E5%92%8C%E8%A7%A6%E5%8F%91%E5%99%A8%E5%87%BD%E6%95%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E5%86%99%E6%88%90%E8%99%9A%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E5%AD%90%E7%B1%BB%E4%B8%AD%E9%87%8D%E5%86%99%E9%80%BB%E8%BE%91">碰撞和触发器函数都可以写成虚函数&#xff0c;在子类中重写逻辑</h4> <p>一般会把想要重写的碰撞和触发函数写成保护类型的没有必要写成public&#xff0c;因为我们不会手动调用该函数&#xff0c;都是unity通过反射帮助我们调用的</p> <h3 id="%E5%88%9A%E4%BD%93%E5%8A%A0%E5%8A%9B">刚体加力</h3> <p>首先要获取刚体</p> <pre><code class="language-cs">Rigidbody body;void Start()&#123;    body &#61; this.GetComponent&lt;Rigidbody&gt;();&#125;</code></pre> <h4 id="%E5%88%9A%E4%BD%93%E8%87%AA%E5%B8%A6%E6%B7%BB%E5%8A%A0%E5%8A%9B%E7%9A%84%E6%96%B9%E6%B3%95">刚体自带添加力的方法</h4> <pre><code class="language-cs">//添加力//相对世界坐标系body.AddForce(Vector3.forward * 10);        <p>&#x2F;&#x2F;相对本地坐标系<br>body.AddRelativeForce(Vector3.forward * 10);&#x2F;&#x2F;body.AddForce(this.transform.forward * 10);效果相同</p><p>&#x2F;&#x2F;添加扭矩力<br>&#x2F;&#x2F;相对世界坐标系<br>body.AddTorque(Vector3.up * 10);<br>&#x2F;&#x2F;相对本地坐标系<br>body.AddRelativeTorque(Vector3.up * 10);</p><p>&#x2F;&#x2F;直接改变速度<br>&#x2F;&#x2F;该改动的速度方向是相对于世界坐标系的<br>body.velocity &#61; Vector3.forward*10;</p><p>&#x2F;&#x2F;模拟爆炸的效果,该爆炸效果只对挂载了该脚本的对象生效<br>body.AddExplosionForce(10, Vector3.zero, 10);</code></pre> </p><h4 id="%E5%8A%9B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%A8%A1%E5%BC%8F">力的几种模式</h4> <pre><code class="language-cs">//计算方式不同&#xff0c;故最终移动的速度不同//第二个参数 力的模式 主要的作用 就是 计算方式不同//由于4种计算方式不同 最终移动速度不同body.AddForce(Vector3.forward * 10,ForceMode.Force);//1.Acceleration//给物体增加一个持续的速度&#xff0c; 忽略其质量//v &#61; Ft/m//F:(0,0,10)//t:0.02s  物体帧时间//m:默认为1//v &#61; 10 * 0.02 / 1 &#61; 0.2m/s//每物理帧移动 0.2m/s * 0.02s &#61; 0.004m<p>&#x2F;&#x2F;2.Force<br>&#x2F;&#x2F;给物体添加一个持续的力&#xff0c; 与物体的质量有关<br>&#x2F;&#x2F;m:2kg<br>&#x2F;&#x2F;v &#61; 10 * 0.02 &#x2F; 2 &#61; 0.1m&#x2F;s<br>&#x2F;&#x2F;每物理帧移动 0.1m&#x2F;s * 0.02s &#61; 0.002m</p><p>&#x2F;&#x2F;3.Impulse<br>&#x2F;&#x2F;给物体添加一个瞬间的力 &#xff0c;与物体质量有关 忽略时间 默认为1<br>&#x2F;&#x2F;t:1s<br>&#x2F;&#x2F;v &#61; 10 * 1 &#x2F; 2 &#61; 5m&#x2F;s<br>&#x2F;&#x2F;每物理帧移动 5m&#x2F;s * 0.02s &#61; 0.1m</p><p>&#x2F;&#x2F;4.VelocityChange<br>&#x2F;&#x2F;给物体添加一个瞬时速度 忽略质量 忽略时间 默认质量1kg时间1s<br>&#x2F;&#x2F;v &#61; 10 * 1 &#x2F; 1 &#61; 10m&#x2F;s<br>&#x2F;&#x2F;每物理帧移动 10m&#x2F;s * 0.02s &#61; 0.2m</code></pre> </p><h4 id="%E5%8A%9B%E5%9C%BA%E8%84%9A%E6%9C%AC">力场脚本</h4> <p>unity提供了一个常量力的组件&#xff1a;Constant Force 脚本</p> <h4 id="%E5%88%9A%E4%BD%93%E7%9A%84%E4%BC%91%E7%9C%A0">刚体的休眠</h4> <p>Unity为了节约性能&#xff0c;会在某些情况刚体休眠</p> <pre><code class="language-cs">//获取刚体是否处于休眠状态if(rigidBody.IsSleeping())&#123;    //若是 则唤醒    rigidBody.WakeUp();&#125;</code></pre> <h2 id="%C2%A0%E9%9F%B3%E6%95%88%E7%B3%BB%E7%BB%9F"> 音效系统</h2> <h3 id="%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5">音频文件导入</h3> <p>常用格式</p> <p>wav、mp3、ogg、aiff</p> <p>音频文件属性设置</p> <h3 id="%C2%A0%E9%9F%B3%E9%A2%91%E6%BA%90%E5%92%8C%E9%9F%B3%E9%A2%91%E7%9B%91%E5%90%AC%E8%84%9A%E6%9C%AC"> 音频源和音频监听脚本</h3> <p>音频源</p> <p>音频监听脚本</p> <p>AudioListener只能有一个&#xff0c;一般放在主摄像机上&#xff0c;有该脚本才能听到声音</p> <h3 id="%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6%E9%9F%B3%E9%A2%91%E6%BA%90">代码控制音频源</h3> <h4 id="%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6%E6%92%AD%E6%94%BE%E5%81%9C%E6%AD%A2">代码控制播放停止</h4> <pre><code class="language-cs">if(Input.GetKeyDown(KeyCode.P)) &#123;    //播放音效    audioSource.Play();&#125;if (Input.GetKeyUp(KeyCode.S))&#123;    //停止音效    audioSource.Stop();&#125;if(Input.GetKeyDown(KeyCode.Space))&#123;    //暂停播放    audioSource.Pause();&#125;</code></pre> <h4 id="%E6%A3%80%E6%B5%8B%E9%9F%B3%E6%95%88%E6%98%AF%E5%90%A6%E6%92%AD%E6%94%BE%E5%AE%8C%E6%AF%95">检测音效是否播放完毕</h4> <pre><code class="language-cs">if(audioSource.isPlaying)&#123;    print(&#34;播放中&#34;);&#125;else&#123;    print(&#34;播放结束&#34;);&#125;</code></pre> <h4 id="%E5%8A%A8%E6%80%81%E6%8E%A7%E5%88%B6%E9%9F%B3%E6%95%88%E6%92%AD%E6%94%BE">动态控制音效播放</h4> <p><strong>直接在要播放音效的对象上挂载脚本 控制播放</strong></p> <p>如同上文的控制音效播放暂停等</p> <p><br /><strong>实例化挂载了音效源脚本的对象</strong></p> <p>new一个GameObject&#xff0c;将自动播放音效的的预设体拖到里面&#xff0c;在相应条件下实例化该预设体 &#xff0c;实际使用较少。<br /><strong>用一个Audiosource来控制播放不同的音效</strong></p> <p>将对应的音效拖入clip中</p> <pre><code class="language-cs">public AudioClip clip;...AudioSource aud &#61; this.gameObject.AddComponent&lt;AudioSource&gt;();aud.clip &#61; clip;aud.Play();</code></pre> <p>一个Gameobiect可以挂载多个音效源脚本Audiosource<br /> 使用时要注意 管理多个音效 控制他们的播放 停止</p> <h3 id="%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3">麦克风输入相关</h3> <h4 id="%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E9%BA%A6%E5%85%8B%E9%A3%8E%E4%BF%A1%E6%81%AF">获取设备麦克风信息</h4> <pre><code class="language-cs">string[] str &#61; Microphone.devices;for(int i &#61; 0; i &lt; str.Length; i&#43;&#43;)&#123;    print(str[i]);&#125;</code></pre> <h4 id="%E5%BC%80%E5%A7%8B%E5%BD%95%E5%88%B6">开始录制</h4> <pre><code class="language-cs">//参数一:设备名 传空使用默认设备//参数二:i超过录制长度后 是否重头录制//参数三:录制时长//参数四:采样率if (Input.GetKeyDown(KeyCode.Space))&#123;    clip &#61; Microphone.Start(null, false, 10, 44100);&#125;</code></pre> <h4 id="%E7%BB%93%E6%9D%9F%E5%BD%95%E5%88%B6">结束录制</h4> <pre><code class="language-cs">if (Input.GetKeyUp(KeyCode.Space))&#123;    Microphone.End(null);    AudioSource s &#61; this.gameObject.GetComponent&lt;AudioSource&gt;();    if (s !&#61; null)    &#123;        s &#61; this.gameObject.AddComponent&lt;AudioSource&gt;();    &#125;    s.clip &#61; clip;    s.Play();&#125;</code></pre> <h4 id="%E8%8E%B7%E5%8F%96%E9%9F%B3%E9%A2%91%E6%95%B0%E6%8D%AE%E7%94%A8%E4%BA%8E%E5%AD%98%E5%82%A8%E6%88%96%E4%BC%A0%E8%BE%93">获取音频数据用于存储或传输</h4> <pre><code class="language-cs">//用于存储的数组长度为声道数*剪辑长度float[] f &#61;new float[clip.channels*clip.samples];clip.GetData(f, 0);print(f.Length);</code></pre> <p></p> <h2>场景转换</h2>SceneManager.LoadScene("场景名字");<p>完结</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端学习1】Html基础知识总结</title>
      <link href="/2024/10/07/%E3%80%90%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A01%E3%80%91Html%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2024/10/07/%E3%80%90%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A01%E3%80%91Html%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>不多废话直接开始，只挑最主要的。以HTML5为标准，像是一些废弃的标签、html4里边的，我全都省略掉了（一般也用不到）。<br>所有html,我们都写在后缀为html的文件里。写脚本时，我推荐编辑器vscode。</p><h1>一、HTML基本框架（了解即可）</h1>为什么是了解即可,因为不重要，框架不用你自己打出来，vscode直接输入个!就能自动生成。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">整个网页是从&lt;html&gt;这里开始的，然后到&lt;/html&gt;结束。</span><br><span class="line">head标签代表页面的“头”，定义一些特殊内容，这些内容往往都是“不可见内容”（在浏览器不可见）。</span><br><span class="line">&lt;head&gt;定义了文档的信息</span><br><span class="line">&lt;title&gt;定义了文档的标题</span><br><span class="line">&lt;base&gt;定义了页面链接标签的默认链接地址</span><br><span class="line">&lt;link&gt;定义了一个文档和外部资源之间的关系</span><br><span class="line">&lt;meta&gt;定义了HTML文档中的元数据</span><br><span class="line">&lt;script&gt;定义了客户端的脚本文件</span><br><span class="line">&lt;style&gt;定义了HTML文档的样式文件</span><br><span class="line">&lt;head&gt;的内部标签也非常重要，在前期大家只需要感性认知就可以。</span><br><span class="line">&lt;!--我是注释，记得我怎么写--&gt; 这是注释</span><br></pre></td></tr></table></figure><p>body标签代表页面的“身”，定义网页展示内容，这些内容往往都是“可见内容”（在浏览器可见）。</p><h1><a name = "pos1">二、HTML基础知识点</a></h1><h3><font color ="red">一、常用基础标签</font></h3><b>段落与文字标签</b><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;单独成一行&lt;/p&gt;</span><br><span class="line">&lt;/br&gt;(表示换行，它是单独出现的)</span><br><span class="line">&lt;hr&gt;(表示分割线，也是单独出现的)</span><br><span class="line">&lt;h1&gt;&lt;/h1&gt;...&lt;h6&gt;&lt;/h6&gt;(段落标签，表示标题文字大小，h1最大h6最小)</span><br><span class="line">&lt;div&gt;&lt;/div&gt;(分割，块元素)</span><br><span class="line">&lt;span&gt;&lt;/span&gt;区域（行内元素）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><b>文本格式化标签</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;strong&gt;&lt;/strong&gt;和&lt;b&gt;&lt;/b&gt;：给文字加粗</span><br><span class="line">&lt;em&gt;&lt;/em&gt;和&lt;i&gt;&lt;/i&gt;：给文字加斜体效果</span><br><span class="line">&lt;del&gt;&lt;/del&gt;和&lt;s&gt;&lt;/s&gt;：给文字加删除线</span><br><span class="line">&lt;ins&gt;&lt;/ins&gt;和&lt;u&gt;&lt;/u&gt;：给文字加下划线</span><br><span class="line">&lt;cite&gt;&lt;/cite&gt;：引用文字</span><br><span class="line">&lt;sub&gt;&lt;/sub&gt;：文字下标</span><br><span class="line">&lt;sup&gt;&lt;/sup&gt;：文字下标</span><br></pre></td></tr></table></figure><p><b>无序列表</b><br>ul和li标签的组合使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul type=&quot;circle&quot;&gt;</span><br><span class="line">  &lt;li&gt;Item 1&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;Item 2&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;Item 3&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">对于 &lt;ul&gt;（无序列表），type 属性的可用值通常有：</span><br><span class="line">disc：默认值，列表项前显示一个实心圆点（●）。</span><br><span class="line">circle：列表项前显示一个空心圆圈（○）。</span><br><span class="line">square：列表项前显示一个实心方块（■）。</span><br></pre></td></tr></table></figure><p>效果：</p><ul type="circle">  <li>Item 1</li>  <li>Item 2</li>  <li>Item 3</li></ul><p><b>有序列表</b><br>ol和li标签的组合使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol type=&quot;I&quot;&gt;</span><br><span class="line">  &lt;li&gt;Item 1&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;Item 2&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;Item 3&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">对于 &lt;ol&gt;（有序列表），type 属性的可用值通常有：</span><br><span class="line">1：默认值，列表项按数字顺序排列（1, 2, 3, ...）。</span><br><span class="line">A：列表项按大写字母顺序排列（A, B, C, ...）。</span><br><span class="line">a：列表项按小写字母顺序排列（a, b, c, ...）。</span><br><span class="line">I：列表项按大写罗马数字顺序排列（I, II, III, ...）。</span><br><span class="line">i：列表项按小写罗马数字顺序排列（i, ii, iii, ...）。</span><br></pre></td></tr></table></figure><p>效果：</p><ol type="I">  <li>Item 1</li>  <li>Item 2</li>  <li>Item 3</li></ol><p><b>自定义列表</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dl、dt和dd的组合，其中要在&lt;dl&gt;&lt;/dl&gt;范围内去写，&lt;dt&gt;&lt;/dt&gt;是定义分类的,&lt;dd&gt;&lt;/dd&gt;是我们要写的东西。</span><br><span class="line"></span><br><span class="line">&lt;dl&gt;</span><br><span class="line">  &lt;dt&gt;gal玩家&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;柚子社粉丝&lt;/dd&gt;</span><br><span class="line">  &lt;dd&gt;前翼社粉丝&lt;/dd&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dt&gt;动漫爱好者&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;火影忍者&lt;/dd&gt;</span><br><span class="line">  &lt;dd&gt;海贼王&lt;/dd&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dt&gt;游戏爱好者&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;黑神话悟空&lt;/dd&gt;</span><br><span class="line">  &lt;dd&gt;侠盗猎车手&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><dl>  <dt>gal玩家</dt>  <dd>柚子社粉丝</dd>  <dd>前翼社粉丝</dd>  <dt>动漫爱好者</dt>  <dd>火影忍者</dd>  <dd>海贼王</dd>    <dt>游戏爱好者</dt>  <dd>黑神话悟空</dd>  <dd>侠盗猎车手</dd></dl><hr><b>表格</b><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">表格标签是&lt;table&gt;&lt;/table&gt;，所有东西写在里边，&lt;tr&gt;&lt;/tr&gt;表示行，&lt;caption&gt;&lt;/caption&gt;表示表头，&lt;td&gt;&lt;/td&gt;表示列：</span><br><span class="line">其中对于table标签:</span><br><span class="line">可以填一个属性为“border”,border对应的数字表示表格框框的粗细。</span><br><span class="line">注：这里以HTML5为标准，很多属性（如width何cellspacing都不再使用，问就是推给css了）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">&lt;caption&gt;罚推galgame数量&lt;/caption&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;200&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;300&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td&gt;400&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;500&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;600&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><table border="1"><caption>罚推galgame数量</caption><tr>  <td>100</td>  <td>200</td>  <td>300</td></tr><tr>  <td>400</td>  <td>500</td>  <td>600</td></tr></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">那么如果我们想实现合并单元格，如何做呢?</span><br><span class="line">colspan表示行合并，rowspan表示列合并</span><br><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt;</span><br><span class="line">            (这里就是把第一行后两个单元格合并了)</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td rowspan=&quot;2&quot;&gt;&lt;/td&gt;</span><br><span class="line">            (这里就是把第二行、一列后两个单元格合并了)</span><br><span class="line">            &lt;td&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;           </span><br><span class="line">            &lt;td&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><table border="1">        <tr>            <td></td>            <td colspan="2"></td>        </tr>        <tr>            <td rowspan="2"></td>            <td></td>            <td></td>        </tr>        <tr>                       <td></td>            <td></td>        </tr></table><p><b>图片</b><br>如何引用图片？和实现点击字符跳转？很简单：<br>常用的几个标签：<br>src:图片地址，可以填本地路径也可以填网上图片链接。<br>alt:如果图片显示不出来后的替代文字<br>title:鼠标悬停到图片上显示的文字<br>width和height:允许你自己设置图片宽高（不建议使用）<br><font color = red>拓展部分</font>：usemap:将一个图片定义成多个区域，点击跳转不同链接。<br><a href="https://www.w3school.com.cn/tags/att_img_usemap.asp">感兴趣的话点我</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://img1.doubanio.com/lpic/s34656558.jpg&quot; alt=&quot;哈哈&quot; title=&quot;galgame&quot;&gt;</span><br><span class="line">#下面是usemap，感兴趣可以试试。</span><br><span class="line"></span><br><span class="line">&lt;map name=&quot;infographic&quot;&gt;</span><br><span class="line">  &lt;area</span><br><span class="line">    shape=&quot;poly&quot;</span><br><span class="line">    coords=&quot;130,147,200,107,254,219,130,228&quot;</span><br><span class="line">    href=&quot;https://developer.mozilla.org/docs/Web/HTML&quot;</span><br><span class="line">    target=&quot;_blank&quot;</span><br><span class="line">    alt=&quot;HTML&quot; /&gt;</span><br><span class="line">  &lt;area</span><br><span class="line">    shape=&quot;poly&quot;</span><br><span class="line">    coords=&quot;130,147,130,228,6,219,59,107&quot;</span><br><span class="line">    href=&quot;https://developer.mozilla.org/docs/Web/CSS&quot;</span><br><span class="line">    target=&quot;_blank&quot;</span><br><span class="line">    alt=&quot;CSS&quot; /&gt;</span><br><span class="line">  &lt;area</span><br><span class="line">    shape=&quot;poly&quot;</span><br><span class="line">    coords=&quot;130,147,200,107,130,4,59,107&quot;</span><br><span class="line">    href=&quot;https://developer.mozilla.org/docs/Web/JavaScript&quot;</span><br><span class="line">    target=&quot;_blank&quot;</span><br><span class="line">    alt=&quot;JavaScript&quot; /&gt;</span><br><span class="line">&lt;/map&gt;</span><br><span class="line">&lt;img usemap=&quot;#infographic&quot; src=&quot;https://interactive-examples.mdn.mozilla.net/media/examples/mdn-info2.png&quot; alt=&quot;MDN infographic&quot; /&gt;</span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://img1.doubanio.com/lpic/s34656558.jpg" alt="哈哈" title="galgame"><br><map name="infographic"><br>  <area    shape="poly"    coords="130,147,200,107,254,219,130,228"    href="https://developer.mozilla.org/docs/Web/HTML"    target="_blank"    alt="HTML" /><br>  <area    shape="poly"    coords="130,147,130,228,6,219,59,107"    href="https://developer.mozilla.org/docs/Web/CSS"    target="_blank"    alt="CSS" /><br>  <area    shape="poly"    coords="130,147,200,107,130,4,59,107"    href="https://developer.mozilla.org/docs/Web/JavaScript"    target="_blank"    alt="JavaScript" /><br></map><br><img usemap="#infographic" src="https://interactive-examples.mdn.mozilla.net/media/examples/mdn-info2.png" alt="MDN infographic" /></p><p><b>音频</b><br>用audio标签<br>引用音频和图片类似，常见属性：<br>src：填链接<br>controls: 显示播放的控件<br>autoplay: 填true或false,是否自动播放。<br>loop: 填true或false，是否循环播放<br>其余属性有很多，但不重要，感兴趣可自行去了解。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio controls src = &quot;https://interactive-examples.mdn.mozilla.net/media/cc0-audio/t-rex-roar.mp3&quot;&gt;&lt;/audio&gt;</span><br></pre></td></tr></table></figure><p>效果：<br><audio controls src = "https://interactive-examples.mdn.mozilla.net/media/cc0-audio/t-rex-roar.mp3"></audio></p><p><b>视频标签</b><br>和以上音频一样，把audio换成video，不再赘述</p><p><b>超文本链接与标签</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">超文本链接的基本格式是</span><br><span class="line">&lt;a href=&quot;链接地址&quot;&gt;要填的内容&lt;/a&gt;</span><br><span class="line">可以有的属性是target。</span><br><span class="line">target = &quot;_blank&quot;的话，会新开个窗口实现跳转，</span><br><span class="line">target = &quot;_self&quot;的话，直接在当前窗口跳转。</span><br><span class="line">来个简单的例子：</span><br><span class="line">&lt;a href = &quot;https://aurorayuhua.love&quot; target = &quot;_blank&quot;&gt;点我跳转到资源站&lt;/a&gt;</span><br><span class="line">可以实现点击跳转的效果，可以是一个网址、一张图片、甚至是一个标签</span><br><span class="line">那么什么是标签？标签就像我们看书的书签，有了它、就能立马跳转到我们要看的那一页。</span><br><span class="line">格式是</span><br><span class="line">&lt;a name=&quot;标签名&quot;&gt;文字&lt;/a&gt;</span><br><span class="line">举个例子：</span><br><span class="line">&lt;a name = &quot;pos1&quot;&gt;一、HTML基础知识点&lt;/a&gt;</span><br><span class="line">&lt;a href = &quot;#pos1&quot;&gt;我要跳转到开头&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>效果：<br><a href = "https://aurorayuhua.love" target = "_blank">点我跳转到资源站</a><br><a href = "#pos1">我要跳转到开头</a></p><h2>Form表单</h2>表单是什么？比如网站注册窗口、百度搜索框，这些都是表单。表单是写在form标签里的。先来说form标签常用的属性:<p>action<br>指定表单数据提交到的服务器端URL。</p><p>method<br>指定提交表单时使用的HTTP方法（GET或POST）。分为get方法和post方法，提交少量数据用get,大量数据用post。</p><p>name<br>指定表单的名称。</p><p>target<br>指定提交表单后，服务器响应将如何显示。<br>例如，它可以是_blank（新窗口或标签页）、_self（当前窗口）、_parent（父框架）或_top（整个窗口）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;url&quot; method=&quot;get&quot; name = &quot;填表格&quot; target = &quot;_blank&quot;&gt;&lt;/form&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><b>以下不重要，了解即可，不用记</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">enctype</span><br><span class="line">指定用于编码表单数据的字符集和内容类型。对于包含文件上传的表单，通常需要设置为multipart/form-data。</span><br><span class="line"></span><br><span class="line">accept-charset</span><br><span class="line">指定表单接受的字符编码集。</span><br><span class="line"></span><br><span class="line">autocomplete</span><br><span class="line">提供表单自动完成功能的提示。它可以设置为on（启用自动完成）、off（禁用自动完成）或不设置（浏览器默认行为）。</span><br><span class="line"></span><br><span class="line">novalidate</span><br><span class="line">如果设置，表示表单提交前不进行验证。</span><br><span class="line"></span><br><span class="line">autofocus</span><br><span class="line">如果设置，页面加载完成后，表单的首个输入字段会自动获得焦点。</span><br><span class="line"></span><br><span class="line">class</span><br><span class="line">指定表单的类名，用于CSS样式的应用。</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">指定表单的唯一标识符。</span><br><span class="line"></span><br><span class="line">style</span><br><span class="line">指定行内CSS样式。</span><br><span class="line"></span><br><span class="line">title</span><br><span class="line">提供关于表单的额外信息。</span><br><span class="line"></span><br><span class="line">onsubmit</span><br><span class="line">指定提交表单时执行的JavaScript函数或代码。</span><br><span class="line"></span><br><span class="line">onreset</span><br><span class="line">指定重置表单时执行的JavaScript函数或代码。</span><br></pre></td></tr></table></figure><p><b>label标签和input标签</b><br>lable标签通常和input标签放一块，这里详细讲input标签，只记一些常用的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">类型（type）属性</span><br><span class="line">&lt;input&gt;元素的type属性决定了输入控件的类型，常见的类型包括：（其实最常用的主要就text和password）</span><br><span class="line">text：单行文本框</span><br><span class="line">password：密码输入框，输入的字符会被隐藏</span><br><span class="line">email：用于输入电子邮件地址</span><br><span class="line">button：可点击的按钮</span><br><span class="line">number：用于输入数字</span><br><span class="line">radio：单选按钮</span><br><span class="line">checkbox：复选框</span><br><span class="line">submit：提交按钮</span><br><span class="line">reset：重置按钮</span><br><span class="line">file：文件上传控件</span><br><span class="line">hidden：隐藏的输入字段</span><br><span class="line">image：图像作为提交按钮</span><br><span class="line">range：用于输入一定范围内的数字</span><br><span class="line">date：用于输入日期</span><br><span class="line">month：用于输入月份和年份</span><br><span class="line">week：用于输入周和年份</span><br><span class="line">time：用于输入时间</span><br><span class="line">datetime：用于输入日期和时间</span><br><span class="line">datetime-local：用于输入日期和时间（本地时间）</span><br><span class="line"></span><br><span class="line">2. 属性</span><br><span class="line">name：输入字段的名称，用于表单提交</span><br><span class="line">value：输入字段的值</span><br><span class="line">placeholder：在输入字段为空时显示的提示文本</span><br><span class="line">required：表单提交时必须填写该字段</span><br><span class="line">readonly：输入字段为只读，用户不能编辑</span><br><span class="line">disabled：输入字段被禁用，用户不能编辑</span><br><span class="line">maxlength：输入字段的最大字符数</span><br><span class="line">minlength：输入字段的最小字符数</span><br><span class="line">size：输入字段的宽度（字符数）</span><br><span class="line">pattern：输入字段的正则表达式，用于验证输入</span><br><span class="line">list：指定一个&lt;datalist&gt;元素的id，为输入字段提供自动完成建议</span><br><span class="line">step：数字输入字段的合法数字间隔</span><br><span class="line">multiple：允许用户选择多个值（如文件上传或电子邮件地址输入）</span><br></pre></td></tr></table></figure><p>我的建议是不用记完，只记几个比较常用的就行。一般也就注册用户用邮箱、账号密码、忘记密码重置按钮、上传文件、是否同意网站条款，其余倒很少用了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;label&gt;请输入用户名：&lt;/label&gt;&lt;input type=&quot;text&quot;   name=&quot;username&quot;  placeholder=&quot;请输入您的用户名&quot; value= &quot;你可以把我删掉&quot;&gt;</span><br><span class="line">&lt;label&gt;请输入密码：&lt;/label&gt;&lt;input type =&quot;password&quot; name = &quot;password&quot; placeholder = &quot;输入密码&quot;&gt;</span><br><span class="line">&lt;label&gt;是否同意网站条款?&lt;/label&gt;</span><br><span class="line">&lt;label&gt;同意&lt;/label&gt;&lt;input type = &quot;checkbox&quot;&gt;</span><br><span class="line">&lt;p&gt;你是男生还是女生？&lt;/p&gt;</span><br><span class="line">&lt;label for=&quot;male&quot;&gt;男&lt;/label&gt;&lt;input type=&quot;radio&quot; id=&quot;male&quot; name=&quot;gender&quot;&gt;</span><br><span class="line">&lt;label for=&quot;female&quot;&gt;女&lt;/label&gt;&lt;input type=&quot;radio&quot; id=&quot;female&quot; name=&quot;gender&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;点我提交&quot;&gt;</span><br><span class="line">注：为了保证男女只能选一个，我们需要给他们加上相同的name标签。</span><br><span class="line">label for里填的内容与id里一样，意思是告诉浏览器，点击这些标签时，应该将焦点移动到 id 为 &quot;male&quot; 和 &quot;female&quot; 的单选按钮上。</span><br></pre></td></tr></table></figure><p>效果：<br><label>请输入用户名：</label><input type="text"   name="username"  placeholder="请输入您的用户名" value= "你可以把我删掉"><br><label>请输入密码：</label><input type ="password" name = "password" placeholder = "输入密码"><br><label>是否同意网站条款?</label><br><label>同意</label><input type = "checkbox"></p><p>你是男生还是女生？</p><label for="male">男</label><input type="radio" id="male" name="gender"><label for="female">女</label><input type="radio" id="female" name="gender"><input type="submit" value="点我提交"><p><b><font color = "red">select标签</font></b><br>select标签主要做下拉列表用的,要注意:</p><p>  1.select中至少包含一对option。<br>    2.在option中定义selected&#x3D;”selected”时，当前项即为默认选中项。<br>  3.value&#x3D;” “(初始值不能被省略）<br>  4.使用multiple 属性可以设置单选或多选， multiple size&#x3D;”3”就是能一共选3个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">  &lt;select&gt;</span><br><span class="line">      &lt;option value=&quot; &quot;&gt;选项1&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot; &quot;&gt;选项2&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot; &quot;&gt;选项3&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot; &quot; selected=&quot;selected&quot;&gt;选项4&lt;/option&gt;</span><br><span class="line">  &lt;/select&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><form>  <select>      <option value=" ">选项1</option>      <option value=" ">选项2</option>      <option value=" ">选项3</option>      <option value=" " selected="selected">选项4</option>  </select></form><p><b>datalist标签</b><br>和select标签比较像，但是select只能选择，这个可以在框框里输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;label</span><br><span class="line">  &gt;Choose a browser from this list: &lt;input list=&quot;browsers&quot; name=&quot;myBrowser&quot;</span><br><span class="line">/&gt;&lt;/label&gt;</span><br><span class="line">&lt;datalist id=&quot;browsers&quot;&gt;</span><br><span class="line">  &lt;option value=&quot;Chrome&quot;&gt;&lt;/option&gt;</span><br><span class="line">  &lt;option value=&quot;Firefox&quot;&gt;&lt;/option&gt;</span><br><span class="line">  &lt;option value=&quot;Internet Explorer&quot;&gt;&lt;/option&gt;</span><br><span class="line">  &lt;option value=&quot;Opera&quot;&gt;&lt;/option&gt;</span><br><span class="line">  &lt;option value=&quot;Safari&quot;&gt;&lt;/option&gt;</span><br><span class="line">&lt;/datalist&gt;</span><br></pre></td></tr></table></figure><p>效果：<br>&lt;label</p><blockquote><p>Choose a browser from this list: <input list="browsers" name="myBrowser"/></label><br><datalist id="browsers"><br>  <option value="Chrome"></option><br>  <option value="Firefox"></option><br>  <option value="Internet Explorer"></option><br>  <option value="Opera"></option><br>  <option value="Safari"></option><br></datalist></p></blockquote><p><b>textarea标签</b><br>创建一个文本框,rows是行数、cols是列数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea rows=&quot;4&quot; cols=&quot;10&quot;&gt;多行文本框内容&lt;/textarea&gt;</span><br></pre></td></tr></table></figure><textarea rows="4" cols="10">多行文本框内容</textarea><p><b>iframe标签</b><br>可以用来穿插一些页面（比如b站视频）<br>height 和 width 属性用来定义iframe标签的高度与宽度。<br>属性默认以像素为单位, 但是指定其按比例显示 (如：”40%”)。<br>有些老旧的浏览器不支持。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;https://aurorayuhua.love/&quot; width=&quot;500&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><iframe src="https://aurorayuhua.love/" width="500" height="200"></iframe><h2>块级元素和内联元素</h2>块级元素（Block Elements）块级元素在页面上以“块”的形式出现，它们的行为特点如下：<p>宽度：默认宽度填充其父元素的宽度（即100%），除非指定了宽度。<br>高度：高度取决于内部内容。<br>排列方式：块级元素通常会以垂直方向排列，即一个接一个地堆叠。<br>外边距（Margin）和内边距（Padding）：可以设置上下左右的外边距和内边距。<br>与其他元素的关系：块级元素周围不能有内联元素（除非特别指定）。<br>常见的块级元素包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;section&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">&lt;footer&gt;</span><br><span class="line">&lt;article&gt;</span><br><span class="line">&lt;aside&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;h1&gt; 到 &lt;h6&gt;</span><br></pre></td></tr></table></figure><p>内联元素（Inline Elements）<br>内联元素在页面上以“行内”的形式出现，它们的行为特点如下：</p><p>宽度：宽度由其内部内容决定。<br>高度：高度也是由内部内容决定。<br>排列方式：内联元素通常会以水平方向排列，即它们会尽可能地排成一行。<br>外边距（Margin）和内边距（Padding）：只能设置左右和上下的内边距，上下的外边距不会影响布局。<br>与其他元素的关系：内联元素可以与其他内联元素或文本相邻。<br>常见的内联元素包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;</span><br><span class="line">&lt;a&gt;</span><br><span class="line">&lt;label&gt;</span><br><span class="line">&lt;input&gt;</span><br><span class="line">&lt;img&gt;</span><br><span class="line">&lt;strong&gt;</span><br><span class="line">&lt;em&gt;</span><br><span class="line">&lt;b&gt;</span><br><span class="line">&lt;i&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;button&gt;</span><br></pre></td></tr></table></figure><p><b>HTML5新标签</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;&lt;/header&gt;</span><br><span class="line"></span><br><span class="line">头部</span><br><span class="line"></span><br><span class="line">&lt;nav&gt;&lt;/nav&gt;</span><br><span class="line"></span><br><span class="line">导航</span><br><span class="line"></span><br><span class="line">&lt;section&gt;&lt;/section&gt;</span><br><span class="line"></span><br><span class="line">定义文档中的节,比如章节、页眉、页脚</span><br><span class="line"></span><br><span class="line">&lt;aside&gt;&lt;/aside&gt;</span><br><span class="line"></span><br><span class="line">侧边栏</span><br><span class="line"></span><br><span class="line">&lt;footer&gt;&lt;/footer&gt;</span><br><span class="line"></span><br><span class="line">脚部</span><br><span class="line"></span><br><span class="line">&lt;article&gt;&lt;/article&gt;</span><br><span class="line"></span><br><span class="line">代表一个独立的、完整的相关内容块,例如一篇完整的论坛帖子,一篇博客文章,一个用户的评论等。</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>写到这里，我基本把html常用的知识点都写完了。刚开始学的时候可能有点麻烦，但慢慢写多了就会了。不着急，慢慢来。如果有要更新补充的话，欢迎提出，我会后续补充。下一篇写css笔记。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端学习0】前端介绍</title>
      <link href="/2024/10/07/%E3%80%90%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E9%9B%B6%E3%80%91%E5%89%8D%E7%AB%AF%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/10/07/%E3%80%90%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E9%9B%B6%E3%80%91%E5%89%8D%E7%AB%AF%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>本系列为个人制作的前端笔记，主要是方便自己和他人看。在开始之前先写写序言。</p><h1>什么是前端？</h1>我们每天都会浏览各种网页、软件，可能你会好奇，一些网站和软件怎么做的这么好看？这就是前端。前端负责的是网页、应用的界面和交互，你所看到的很多网页特效，都是由前端写的（多是css）。在学习之前，我们需要把html和markdown分清，两种都是标记语言。论坛“理理の茶馆”里写文章用到的多是markdown，主要写博客用的。markdown不能拿来写网页。<h1>前端要学什么？</h1>可以参考<a href = "https://zhuanlan.zhihu.com/p/150980412" target = "_blank">知乎的一篇文章</a>,对于新人来说，最先接触的就是“前端三剑客”：Html,css,JavaScript。也是我现在在学的，其中我觉得最难的是css，因为css有很多，感觉全记住是不可能的（我建议css一大部分用到的时候再去查去学，日积月累就好）<p>聊聊我学到的东西，html是最基础的脚本语言（它还不是编程语言，是脚本语言），实现很基础的布局;css就是各种特效，一些漂亮的网站和app,很多都是由css实现的效果;JavScript是交互相关的，学会一门编程语言后就觉得不那么吃力了。</p><p>我是前端新人，虽说去年开始学了、但一直没坚持下来，断断续续的、好多都忘了（不要像我一样TAT），最近把b站唐老狮的C#课程学完了，突然想起来前端，与Unity3D同步学习。对我来说很有用的学习方式是，假想一个对象、把知识点总结后教给“假想的对象”，我也会这样记录，一起加油。</p><h1>HTML是什么？</h1>由于接下来我的笔记，注重于“不多废话、直接记录”，怕读者在学习时懵逼——学这么多，都是干什么的，于是介绍一下。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【新人向】给Unity初学者的建议</title>
      <link href="/2024/10/06/%E3%80%90%E6%96%B0%E4%BA%BA%E5%90%91%E3%80%91%E7%BB%99Unity%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%BB%BA%E8%AE%AE/"/>
      <url>/2024/10/06/%E3%80%90%E6%96%B0%E4%BA%BA%E5%90%91%E3%80%91%E7%BB%99Unity%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%BB%BA%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<p>很多人小时候都有个游戏梦，希望能开发出优秀的游戏、供大家去玩。在学习游戏开发的路上，很多人接触到Unity引擎。</br></p><h1>引擎简单介绍</h1>Unity是一个免费下载、可商用的引擎。主要以C#编程语言去编写脚本、配合Unity引擎自身来进行游戏开发工作。也可以用来制作动画、特效等。Unity制作的游戏有很多，比如王者荣耀、原神，还有一些小H油...</br><b>为什么选择Unity?</b>一方面是Unity在游戏市场占的份额比较大，好多游戏都是Unity开发的。另一方面Unity功能和社区还是相对比较完善的，开发难度不算太大。你问我为什么不上手虚幻五?一方面我电脑配置吃不消，另一方面我C++没学明白。Unity相对比较友好吧。<h1>给入门者的建议</h1>不知道很多小伙伴是不是和我一样，想用Unity做出很厉害的游戏，于是在网上找了些教程学学，感觉能跟案例做出来游戏，实际个人开发时什么也不会...我入门三个月、踩了好多坑，于是想分享一些看法、经验吧...希望能帮助想学习、或者刚开始学习的友友。<h2>打好编程基础</h2>学Unity最终还是离不开学C#,虽然有一些免代码工具，但最终要做出好的游戏、还是摆脱不了写代码。Unity的主流开发语言是C#，C#学到面向对象的程度时（结构体、类、多态、抽象函数、拓展方法），差不多就可以去正式学Unity了。之后的一些内容，如泛型、委托、事件、list，可以在开发中边学边看，先学完再学Unity更好。</br>为什么说编程基础很重要，因为实际开发中要自己写代码，基础不牢的话经常出bug、还经常写一半不会写了。遇到不会的东西，可以问AI（我喜欢问kimi，帮我写一些代码找一些bug）。刚开始时我只学了C#基础、便迫不及待去学习Unity,最后还是回来学C#核心和进阶了...<h2>切忌浮躁</h2>有同学喜欢一上来就去看案例、跟着案例去操作。也经常在b站刷到“学Unity 1天，制作游戏”之类的视频。我觉得一上来别跟着案例，还是要打好基础。跟着案例做出来了、蛮有成就感，但当我自己去从头开始做游戏时，我又开始懵逼了：这角色控制器怎么写？不建议新手小白上来就跟进案例。</br>经常看到一些大佬，“一个月自学Unity开发游戏”，每次我都自愧不如：我都学几个月了怎么什么也不会？后来我忽视了一点，我是完全零基础学习的：此前几乎没有接触过任何一门编程语言。光学C#我学了三个月...结合自身实际慢慢来吧，越浮躁越是什么也不会，慢慢来就好。<h2>多去做、而不是看</h2>学Unity,很多代码是要自己亲自敲得，不要只看网上别人写代码、自己不去敲下来；也不要不经思考直接照抄别人的代码，这样很容易忘、而且好多功能自己写就会写不出来。<h2>坚持爱好</h2>学Unity必定是个长期的任务，指望一两天学会肯定是不可能的。如果你想零代码、一两天就做出个游戏可以试试RPGMaker、renpy、light.vn引擎等，不过都很局限——只能完成少数类型的游戏。所以学Unity一定要坚持下去，而且我发现，学会一门编程语言、一个游戏引擎后，再学其它的就比较简单了。学了C#,我再开始学C、C++、java,就感到比较轻松了——编程语言、游戏引擎间具有相似性。不要三天打鱼两天晒网。<h2>推荐的课程</h2>我个人推荐b站up主“唐老狮”的网课，知识点都是免费的、习题部分和实践小项目倒付费。由于本人是白嫖怪，就没买他的课程，习题自己做、不会了问AI。最先看的是up“丑萌气质狗”的C#学习视频，感觉对于入门编程挺有用的（但因为太基础，也就只适合入门了）。<hr>最后，希望大家能在自己的爱好上有所成就，一路前行，与君共勉。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【gal随写】樱之杜</title>
      <link href="/2024/10/05/%E3%80%90gal%E9%9A%8F%E5%86%99%E3%80%91%E6%A8%B1%E4%B9%8B%E6%9D%9C/"/>
      <url>/2024/10/05/%E3%80%90gal%E9%9A%8F%E5%86%99%E3%80%91%E6%A8%B1%E4%B9%8B%E6%9D%9C/</url>
      
        <content type="html"><![CDATA[<p>暑假的时候玩的作品，樱之杜（不是樱之社），整体玩下来后，给我的感觉是很刺激、有点吓人，缺点部分就是音乐有点催眠、一些日常太灌水。</br><br>但我想为这部作品写点东西，主要是因为故事中的一个配角——五郎太所长。大概是因为受以前的电影影响吧：主角是个优秀的警察、身边之人死后深受打击，最后抓到坏人、贯彻正义的故事（虽然很老套、但自己就是挺喜欢这种题材的）。而《樱之杜》中的五郎太所长就是典型的代表人物吧。</p><h2>五郎太的故事</h2><details>  <summary>剧透警告</summary>七年前，五郎太忠雄是一名正义的刑警。他带领队员、去搜捕杀人魔兵藤光兴，在杀人魔的房子里找到了自己女儿的尸体。</br>按刑警规定，本案涉及刑警亲属、五郎太不得参与本案。然而五郎太不甘心女儿死于杀人魔之手，私自行动。作为警察神射手的他、找到兵藤光兴、几枚子弹射向了这个杀人魔。</br>杀人魔大概死了吧，然而自己的家庭支离破碎。儿子无法接受妹妹的死亡、二十岁时飙车出车祸死了，妻子也离自己而去。曾经的“神射手”，开了一家侦探所、苟且生活着。</br>七年后，一位名叫吹上慎思的少年告诉所长，兵藤光兴没死。所长在这一刻，真正燃起了斗志和信念————他要亲手终结这个杀人魔的生命。<p>对于这个人物，明明只是个配角，然而却有种很熟悉的感受，然而自己从未经历过类似的事情、却总有种莫名的熟悉感，我还是十分喜欢五郎太所长这个人的。</br><br>表面上骂阿秀废物、却一直在帮助、收留着阿秀，等阿秀黑化时，袭击过主角团、杀过自己的同学，然而却未向所长出过手，阿秀大概还是很感激所长的。</p></details><hr>个人评价老吴的《樱之杜》系列，优点在于剧情上挺吸引人的，那种悬疑、恐怖的风格着实吊足了我的胃口。能感到比较明显的缺点，就是部分音乐不太给力，日常放的那首bgm说实话挺催眠的（不过其它音乐挺不错的，圆香战曲很好听，名字是《Never forget》），我玩完这部，没想到印象最深刻的不是阿秀，而是五郎太所长。整体上还是挺推荐去玩的。]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>island剧情分析</title>
      <link href="/2024/06/25/island%E5%89%A7%E6%83%85%E5%88%86%E6%9E%90/"/>
      <url>/2024/06/25/island%E5%89%A7%E6%83%85%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>本文写于2024.2.11，问就是我搬运以前写的东西</p><p>这几天把《island》玩完了，刚开始玩时很懵，玩完后思考思考剧情，发现确实挺难懂，看完动画+搜集资料更清晰些，于是随便写一写，帮助动画没看懂、游戏没玩懂的人更好理解（剧透警告）。当然也有可能自己理解的不对，欢迎岛学家来补充和指正！不过游戏也有很多坑至今没补全，一些设定也很冲突就是了。</p><hr>#世界的真相在island的世界观，地球是以四万年为一次轮回，也就是说，从现在开始，每隔四万年的世界是相同的。男主三千界切那是“时空穿越者”。在“冷冻睡眠装置”里每次沉睡两万年。从现实、此刻开始，两万年以后和两万年以前的世界是相同的（因为世界是以四万年为一次轮回）。实际上男主不是从未来来的，而是从两万年前的世界穿越过来的，而两万年前与两万年后的世界是相同的。<p>数学证法：<br>因为世界是以四万年为一次轮回<br>所以未来两万年&#x3D;过去两万年<br>由概念可知冷冻睡眠装置能帮助人保持两万年不变<br>因为男主在过去沉睡了两万年<br>也就是说“向未来前进两万年”&#x3D;“回到两万年以前”<br>所以男主从未来来的没说错</p><hr># 关于纱罗线<p>首先结论：纱罗不是万里爱，两个人不是同一人。</p><p><b>疑问点一：为什么纱罗和万里爱胸前都有痣？</b>这个痣每个伽蓝堂家的人都有，刚出生时家族里的女性都会被长辈用工具烙印上。</p><p><b>疑问点二：伽蓝堂家的任务是什么？煤纹病的真相？岛上的“神隐”是什么？</b>任务是消除煤纹病。煤纹病是一种伴性遗传的疾病（伴X染色体不完全显性遗传病），学过生物的小伙伴应该明白。</p><p>XX——正常人（凛音和rinne）</p><p>Xx——非急性煤纹病患者（我不知道）</p><p>xx——是急性煤纹病患者（婆婆）</p><p>对于男性而言有三种情况</p><p>XY——正常人（三千界切那）</p><p>Xy——急性煤纹病患者。（御原典正）</p><p>xY——非急性煤纹病患者 （这个患者存疑，疑似御原切那）</p><p>然而“御三家”的恶习是重女轻男，学过生物的同学应该能明白后果。伽蓝堂家则是消灭有煤纹病的孩子，从刚出生开始就杀死婴儿。一些没能杀死的孩子则会被偷偷关“小黑屋”，对外宣称“神隐”，通过消灭致病基因来拯救岛民。</p><p><b>疑问点三：玉手箱是什么东西？大火是谁放的？</b>玉手箱就是个可以装圣人遗体、以及防火的东西。大火应该是伽蓝堂宗树放的。伽蓝堂宗树有很深的罪恶感（杀死婴儿、把孩子关小黑屋），伽蓝堂万里爱躲进了玉手箱并救出了纱罗，对外宣称自己死亡，其后假扮成护士有马雨兰，研究煤纹病的真相。</p><p><b>疑问点四：为什么纱罗觉得自己活不到17岁？</b>纱罗把自己当成了万里爱，万里爱16岁结婚生子，而自己16岁并没有这样做，现实被篡改自己将被抹消掉</p><p>剧情解析：伽蓝堂万里爱和伽蓝堂宗树生下来就被放在神社的院子里。伽蓝堂万里爱在16岁时要和伽蓝堂宗树结婚生子，伽蓝堂宗树最先不愿意，于是万里爱骗他“生下来的孩子是拯救岛的人”，骗宗树入赘。伽蓝堂宗树做着杀害患病婴儿、把患病的小孩关起来的事，承受不住罪恶感放火烧了神社想自杀。伽蓝堂万里爱救了纱罗，并躲进了玉手箱。</p><hr># 关于夏莲的妈妈枢都夏未<p>枢都夏未的梦想是从事研究，然而女性科学家不被看好，她以中宫末治为笔名，前往本土研究，却被传成“和中宫末治互相爱恋、从事科学研究”</p><hr># 有几个切那？男主的身份是什么？冬篇的秘密是什么？<p>一共有三个切那，分别是切那.奥哈拉(Setsuna)、御原切那、以及男主三千界切那。关于男主的身份，游戏和动画里都没具体介绍，关于男主的童年、父母家人一概未提，像是凭空出现的。</p><p>切那.奥哈拉是rinne的哥哥，和反叛军“阿瓦隆”的人有交集，参加了教会组织的探险活动，但是探险员们离开地底下，大多数人因为煤纹病+阳光的缘故死去。剩下的人返回，教会害怕“煤纹病”摧毁人们对外界美好的幻想、造成恐慌和绝望，于是对队员灭口。切那.奥哈拉受到了Karen的姐姐的照顾，于是姐姐被灭口了。切那.奥哈拉临死之前把真相告诉了纱罗。</p><hr><b>疑问点五：御原家的秘密是什么？男主为什么从夏篇穿越到冬篇去了？</b>御原切那是御原玖音和御原典正生下的孩子，然而玖音给孩子取名切那，并对传说很痴迷，甚至变态似的快爱上了自己的儿子。御原典正很生气，把御原切那关到小黑屋，并写在纸上“切那必须死！”。<p>御原玖音在生下儿子后，丧失了生育能力，对御三家来说，是尤其致命的。然而御原典正在海边捡到一个怀有身孕的孩子（13岁就怀孕了），带回家当女仆。枢都夏未和伽蓝堂万里爱叫这个孩子“小空”，三人关系很好。小空生下的孩子叫凛音，然而凛音却喜欢小空，不喜欢玖音，玖音于是变态般的虐待小空和凛音。后来玖音和凛音在悬崖处落海，两人在岸上被发现，玖音死了，凛音活着。为了维持御原家的地位，小空成为了御原玖音。</p><p>凛音在海边认识到了御原切那，二人度过了快乐的时光，有一天御原典正在小黑屋发现了御原切那和凛音在一起，生气的典正对切那进行殴打，拖到海边。凛音跑到海边想救切那，却和切那被冲到暴龙岛。暴龙岛上有冷冻睡眠装置，凛音在冷冻睡眠装置（这个装置哪来的我也不知道）里睡了五年，五年后装置被海岛基地发现并回收，御原切那死了。五年后凛音被冲回小岛（我也不知道她怎么被冲回来的）</p><p>1999年，凛音和三千界切那重返暴龙岛，岛上有一艘船，在回去的路上凛音溺水死了，三千界切那活下来，根据传说“凛音再次和切那相遇时会被拯救”为线索，男主在冷冻睡眠装置睡了两万年，穿越到冬篇要拯救女主。</p><hr>#小空（游戏和动漫里的假御原玖音）的秘密三千界切那穿越到两万年后遇到了13岁的rinne,切那表示要拯救一个忘掉的人（实际上是凛音），rinne说时间机器能拯救世界，世界包括切那想拯救的人，于是切那和rinne一起研究时间机器（实际上是冷冻睡眠装置),两人互相爱慕，并进行了深入交流。最后切那进入时间机器要穿越时间改变历史，rinne在切那进入装置后发现时间机器实际上是冷冻睡眠装置，自己决定也要进入装置（装置一共两台，男主来到冬篇时带来了一台，rinne又造了一台）去见切那。结果比切那早来了二十年，被御原典正捡到，后来成为了小空，再后来成为了御原玖音。<hr><b>疑问点六：男主究竟要拯救谁？</b>男主来到小岛是为了拯救rinne,来到冬篇是为了拯救凛音。事实上，御原凛音爱上了异父异母的哥哥御原切那，哥哥死后爱上了自己的父亲三千界切那，御原典正根本不是凛音的父亲。凛音的爸爸是三千界切那，妈妈是rinne，rinne把自己的名字给了凛音。<hr>#一些秘密1.游戏里暗示夏莲的哥哥守春是gay,对方可能是“海神波塞冬”，然而波塞冬已经有女儿了。2.巡警是个人妻控，以前喜欢过夏莲的妈妈夏未。<hr>总的来说，《island》的故事很不错，缺点是太杂太乱太多了，一些设定很模糊很难懂。游戏里我觉得rinne和爷爷很可怜，也许是我最对亲情刀子比较敏感的缘故吧。本来游戏就很乱，动画化后只有12集，改编难度本身也很大，体验感还是不如游戏的。不过我还是喜欢rinne,啦啦啦啦Island战队——，为了守护爱而战斗——]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Narcissu小说</title>
      <link href="/2024/06/23/Narcissu%E5%B0%8F%E8%AF%B4/"/>
      <url>/2024/06/23/Narcissu%E5%B0%8F%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<p>第一卷 一卷全</p><pre><code>水仙花学名：Narcissus，花期为一年的十一月至来年三月。水仙花虽有种子，不过因为由种子培育至开花需要经过数年时间，因此多以鳞茎作为人工繁殖及栽培的主要方式。花语为『自恋』。序章199X年春濑津美「……我的身体确实是从小就不太好……」即便如此，这对我的小学生活并没有构成任何影响。我仍旧每天上课，暑假也曾经一天到晚在外面跑，玩得整个人全身都晒成了古铜色。当时的我还可以每天踩着脚踏车踏板，赶着去市立游泳池游泳。我喜欢运动后披着一身淋漓的汗水，伫足在夕阳西下的归途中聆听蝉鸣，同时呼吸着自己身上从游泳池中带回来的消毒水味。某一年六月。当时我才刚升上国中不久，而学校就要开始在下个月进入游泳课的季节。然而，就在我为了游泳课订购泳装的隔天，我第一次住进了医院。而那时的记忆现在也依然清晰地烙印在我的脑海里。那是第一学期的期中考前，初来的梅雨连绵不断，使得那天格外寒冷。大雨滂沱的天空呈现一片白蒙蒙的景致……起初，学校的同学每天都还会来医院看我。在我出院以后，她们更是每个礼拜都到我家里来玩。她们每天帮我带来课堂上的笔记、讲义，还有老师帮我们出的作业。她们会告诉我每天班上发生的大小事，还会带后着喜孜孜的表情让我针对学校里的事情问东问西的。「可是……这也只有刚开始的那一段时间而已。」夏天过了。秋天来，冬天去，这段时间里面我又再次住进了医院，然后出院，接着过着每天得到医院报到的生活。之后，我再一次住进医院时，就彻底被学校抛弃、被社会隔离了。那些曾经在班上一起嘻笑打闹的同学，后来渐渐变成在路上碰了面，点了头便擦身而过的普通朋友。在我住院以前，她们都会亲昵地直呼我的名字。然而，渐渐地，我在她们口中变成区隔彼此距离的『妳』。最后甚至疏远成互不相识的陌生人。看来，每当季节更替，我的存在也一点一滴地从她们的记忆中消失了「……看到我，好像会让她们觉得不太舒服吧。」——对于她们这些每天都得日复一日地过着正常生活的人们来说……所以……我就这么一点一滴地被她们从自己的记忆中抹去了——数年之后。我历经了几度住院、出院的日子，现在已经没有任何人再来探病了。我想，这也许就是我从所有曾经熟识之人的记忆中完全消失的时候吧。我们家从住惯了的独栋洋房搬入了一间公寓，母亲同时开始到邻近的一间便当店兼差。而这些改变究竟代表了什么样的意义，其实我在当时就已经发现到了——我的医疗费、住院费绝不是一笔小数目。事实上，钱是医院里头的病患每天茶余饭后的话题。在住院的过程中，我也渐渐知道，我们这些病患在意自己带给家人的负担，远远超过他们的想象。我们的新家是一间有点破旧的木造房屋。这里不但坪数小，距离父亲上班的地点也得花上两个小时的通勤时间。然而，距离我的医院步行却只要短短的三分钟。我们初次来到这间公寓的时候，父亲对着这间破旧而狭小的公寓说：『这里空气很好，住起来应该也很舒服吧。』他说话时脸上露出了笑容，而母亲也同样微笑着应和。也许是为了我的身体，父母在我房里装了一架空调。而这是我房里独有的，其它房间并没有同样的设备。自从母亲开始到便当店兼差以后，她常常会带着店里的可乐饼和炸薯条回来，说这是店里头卖剩的，然后面带笑容地跟我一起挤在狭窄的房间里头分着吃。——这对我来说……其实是一种非常沉重的负担……他们为了我的种种付出和体贴，对我来说只是一种煎熬。比起因他们为我而做的事情感到高兴和感谢，我更深深觉得自己实在太对不起他们了。『都是妳的错！』——也许……我其实非常渴望听到他们这么狠狠责备我一次吧……我希望他们能够多给我一些压力，因为他们的温柔会造成我的煎熬，甚至会让我对于自己的无能为力感到焦虑和愤怒。如果这个世界上真有神的存在，那么我希望祂早点把我的病给治好。又如果这其实只是一个遥不可及的奢求，那么我会希望自己早点离开这个世界。因为在别人逐渐将我从他们的记忆中抹去，让我觉得自己正缓缓地从这个世上消失的同时，父母的温柔却反而让我时时刻刻不断地意识到自己的存在，意识到自己带给他们的麻烦。这样的煎熬实在太令人难以承受了。我恨自己的无能，恨自己即便接受了别人温柔的对待，却连一丁点儿的回报都做不到。这个世上存在着许许多多的『不幸』，我诅咒着自己竟是受到这些『不幸』眷顾的其中一个。也许就是在这样的命运之中，我才更该展露笑容，表现出积极光明的一面。然而，残酷的是，我得面对的其实是我必须默默地将自己不怎么喜欢的炸薯条给一口一口地吃进肚子里去；残酷的是，父母亲好心为我装的空调，我却因为对他们感到愧疚，几乎不怎么开它。窗外飘着霏霏细雨。「打从我第一次住院开始，这已经是第几个飘雨的季节了呢……」我一个人站在窗边，遥望着漫步在上学途中的孩子们，他们转动着手中的雨伞，活泼地嬉闹着。此时的我已经度过了好几个不需要和人交谈的季节，好几个必须独自一个人面对的、白蒙蒙的梅雨季。恍然间，我拉开抽屉，看到里头的教科书和参考书。我望着其中一本英文课本。这本课本在我国中一年级的期中考过后，就和我房里的空调一样再也没有留下岁月的痕迹，几乎跟新买的一样。「我的……时间是不是也同样静止在那个时候，不再流动了呢？」序章200X年阿东优初夏。一滴汗水自我的脸庞滑落。汽车驾照考场旁的大型LED灯号显示器上亮出了信号多组不同的号码同时出现在那面灯号显示器上。我和其它参与考试的人们同样开始搜寻起了自己的号码「237、237……」灯号显示器不断闪烁着，约秀出了八成参与考试的人的号码。而我在这些号码之中总算是找到了自己的准考证号码。「太好了，阿东，你及格了耶！」一旁和我一同眺望着LED灯号显示器的朋友喜孜孜地唤了我一声。他姓望月，跟我算得上是相识有一阵子的老朋友了。「是啊，你也及格了呢。」我们高兴地为彼此考上了驾照而祝贺。话说，我是考了第一一次考上的，而他则是第三次。也因为这个缘故，让我闷在LED灯号显示器找到自己的准考证号是显得格外地高兴。吭隆吭隆——也许因为现在刚过了中午电车里头没有什么人。我们坐在驶离考场的空旷的电车车厢上，踏上了回家的旅程。我左手拿着刚拿到的交通守则，胸前的口袋里头则装着新核发的驾照，「这么一来，我们也有汽车驾照了呢……」虽然我口中吐出了低沉的声音如此呢喃，但其实这也不是什么多深刻的感慨就是了。「喂，阿东，你暑假打算怎么过？」「嗯？我还没有特别的计划耶……不过我想，我至少应该会去打工吧？」「这样的话，我们可以找一份薪水高一点的工作吧。毕竟我们已经拿到了汽车驾照，能够选择的工作地点也相对增加了不少呢。」「是啦，这么说也没错。」面对老友的说法，我答腔答得有些敷衍。如果这话说出来也许会让刚拿到驾照而显得有些得意忘形的望月觉得扫兴，不过我对于刚考到的驾照其实并没有这么兴奋。事实上，我并不是因为想要开车，或者其它原因而去考了这张驾照。而是周围的朋友都到了驾训班上课，在大家一人一句地吆喝之下，我才也跟着报名的。「啊??好希望能够早点拥有一部属于自己的汽车呀。有部车的话，连大黑都可以自己开车去了呢。」「大黑？那是什么？」「我说你呀，真的很没常识耶。大黑当然是指首都高的大黑休息站啦～～」听着他进一步解释，我仍不明白他说的大黑到底代表了什么。「有妹啦！※那里围观的群众有很多女生其实是为了被搭讪而去的呢！」(译注：日本首都髙速公路的大黑休息站时常有许多玩车的人聚集，也因此吸引许多爱车族围观。)「嗯??原来是这样啊……」这会儿我的反应也没有特别亢奋，不过他说的话在我心里激起的回响却和方才又有那么一点点不同。其实我对于大黑休息站聚集的女生并没有什么特别的遐想，我想我怎么说也算不上一个爱玩的人吧。不过话说回来，我终究也还是个正常的大学生，和其它人一样，都会为了一些个琐碎的小事情而吆喝着一群朋友到KTV彻夜欢唱，也会挤出所有的时间打工赚取自己的零用钱；我会为了自己每次考试前玩过头而感到后悔，也会想早点交到可爱的女朋友。因此我也曾经暗自希望有机会可以认识其它女生，不论是藉由什么样的契机。即便我们彼此都没将这件事情挂在嘴上，不过我想我们心里也都深知自己在两年过后即将离开学校，进入社会工作，因此想趁早尝试些除了学生时代不可能做到的事。「我说阿东，我们赶快来买辆车开出去玩吧？就是二手的也好嘛。」「好啊，不过前题是我们得找到时薪比较高的工作，也得早点把学分修完才行呢。「这哪有什么问题！反正我们这个暑假结束，你我都要一起晋升有车阶级！」听他说完，我们彼此对望了一眼，会心地笑了。行驶中摇晃不已的电车由于接近车站而开始减缓车速，同时广播即将进站的站名。我得在这里下车了。「那我明天先找一些打工的信息，然后再跟你联络。」他在车门关上前说道。而我则对他挥了挥手，用手势告诉他我收到了。「……这么一来，我也有驾照了呀……」我走在月台上，将手伸进了胸前的口袋里头取出今天刚领回来的驾照，同时喃喃自语着。我看着这张原本让我兴趣缺缺的驾照，心里也开始觉得有些高兴。我离开车站，走在回家的路上。嘈杂的蝉鸣宛如哗啦啦的骤雨淋在身上。不知不觉中，我心里也对望月的提议开始怀抱着期待。——这天晚上。这样啊——当我跟爸妈报告我考取驾照的事时，仅仅换得了他们这么一句简短的回话。当我半开玩笑式地开口跟我老爸借车，结果他的回答同样也非常简短——不行……其实我本来也就不是真的想跟他借车，他的回答也早在我的意料之中。我也活了二十年，知道人们或多或少都会以自我本位的方式思考，不过在我的认知里头，最具代表性的人就是我的父母亲了。——隔天。早上我在一股莫名的胸闷中清醒。我原以为自己得了感冒，于是喝了药之后休息了一下。然而，这种苦闷的感觉却在不知不觉中转成了痛觉。妹妹看了我原本也觉得我大概用不着躺在床上躺这么久，却在一个小时后回来看我时觉得情况不对，催我去了医院。我骑着我的小绵羊一路狂奔。大约五分钟后来到一间邻近的大型综合医院。这似乎是当地相当有名的一间基督教医院，不过我其实不太清楚。毕竟我很少生病，平时根本没有机会接触这方面的信息。也因为这个缘故，所以当我在填写初诊数据时的过程中，漫长的等待让我觉得非常无聊。就在我觉得看诊结束时，接下来竟是要去做X光和抽血捡验——或者说是被迫接受这些检查之后更是一段比起方才更为冗长，长得不得了的等待，让我只能没事闲着发呆我实在无聊到受不了，不自觉便在候诊视拿起了三本周刊杂志，读完之后正要去拿第四本，院方却在这时候找上我，要我去办住院手续。他们告诉我，我得接受手术治疗。详细说明之后，甚至还告诉我这个手术攸关我的性命——尽管说明的医师用的是委婉而体贴的口吻，内容却显得非常现实而残酷。嘟嘟嘟嘟嘟嘟嘟嘟——就在这时候，我口袋里的手机忽然响了起来。「嗨，阿东，关于打工的问题，我找到一份不错的工作了！」是望月打来的。「这份工作超棒的啦！是以前在那边做过的四年级学长介绍给我的，时薪高达一千五呢！晚班还有三成的加给，而且听说非常轻松……」他的声音听来颇为亢奋。然而，听他说话的我却显得异常平静，彷佛那根本不干我的事似的。「望月，不好意思，我好像没办法去打工了，你另外看看找谁陪你一起去吧。」我对着手机丢下这句话，旋即将电话挂断。我重重地叹了一口气，在候诊室里头找了张椅子坐了下来。(这……看来不是我在作梦了……)忽然来到医院，又唐突地听到医生告知我必须住院的消息，甚至还说这关乎到我的性命问题，我一时之间实在很难有切身的感受。于是我在这股非现实的氛围当中掏出手机，准备打电话跟家里的人联络，却在这时候不小心摸到了我放在胸前口袋里头没拿出来的驾照。「……看来这东西真正派上用场的时候得等上好一阵子了。这句话没有听众，变成了一句一个人的独白。秋天，十一月。喧嚣的蝉鸣消失了，翩翩落叶开始成为妆点在日常风景中的缀饰，而我，此时依旧还待在医院里头。事实上我不是从暑假开始就一直住院住到现在，而是重复着住院出院的手续，也在上个月第一次躺在医院的手术台上。自从那次出院后，我得骑着我的小绵羊每天往返这间距离我们家五分钟车程的基督教医院；之后也重复办理了几次住院出院的手续——我不知道确切的名称叫什么？好像是※PET还是※艾瑞莎，总之我后来就一直重复着这些疗程，不知不觉几个月的时间就这么溜走了。(译注：PET为断层扫瞄的英文缩写；艾瑞莎为一种抗癌药物。)我的食欲开始减少，医生开的药量却相对增加；就连我也明显感受到自己的体力下滑。我觉得自己的腿变细了。而当我站上磅秤时，它也明明白白地告诉我，这并非我的错觉。七、八月，就是我刚开始住院的时候，有许多朋友每天都会来医院看我，不过随着我几度出院后又再度住进医院，来探望我的人渐渐变少了，知道暑假结束，就再也没有人来了，像是望月，他起初也是常常过来报到，不过最近已经好一阵子没有看到人了。我最后一次跟望月说话的时候，他告诉我：「下个礼拜我买的车就要交车了，到时候我们一起出去玩吧！」然而，打从那次对话，到现在已经过了三个礼拜……(也许……他再也不会来看我了吧……)此时的我，脑中不禁浮现出这样的感想。而我也觉得，这个感想成真的机会非常高。即便如此，我对他倒是没有生气也没有埋怨。毕竟他盼了好久的车子终于到手了。不但每天得要打工，也还有学分要拿。其实他不像前几个月每天来我倒还觉得高兴，我希望他早点交个可爱的女友，不然他为我浪费了整个暑假，我可是相当自责的呢。说是这么说，不过我还是觉得有些落寞。我一直告诉自己这也是没办法的事，但心里仍有着一股自己被人抛弃的哀伤感，怎么也挥之不去。——冬天，十二月。这时候张灯结彩的耶诞树已经从街景中消失。快过年了，院方基于这个原因而让我暂时出院回家。虽说时间不长，不过可以出院我真的觉得挺高兴的。细雨夹杂着飞雪，我在湿淋淋的天候中回到好久不见的家。此时令人感到意外的是，家人。全都到齐了。在我生病之前，我和自己的父母其实很少说话。而现在虽然气氛显得有些不太自然，不过他们还是面带微笑地出来迎接。就连平时总是意见非常多的妹妹，今天也下厨准备了我喜欢的奶油炖饭跟炸虾等我回来。我们全家一起坐在电暧桌前剥着橘子。此时家里每个人脸上的表情都显得非常温柔，让我印象深刻。就在这时候，我的脑中忽然浮现了一个想法——我的驾照……那张打从我考到之后直到现在都一直放在我胸前口袋里的那张驾照，也许一次也没用上，它就要作废了也不一定。爸爸、妈妈，还有妹妹，他们在我回家时带着有点僵硬的笑容迎接我，表现出了冷静而有暧昧的虚假表情，让我觉得他们似乎根本就像是陌生人一样——新的一年到了，我再度回到医院。这天不知道为什么，院方并没有安排我直接回到四楼的病房。我到了一间像是谈话室一样的地方——或者说，我是被硬拉过来的。我在这间谈话室跟着父亲和医生三人持续了好一阵子的对话I虽说我其实是单方面的听着医师和父亲的谈话。若说得更明白一点，是医师有事情要跟我们报告。医师说话的方式迂回，不过话中的意思却不难听懂——我的病没救了……好像是这么回事他说我迟早会死。即使我现在看起来还很健康，不过这是因为我还年轻的关系。说我的病发病的情况会因为年纪越轻而愈缓慢。「这样啊……」我简单回了这么一句话I除了这么说，我也不知道该怎么响应了。打从我进入这间谈话室到出来，我也就只说了这么一句话。我从一种抽离的思绪中反视着自己，事不关己地想着好比电视剧中发生的事。面对这般忽然发生在自己身上的境遇，我的脑袋似乎还没能反应过来，完全没有一丝丝真实感。这其实是我切身的问题，然而，现在的我却只能用一种抽离式的、不带任何感情的观点去思考……医师得到了我的响应，开始提起了手中的原子笔在一张纸上书写着我想这大概是临终赡养院的住院手续吧……现在的我看待这件事情的态度仍像是在办理什么事务性的手续，而我的父亲也是一样。原来这一切都可以这么简单——这是我心里最直接的一个感想。这天，我从四楼移住到了七楼；从六人房换到了个人房。这层楼和其它楼层有那么一点点不同。首先，这边病床上的床单和被套干净得会发光；再来是这里的楼层高度比起其它楼层都来得高上许多，整间病房整理得既整齐又美观；一扇大片的玻璃窗映出了充足的日照，在设计上非常讲究。我想这间病房里的病床应该是新的吧？纯白的床单辉映着阳光显得非常耀眼。然而，让我觉得比较在意的是，房间里的窗户能打开的幅度非常小。我试了试，整个宽度大概只够我的头勉勉强强穿过去吧。除此之外，挂在我手上用来识别病患的手环，颜色也不一样了。手环是打从我住院以来就一直挂在手上的，是塑料制的。上面有个牌子写了我的名字和血型。而这个手环的颜色现在从蓝色变成了白色。……挑高的天花板、白色的塑料手环，再加上只能打开十五公分的窗子；在电视台开始播放着无聊的新春特别节目时，我从医院四楼移住到了病房景致和其它楼层截然不同的七楼。而我和她之间的邂逅，也是在这个新的年头来到之后不久。第一章7F过了护士站的走廊边有一间类似谈话室一样的地方。在这个没有人活动而显得寂寥的谈话室中有几张沙发、铁制的折凳，还有一台尺寸满大的电视。谈话室中的二十八吋映像管电视里头今天也同样播放着没什么特别的新春特别节目，而这般无聊的特别节目前方有一名女性观众。我从背后看不见她的长相，不过她的背影看来十分幼小；比起『女性』这样的字眼，也许更适合用『女孩』来称呼她吧。(……是国中生吗？还是小学生呢？)她身上穿着一件粉红色的睡衣，娇小的身子流露出一股稚嫩的气息。那一头及腰的长头发让我觉得印象深刻。凭着一股莫名的念头，而不是什么特别的意图，我走上前，打算叫唤这名女孩。就在看到那张侧脸时，我忍不住楞了一下。——她……长得非常可爱——不，也许比起可爱，我更该用美丽，或者楚楚可怜来加以形容。她的容貌看来确实跟介于小学与国中之间的女生无异，不过她美丽的模样却散发出一股独特鲜明的存在感。我并非什么恋童癖，也没有异于常人的癖好，然而，我想她的美貌即便是一般人走在路上和她擦身而过，百分之百每个人都会惊艳地回过头去看她才对。就在这时候，我的脑中不知为何竟浮现出了几个月没见的挚友?望月的脸庞。我想他现在应该已经交到女朋友了吧？没有任何下流的想法，我在走进这间谈话室的瞬间，胸口忽然涌现了一股莫名的悸动。我在想着，像这样的一个小女孩，她的身上究竟有什么东西可以让她焕发出这种光彩呢……我边想边望着她的面容，一个不小心就望出了神。我看着她，心里正焦急地想挤出什么能让我顺利和她攀谈的字句，却在这时候注意到了她手上的塑料手环。(那是……白色的……跟我一样的手环。)换句话说，她也是住在这个临终疗养病房的病人了。就在我发现这点的同时，我胸中的那股悸动忽然一下子沉了下来；方才那般亟欲和她攀谈而找不出适切的词汇时的焦躁感也同时消失。我不知道究竟是什么原因让我出现这般心理上的极大落差，不过真要说的话，也许是她跟我一样，通往未来的门扉都被堵住了。而我察觉到了这般残酷的现实，才让我有这样的心情反应吧。「哈啰，妳觉得这个节目有趣吗？」此时我的内心已经不再充斥着方才那般澎湃的冲动，和找不出适切词语的焦虑，而是如同面对一个普通的小女生一半开口说话。「没有……」面对我的问话，她只是简简单单地答了一句。比起我内心缓和下来的冲动，她的答话更显得冷淡许多。即便我出声唤她，她也没有回头，而是一脸无趣地始终盯着眼前的电视屏幕。(……真这么无聊，那妳还看它干嘛？)我一边这么想，一边在谈话室里的铁制折凳上坐了下来，同时跟着她一起看起了电视。除此之外，我也没其它事情可做；或者说，我什么也不能做。屏幕中映出的是一月初总会制作的新春特别节目；不是些无聊的模仿秀，就是一些即兴表演。除此之外，还有节目中的主持人笑得像个笨蛋一样的声音，偶尔会孤独地回荡在这个日照充足的白色房间。「你呀……是第几次来这里的？」忽然间，她开口了。即便她的目光仍旧直视着电视屏幕，不过这话是对着我说的。「什么第几次来这里？」「就是七楼啰。」「抱歉，我还是听不懂你的意思。」「………………是第一次呀……」我想我没有回答她的问题，不过她倒是径自为我下了定义。「这样的话……这里也没有其它人了，就由我来负责吧。」「……负责？」「嗯，这边的规定就是这样……」她点点头，然后为我说明，这边的不成文规定就是有人得为初次来到这个七楼病房的人说明这边的事情。不过……为什么会有这样的不成文规定呢？她带着和缓的语调张开了口：「那你仔细听好啰……」我听她娓娓道来，这其中有许多部分跟我从医生那儿听来的有些不同。根据医生所述，这层病房是院方提供病患等待医疗技术进步时休憩的场所，还说这里是为病患们抚慰心灵的场所。我想，对一般人而言，这样的说法应该是没有错吧？然而，在我身边的这个女孩却说，这只是这间临终疗养病房成立的宗旨，但事实上并非如此。她说，这层七楼病房是这间医院里头唯一没有进行医疗行为的地方。换句话说，这里纯粹只是让病患安静地等待死亡的地方。其实我也这么想。她和我对于这层病房存在的意义有着同样的看法。「我是第二次了……」她说。「什么第二次？」「……第二次来到这里。」接着，她又继续解说。而我从她的口中得知，这层七楼病房似乎不是进来之后就一定会直待到死亡。住进这里的病患，虽说得到的病症无法进行治疗，不过若身体状况稍有好转，院方就会允准返家休养。然而，一旦再度恶化，那么原本住在这里的病患就得再次回到这里。换句话说，住进了这层七楼病房，不是死在这里，就是还来不及回来便死在家里；就这么两种结局，似乎还没有任何人幸免。而她，则是第二次再住进来了。「还有，我只说一次……接下来你要仔细地听……」……她看着无聊的电视节目，接着再继续把她该说的话给说完。而话中所说的，并非一般院方说给病人听的熄灯时间等等病房中的规则，而是这层病房内的定理……『如果你第三次被院方通知可以出院，那你就得做好心理准备了。因为绝不会有第四次……第三次出院再住进来以后，你就再也回不了家了。』『如果你想逃走，不要选择A车站，而是该往B车站去。』『你若想结束这一切，那么绝食是最快的方法，也是带给家人负担最小的方法。』诸如此类的内容听在我的耳中，好比是她被人强行灌输到了她脑子里的条文。而这些条文，恐怕是只有在住进这间七楼病房里的病患——在这些将死的人之间口耳相传的。「……妳刚刚说妳要负责的，该不会就是这件事吧？」「嗯，是啊……有一天你也得将这些事情告诉下一个第一次来到这里的人……」她将这最后一句话说完之后便起身朝我走了过来。就在她和我擦身而过的同时，那一头飘逸的长发晃过了我的眼前。「那我得去量体温，先失陪了……」说完她头也不回地将我一个人丢在这间谈话室里头，独自朝着走廊那头离去。此时我的周围只剩下旧型映像管电视喇叭里头传来的艺人笑声，和窗边摆放的白色花朵。结果，从我和她碰头到她最后离开，她一次也没有将目光放在我身上。——一月八日。新春特别节目的时间终于告一段落，而国中和高中的第三学期也差不多要开学了。这天，那女孩的身影依旧出现在护士站那头的谈话室中，发着呆似地将视线紧紧扣在电视机上。「真无聊……」「是呀……」这是我俩之间的对话，然而彼此的视线却都没有移开电视屏幕。「喂，这边的生活永远都是这样吗？」我问。「……你想说什么？」「没有啦，我只是想问，这边是不是一直都这么冷清？」这层七楼病房里头，除了我跟这女孩；医生、护士，还有偶尔可以看见的神父和看护人员之外，就再也没有其它人进来过了。「是不是因为过年的关系呢？」我问。「……你想知道原因吗？」「啊、那个……我没有特别想知道什么……」「那我就不说了。」这般若有似无的对话形式就在我们冷淡的反应中进行着。只能敞开十五公分宽的窗子外头送进了些许微风，时而撩起了她的长发和窗边的白色花朵。我和她，坐在这间谈话室里看着无聊的电视消磨时间。……话说，这层七楼病房真的很少看到其它人影。其中稍微年轻一点的病人就只有我跟她两个人而已，剩下的顶多就是几个坐着轮椅的老人家偶尔出来晃晃了。因此，我们两人一起坐在这间谈话室里茫然地看着电视的时间就相对占了相当大的比例。「喂，妳呀……」我问。「……什么事？」「嗳，算了，不问了。」其实我也真的没什么话想问，于是在她回答了以后又噤住了口。这个小女生基本上不管对我开口说什么都不会把视线放在我身上。即便偶有例外，她看我的眼神也都带着愠怒般的严肃表情。而她瞪人的模样，在她端丽的五官造成的对比之下总也会散发出一股慑人的魄力。事实上，就连她说话时的语气用的也都是面对比起自己年纪小的人那般不拘小节的态度，种种行为表现都让我觉得这小鬼实在令人有些费解。「唉呀，你们两个人都待在这里呀？」一名上了年纪的护士边说边走进了这间谈话室。我偶尔会瞟一眼护士站里的情况，猜想她大概是七楼病房的护士长吧。「濑津美，怎么样，身体还好吗？有没有发烧？」「……还好，我没有发烧。」濑津美……看来这就是这个小女生的名字了。「妳可不能再没事乱跑出去啰！」「………………」「妳要听话哦！不然大家都会很担心的！」「……有什么关系嘛。」「妳怎么可以这么说呢！最近的小孩怎么都这么难教呀！」这名护士叫出这句话之后，接着又对着那个叫做濑津美的女孩叨叨念了几句，而她——濑津美则是一副不以为意的样子丝毫不予理会，不顾这个罗嗦的护士继续说些什么，自顾自地看着无聊的电视节目。「好啦，那我们待会儿会过来帮妳做抽血检查哦。」上了年纪的护士丢下这句话后，转身离开谈话室，回到护士站去。「我说妳呀……啊，不对嗯……我叫妳濑津美可以吧？」我看了看套在她手上的白色手环，确认了牌子上写的血型跟名字之后开口叫了她的名字。「………………」「是发生了什么事吗，濑津美？」「……谁准你直接叫我的名字的？」「啊？」「你年纪比我小吧……」「我、这……为什么妳觉得我年纪比妳小？」「没有啊，我猜的。」我倒不是因为有人觉得我年纪小而生气。虽然我确实有张娃娃脸，不过我想我的年纪怎么看也比她来得大。少则大她个五、六岁，甚至十岁也有可能。因此，我将收在我胸前口袋里的驾照掏出来亮在她的面前说道：「你看，我虽然看起来年纪小，不过我可是已经二十一岁了哦！」「………………果然。」她瞥了一眼我的驾照，然后不屑地吐出了简短的结论。「喂，妳在说什么呀？」「我是比你大个几岁呀，怎么了吗？」她答话时依旧没有任何表情。而那双眼睛，目光虽然紧紧扣在电视机上，但看来却好似望着视线深处某个不知名的地方。——数天后。我做完了早晨的体温记录，一个人走在通往一楼附设餐厅的路上。我已经几个月没有来这间医院的附设餐厅了。这是一间非常宽阔的附设餐厅，里头供客人用餐的餐桌大约有两、三百张。这天医院似乎没开放门诊，整间餐厅显得空荡荡的。之前我固定时间往返医院，还有住在四楼病房的时候，我都会来这边吃饭。但自从我住进了七楼病房，这还是我头一次再到这边用餐。是咖啡好呢？还是冰淇淋好呢……我站在入口处的餐券贩卖机前犹豫着不知道该点些什么东西。至于让我犹豫的原因不全然是这两样餐点的售价，而是这两样餐点之前都在医生的禁止项目之中，不过在我住进七楼病房以后，这些禁令都解除了医生说，只要没有暴饮暴食，或者是吃些过于刺激性的食物，吃的方面已经没有其它限制。「——这该不会，也是因为我已经是七楼病房的病患吧……」我大口大口地吃着附设餐厅里面提供的冰品一边嘟哝着。现在在我手上是已经隔了半年没有吃到的香草冰淇淋。与其说它好吃，倒不如说是有种令人怀念的味道。吃完冰淇淋之后我离开餐厅，来到中央电梯附近。就在这时候，我看到了站在医院大门内侧望着门外的那个女孩——濑津美。我想她大概是刚从医院外头回来吧。至于她有没有得到院方的外出许可？我想应该是没有。濑津美之前才因为恣意离开医院而被护士责骂，我猜她八成已经成了惯犯了。(……她该不会，其实是想逃离这间医院吧……)我脑中浮现这个可能性的同时，打消了一度想要出声叫住她的念头。我看了看手表。十点半。「……距离午餐时间还有一个小时以上呢。」我嘟哝着走向医院大门，小心翼翼地不让护士或医生发现，偷偷地溜出了门外。出了医院大门的瞬间，冬天一股冷飕飕的寒风彷佛针锥一般剌进了我的皮肉之中。这般冰冷的气息，让我在仅仅十秒钟内就为了自己只穿着一件薄薄的睡衣便溜出医院这件事感到后悔o我缩着身子，在寒风中颤抖着朝向目的地前进——而这个地方就是在我刚住进七楼病房时听到的，B车站。——住进七楼病房的病患，若不是死在七楼病房……就是死在自己家里……没有一个人例外……然而，如果想逃的话，依照那些条文，目的地不应该订在A车站，而是B车站。而她，濑津美恐怕已经去过这个B车站好几次了。「……该不会其实她是想搭电车离开，可是却被什么人发现了吧？」即便我的脑中浮现出了这样的疑问，不过我们身边应该没有什么监视人员才对。然而，就在我这么想的时候，我也意识到了，我们七楼病房的病患跟其它楼层的病患其实完全不能相提并论。我不知道这件事情是真是假，不过七楼病房好像曾经出现过这么一个令人觉得困扰的患者。他擅自离开了医院，总是让医院里的医生们为他相当担心。而我听说他在生命来到尾声时逃离这间医院的方式不是搭乘电车，是由朋友驾着车带他逃走的。该不会真有监视人员……我边想边走在清晨通往车站的路上。我歩行一会儿，约二十五分钟后来到了车站前；换算成公交车车程，大约四个站牌的距离。「……这边人还真多。」由于我穿着睡衣站在车站李都还是引来了不少狐疑的眼神，但这倒不至于构成什么问题。——想逃离医院的话，就要往B车站逃……看来这些条文内容果然不假；只要我买了车票，大概想去哪里都可以到得了吧。「……那为什么她没有逃走呢？」如果她真想要逃走，其实应该是轻而易举才对……我站在早晨的车站前，看着快歩往来通行的人群。一会儿之后我才又转身往医院走了回去。当晚，病房的熄灯时间刚过不久。我看腻了手边的漫画，却也睡不着觉，于是一个人在医院里头晃着。一般来说，医院熄灯之后若还有病人在病房外头乱晃是会被护士念的，不过我们七楼病房的病患在这方面则相对地自由许多。走廊上的灯光转暗，就在我经过一片漆黑的谈话室时，那女孩的身影又出现在里头。「嗨……我看到妳今天站在一楼望着门外呀？」「……嗯。」一片漆黑的谈话室内，濑津美回了话，视线却始终放在窗子外头。我面对她，打算开口告诉她今天发生的事。「话说……我今天早上去了一趟车站。」「……是哦。」「我依照妳告诉我的条文，到了B车站去。」「……然后呢？」「嗯，也没有然后啦……」她的反应和平常没什么两样；从没把头撇到我的方向，回话的方式也始终是以冷淡的语气吐出简短的字句。我原以为想要逃离这间医院的她，听到我说的话之后会有什么不同的反应。在我实际尝试过后，知道要逃离这间医院其实相当简单。而从这点来看，是不是她根本没有想要逃跑的打算呢……「……我再过几天，就要回去了。」「咦？」她忽然开口，吐出的话似乎是针对我的期望而说的。「不过这是第二次了……所以我们也许不会再见面了也不一定……」「嗯……是、是哦……」我想她所说的『回去』应该是院方允准她出院回家疗养了吧。这层七楼病房，似乎还没有人经历第三次住院之后又还活着出院的。特别是住在这边的高龄患者，他们病情恶化的速度远比我们这些年轻人来的快，因此，第二度住院又出院的情况就更不可能发生在他们身上了。此时的我和濑津美，因为身体看来还是健康，因此还没有坐着轮椅移动的必要。不做这是因为我们还年轻，病情恶化的速度相对于我们的年纪没那么快的关系。……然而，像我们这个年纪的病患，病情一旦开始恶化就会一口气演变成非常严重的结果。因此，非常讽刺地，所有看来年轻而健康的病患待在这层七楼病房里头的时间其实非常短暂。也因为这个缘故，像我们这些年轻的七楼病患，在几次出院住院过程中，活着重逢的机会也相对非常有限。所以，方才她那句话中所代表的意涵，其实是一种永别。「我说……你呢？是你的话你会怎么选择？」「选择？」「……我是问，你会想死在哪里。」「…………」忽然听到『死亡』这个词汇，让我的意识忽然呈现一片茫然，不知道该如何是好。「这……我不知道耶。我还没想过。」「……这样啊……毕竟你还是第一次进来嘛。」她的言语中，喃喃道出了一种落寞的心绪。其实，这个议题一点也不唐突，因为我也不可能永远住在这里。我的未来就像其它的七楼病患一样，在反复地出院、住院的过程中身体逐渐衰弱，然后不是死在这层七楼病房，就是在家人虚假的笑容包围中永远阖上我的眼睛。「我……讨厌我的家……可是我也讨厌这里……」她说。「……那妳要怎么办呢？」「……能怎么办？我想我会在我还可以走路的情况下远远离开这两个地方吧。」「远远离开这两个地方……妳……」她说她既不喜欢自己的家，也不喜欢这层七楼病房。然而，她明明可以逃走，现在却依然留在这里……我觉得这两者根本上相互矛盾，于是开口问道：「那妳有其它可以去的地方吗？」「…………」|她沉默了一会儿。「……你不打算阻止我吗？」「咦……」「还是……你想跟我一起走呢？」「啊、那个……我没这个意思……」「那……你就别再问我这个问题了吧。」她看着窗外，带着冷淡的语气脱口出最后这一句话。会话过程中她依然依旧从没将自己的视线放在我身上。我在初次来到这里时被告知第三次出院即是我们七楼病患的生命终点；而眼前的她即将迎接第二次出院返家疗养的既定安排……现在的我，对于现实还无法产生切身的体认。因此她口中所说的这一切，对我来说仍旧好比电视屏幕中晃过的某一段故事情节。然而……是不是有一天，我的脸上也会浮现出和她一样的表情呢……——数天后。这天，天亮前便下起了雨。在偶尔也飘着雪的天候中，只有细雨连绵不绝地下着。而我，则是同样待在那个固定的地方茫然地望着电视屏幕。今天的七楼，依旧没什么人在病房外头闲晃。「……这个节目有趣吗？」「很无聊……」她从外头走来，丢了一个问题给我。得到答案之后，她便没有继续开口，默默地找了张铁制折凳坐了下来。于是，我们便一如往常地一起坐在谈话室中，看着无聊的电视。……我想她大概也跟我一样，没有其它事好做——或者说，我们根本什么事也不能做。「啊……」此时，她稀奇地对着电视中的一幕起了反应。「怎么了吗？」「……没有o」没有——她这句话尽管答得和平常一样，表现出来的反应却有着微妙的不同。这样的改变也让我觉得意外，于是跟着把注意力一起放到了电视机上头。画面中映出了一处不知名的山林景观。那里有着茂密的树林和繁盛的野花，看起来非常漂亮。这其中，满山遍野的白色花朵让人觉得印象深刻。——这花我认得。在这片自然景观中的白色花朵，外观和现在我们身边窗台上花瓶中插的花朵非常相似。「……该不会……这些花跟那朵花瓶里的花其实是同一种花吧？」「…………」「妳看，长得很像耶？」我边说边伸手指着电视机里的画面，和窗边瓶子里的白花。「……不对啦。」「咦？不对吗？」「这两种话是同属没错……不过真正要说的话其实不是同一种……」她瞟了一眼窗边瓶子里的花朵，然后又转头正对着电视机开口说道。而我听到她的否定后，却怎么也无法区别两者之间的差异。对我来说，这两种花究竟一不一样其实都没有差别。相对的，倒是平时绝不会对我提出的话题感兴趣的她，此时表现出来的态度让我觉得更在意一些。她的外表真的长得非常可爱，然而平时总是表现出一种对于眼前发生的一切完全不以为意的空洞眼神，却在这时候对我说的话有了稍微深入的回应。「我说妳，该不会对于这些花花草草的东西很清楚吧？」「……没有啊。」「是吗？可是我怎么也看不出这两者到底有什么差别呢。」我茫然地来回望了望电视机映像管中映出的白花，和绽放在她那张侧脸延伸处的花朵，接着又问：「喂，这是兰花还是百合吗？」「…………」「妳看，这些花都是白色的嘛？」「…………」事实上我对于这些花真的压根儿没有兴趣，但还是随口丢出了几句话继续试探她的反应。然而，此时的她却旋即又拾回了平时那般不理人的态度，一言不发地将视线移回到了无聊的电视机上头。眼看这段对话过程应该就此结束，就在我不抱任何期待地打算再回头看我的电视时——「……水仙花。」「嗯？」「水仙花啦……」她开口的同时，初次将视线移到了我的身上；转头的瞬间也带起了一头及腰的长发画出一道波浪，伸手指着电视机屏幕地直视着我。这时我才察觉，她一身白皙的肌肤和手腕上的白色手环，白得几乎跟电视机中的花丛呈现出同样的颜色。而初次正对着我的那张脸，似乎勾起了一抹若有似无的微笑。——数天过去，冬天最严寒的时刻到来。就在这个外头有许多学生们都在准备迎接升学考试的季节里，我们仍旧待在护士站那头的谈话室中，无聊地看着电视。「真无聊……」我说。「……是呀。」在这般称不上交谈的对话里，我们依旧做着无谓的事情消磨多余的时间。「话说……妳什么时候离开？」「……今天。」「哦，是今天呀。」所谓的离开是指日前她跟我提到的，院方允准她出院的事。「我们……也许不会再见面了也不一定呢。」她说。「嗯？嗯是吗……|事实上，依照惯例，就算她能够再活着回到这层七楼病房，也只剩下那么一次的机会。而到那时候，我大概不是在家就是同样也还在这层七楼病房。但我想我们在这里碰面的机会也许并不是那么地高了。「……你呢？你决定了吗？」「妳说……要死在哪里的问题吗？」「嗯。」「不，我还没有决定。」「……哦。」她带着些许落寞的神情点点头。我想，这不知道是不是第一一次出院的人才有的反应？毕竟死亡这种事对我来说还没有切身的体认，而第一次出院返家调养的许可，医生也还只字未提。……话说，不知道她对于这个问题的答案，是不是已经有了确切的决定了？我记得她好像曾经说过，她既讨厌家里，也讨厌医院……「濑津美，东西准备好啰。」说话的是忽然出现在这间谈话室里的一名年长女性，我想这位大概就是濑津美的母亲吧。她有着一头长发，身上穿着一件时髦的外套，外表看来与其说是一位母亲，倒不如说她更像一位年长的姊姊。「那我们该走了，妳准备好了吗？」她说。「……嗯。」「那我们先走了。」这位阿姨对着坐在一旁的我礼貌性地点了点头，牵起自己女儿的手，打算带她离开这间谈话室。然而……「……」濑津美似乎压根儿没有离开的打算。母亲牵起了她的手，她却不知道为什么，仍坐在椅子上，一动也不肯动。「怎么了吗，濑津美？」「我觉得……有点难过……」「咦？难过？哪里难过？胸口吗？还是肚子？」「……胸口。」「这——妳等一下！我马上叫医生过来！」这位阿姨慌慌张张地踩着访客用的拖鞋，赶紧往护士站跑了过去。在她离开之后，这里剩下来的就只有低头坐在椅子上的濑津美和我两个人而已了。「妳没事吧？」我小小声地对着她开口问道。但事实上我对她得的究竟是什么病，而病情已经发展到什么样的程度都完全不了解。面对她，我所知道的只有挂在她手腕上的白色手环上写的名字，濑津美，和她的血型，0型。不过话说回来，我和她同样的是这层七楼病房的病患，因此我想她的病情严重程度，至少是在我之上才对。「我说妳呀，在医生赶过来以前要不要先在这边稍微躺一下？」我伸手指着一旁的长椅——在我刚住进这层七楼病房时，它就已经放置在这间谈话室的角落了——对着她开口说道。「如果妳需要的话，我可以扶妳一下。」「不需要……我没事。」她说完便径自站起了身子。「咦？啊、嗯？妳……」妳别逞强呀……就在我这句话想说却还没来得及说出口的时候，她已经走出了这个房间。「……怎么回事呀她？」——这天晚上，熄灯时间已过。我像平常一样看腻了手边的漫画书，因为睡不着而在医院里头闲晃。而就在我走到熄灯之后一片漆黑的谈话室时，在里头又看到了她的身影。「嗨，妳还留在这里呀？」「……嗯。」「为什么呢？病情又恶化了吗？」「……没有」她没有回头，一双眼睛自始至终望着窗外地吐出了这般简短的回答。即便她没有直接提及，不过我想院方开给她的出院许可应该是撤销掉了。至于下一次的出院许可会是什么时候下来，我当然无从得知。不过我想，这个等待期至少会以『周』为单位，而不是以『日』为单位吧。「那个……我在想，妳今天说妳身体不好……该不会是装的吧？」想想这种说法也许本身就有问题，因为我们本来就身体不好，根本不能说是装出来的。「换句话说……妳其实不想出院返家疗养是吗？」「……我不知道你在说什么。」「毕竟妳已经没有时间了……」「…………」她没有回话。之前她曾经好几次问过我同样的问题——你想死在家里还是这里……我说我没有决定，而她则是说她讨厌自己的家，也不喜欢这层七楼病房。「我看妳……就算真的想离开这里，也不想回家，但其实妳也没有其它地方可去吧？」「……就算真是如此……那又怎么样呢？」「没有啊……」一样的谈话室；她一样从头到尾没将视线移到我的身上。濑津美在这个一片漆黑的小房间中，茫然地一个人望着窗外的景致。现在不过才晚上十一点，不过这间医院已经将大部分的照明全都关掉了。这里是日常和非日常的交界。对于我们这些七楼病房的病患来说，除了这里和自己家，我们已经哪儿也不能去了。而她从一片昏暗的七楼病房望向窗外，望着所谓的日常；那个世界中的大楼和住家仍旧灯火通明，急着返家的人赶路的身影也随处可见。然而我，即便仍没有深刻的体认，不过已经是这层七楼病房的居民；现在的我已经跨入了这个非日常的世界，再也回不去了。——数日后。这天早上我量完了体温，再次来到了医院的附设餐厅。我之前来到这里的时候还一片空荡荡的，不过今天似乎是有一堆前来内科挂号看诊的人，早已经将餐厅挤得满满的。我在餐券的自动贩卖机前稍微思索了一下之后选了咖啡。这张咖啡餐劵要买一百圆。我拿着它来到柜台换了咖啡之后，找了张空桌子坐了下来。「好烫……」我将这杯刚冲好的咖啡贴到嘴边餟了两口，接着再将松饼切块放入口中。这边的餐点味道不说，价钱便宜倒是它的一大特色。甚至我吃的松饼根本是免费放在餐厅入口任凭顾客自取，不收钱的。我想医院附设餐厅大概都不是以营利为目的的吧……就在我不着边际地思索着的同时，忽然有一个声音叫住了我。「午安。」是濑津美的母亲。她看着我，对我点了点头。而站在她身边的则是一贯穿着那一套粉红色睡衣，双手捧着托盘的濑津美。「啊、呃……午安……」我也对着濑津美的母亲点头回应，我们日前才见过面。「不好意思，我们可以坐这边吗？」「啊、嗯，当然，请坐……」此时餐厅里的餐桌几乎都坐满了。我答话的同时，也将自己端来的托盘拉到自己面前，空出另一半桌子让给她们放她们点的东西。「濑津美，我们坐吧。」伯母说。「……嗯。」对此，她的女儿倒是表现出了些许不快的模样，应了一声之后还是乖乖坐下。她坐在我的对面，短暂地正眼和我对上之后又旋即别开了视线。「…………」我们之间没有交谈，不过她仍旧和平时一样丝毫不打算将目光放在我的身上。然而，这对于平时只看得见那一张侧脸的我来说，却也有种非常奇妙的感受……不，我想不单单只是因为和她面对面的关系，而是平时的她绝不会散发出一种生活的气息。尽管本人曾说她的年纪比我长上几岁，不过那张稚嫩的脸庞和可爱的容貌——或者更应该用『美丽』来加以形容——总给人一种非现实的观感。因此，这天和她在这里碰面——而且还跟她的母亲一起真的有种非常新鲜的感受。「那我们开始用餐吧，濑津美？」伯母从她手中提的袋子里取出了一个小小的篮子，篮子打开之后可以看见里头装着薯条、炸鸡，还有一些色拉等等菜肴。「如果你不介意的话要不要来一点呢？」伯母开口的同时，也将她手中的小篮子提到了我的前面。「啊、谢谢……」其实我并不饿，不过我还是伸手拿了一块可乐饼。虽然温度已经不够了，不过这块可乐饼爽脆的的面衣和有点咸咸的味道还是相当美味。「濑津美，妳呢？妳要吃什么？」「……薯条。」她说完也从篮子里拿了一块炸薯条，一口一口往嘴里送。这副模样出乎意料地可爱，让我不自觉地整个人看呆了。——这家伙，在自己的妈妈面前倒是意外地坦率嘛……我一边想着，一边伸手欲拿第二块可乐饼。而就在这时候……「那妈妈的工作时间到了，我要先走啰。」「……嗯，好。」「那我傍晚会再过来看妳。」伯母和濑津美一人一句道别了之后，伯母对着我点了点头，接着便转身走向餐厅入口处。她离开时留下了一只装着饮料的纸杯、一个才刚掀开盖子的食物篮子，还有默默地吃着薯条的濑津美。「…………」我看着她。虽然这时候并不是找不到话题可以聊，不过我却觉得现在要开口说些什么并不是一件容易的事。濑津美长得真的很漂亮，很可爱。不过即便她再怎么可爱，身上始终也都散发出一股神秘的气质。她曾说自己比我年长，我想她应该没有说谎才对。然而，现在看她忙着吃炸薯条的模样，却怎么看也都只是个孩子……就在我思考着这个问题的同时，一个不小心，我的注意力就全放在她的身上，望着那张可爱的脸和一口一口吃着薯条的模样。「……怎么了吗？」「咦……」「……没事就不要那样一直盯着我看。」「啊、嗯……对不起。」听到她的不满，我这才发现自己竟然望着她望出了神。这让我觉得有些不好意思，于是随口丢出了一个话题：「我说，妳喜欢马铃薯吗？」这句话没有特别的意涵，纯粹只是因为她从头到尾都只挑薯条吃，于是直觉式地这么问罢了。「…………」然而，面对这个琐碎的问题，她并没有实时回答。一会儿之后，我见她的嘴唇张开，原以为她会像往常一样简短地回我一句：没有啊……然而——「……嗯，喜欢。」她的话回得同样简短，不过回话的方式却显得相当肯定。而且，她更是稀奇地在回话的同时提起了自己的眼睛，将一双视线紧紧扣在我的脸上。第二章二十二年『……我的时间停止了。』几次不同的季节更替；白蒙蒙的梅雨也几度盘据了整片天空，然后消失；我在这里，日复一日地过着不需要和任何人交谈的生活……起初我会待在窗边，远眺着学生们带着活泼的模样上学。然而不久之后，我看腻了。接着一双眼睛便永远都只对着电视屏幕。我没有其它事情可做——事实上，我什么也不能做。窗外虽然下着雪，但电视机里头映出的风景却永远都是晴天。那里没有严寒的冬天，没有炎热的酷暑，没有身体的疼痛……映出的永远都是一片像梦样的景致。……我为了祈求虚假的安逸，因而在电视中摄取了庞大的知识量，在无谓的价值观不断增加的过程中，就连电视里头映出的一切也都失去了真实感。渐渐地，书本也是；游戏也是；甚至连我的家人对我来说也同样变得虚幻……如今我无法憎恨他们，诅咒他们，甚至连向他们祈愿的能力也没有了。现在的我就连看待病弱的自己，用的也是不痛不痒的旁观者的眼神。我无法再用现实的、切身的角度看待包含我自己在内的一切事物。因此，对于自己被送进了这层七楼病房时，我一点也不觉惊讶。因为，只要我闭上眼睛，整个世界随时都有可能消失。因此，我对于周遭发生的任何事情都已经不以为意——或者说是我让自己变成这样的。紧接着第二次出院核可就要下来了。而我下次再回到这里的时候，也许已经无法自己一个人走路了也不一定……我深明这样的结果，却丝毫不对这样的命运做出任何反抗。我觉得这样的自己实在非常窝囊；对于自己面对这样的命运，却连一个临终时想去的地方都没有而感到滑稽。「时间停止了；思考停止了；我的胸口划开一道巨大的伤痕……」「然而，这样的我竟还活到了二十二岁……我真是太可怜了……」——数日后一月十九日这天熄灯的时问已过，大约已经是半夜了。我睡不着，于是我像是往常一样在七楼病房的走廊上闲晃。我在护士站跟护士要了一些碎冰块放进了纸杯里头，想找个地方喝一点饮料而继续在这层楼的走廊上走着，忽然间，我留意到了这个时间的谈话室依旧没有熄灯。——是哪个病患的家属来探病还没有回去吗……这层七楼病房和其它楼层不同，只要家属或朋友要来探病，它是二十四小时全天候对外开放的。而过去也有许多病危的病患家属彻夜守候在这间谈话室。对于远道而来的家人或朋友而言，这里是他们和自己的亲友生离死别的场所……我忆起了这间谈话室存在的意义，同时也慢慢地走了进去。「晚安。」我对着坐在沙发上的访客点了点头，然后坐到她身旁的折椅上。这人不是别人，就是这几天已经见过几次面的濑津美的母亲。「伯母，今天很冷哦？」「是啊，听说明天还会下雪呢。」我们礼貌性地交换了几句话，接着便没再找什么共通的话题，彼此默默地坐在自己的位子上。事实上，我们之间不是没有任何共通的话题，想说的话很多，只是我们没办法说，也不知道该怎么说。住在我们这层病房的病患和其它病房的病患不同，尽管我们常常见面，也几乎不会有什么交流。我想这是因为这层病房是七楼病房的关系。一阵沉默笼罩在我和濑津美的母亲之间，一会儿之后，我觉得我差不多该回自己的病房去了。就在这时候……「那个……如果你不介意的话，要不要再来一个呢？」伯母开口说话的同时递出了一个和上次在餐厅遇见时一模一样的小篮子。她打开盖子，里头装满了可乐饼等等油炸类食物，还有一些色拉。「虽然不是什么豪华的菜肴，不过勉强可以充当宵夜吧。」「啊，谢谢……」我答了礼之后顺应着伯母的好意，用她递给我的筷子挟了一块可乐饼。其实我平时已经不太有食欲了，但今天的食欲特别差。只是我生性受了别人的邀请时都不太懂得拒绝。我吃了一个蔬菜可乐饼之后也伸出筷子再挟了一块炸薯条。老实说，今天的可乐饼和炸薯条都不太好吃——事实上，先不论好不好吃，这些东西根本就冷掉了。「是不是不好吃？」「啊？呃，不会啦。没这回事」我答话的同时又再伸出筷子挟了一块可乐饼。伯母坐在我的身边默默地看着我。沉默中的食物实在让人食不下咽，我终于忍不住开口：「出院返家调养的时间……已经决定好了吗……」这话问的当然不是我的事，而是濑津美的事。「嗯，医生说下个礼拜就可以出院了。」「这样啊……」这真是太好了——这句话在这里是不能说的，因为这层病房和其它病房不同。对于七楼病房的病患而言，院方宣告出院回家调养的次数，形同于死亡的倒数计时。「阿东……你住进这里很久了吗？」她看了看我手上的手环然后开口问道。「不，我来这边大概才三个礼拜左右吧。」我答话的同时，也将对方注视着的手环连同手臂一起伸出去秀给她看。「阿东……如果你不介意的话，可不可以把你的事情说给我听呢？」「咦……」这个唐突的要求让我稍微愣了一下，但我还是没有拒绝，顺着她的要求便将自己住进来的经过一点一点道了出来。我对着伯母诉说自己直到去年夏天仍过着普通的生活；对着她诉说某天我忽然因为必须接受手术而唐突地住进了医院；也告诉她那些住院之初有多少朋友每天都来看我，直到现在却一个也不剩了；最后甚至连这些发生在自己身上的事情让我没办法有切身的实际体认这件事也一并告诉了她。我不知道自己为何会将这些事情告诉她。事实上，过去我也从没把这些事情对谁说过。因此，也许我根本上一直希望有谁可以听我说说这些事……「这样啊……你也真的很可怜呢。」这是她听完我所有的事情之后脱口说出的第一句感想。「那个……濑津美……她呢？她已经住进来很久了吗？」「嗯，有一段时间了……」伯母答话的同时露出了些许落寞的神情垂下了头。她的外表看来非常年轻，不过那双红通通的手粗糙的模样却反而给了坐在一旁的我更为强烈的印象。我不知道濑津美究竟何时开始重复着这般住院出院的过程的，不过至少可以肯定的是，绝对比我来得早上许多。而伯母为此得承受的辛劳，大概除了自己家人之外，很难有所体认吧。「你也是个温柔的孩子呢……」「咦……」伯母突然冒出了这么一句话——她是看着我将冰冷的可乐饼放入口中时说的。「你的家人对你很体贴吗？」「……」这又是一个唐突的问题，让我一时之间不知该如何响应而显得有些困扰。事实上，我的父母亲外在表现给人的感觉也许真的很体贴吧。不过我也早早就已经发现到，他们根本不是这样的人。「不过话说回来，不管你的父母亲是不是对你很温柔，不过你其实不需要表现出这么温柔的一面的。」「……嗯……我听不太懂伯母这话的意思……」「嗯……我也不知道该怎么说才好……」她说完想了想，接着才又开口：「我想也许你表现得任性一点会比较好吧？」她丢下这么一句话后，旋即起身，对着此时碰巧来到这边夜巡的护士打了招呼之后便往个人病房方向走去。……我该任性一点？我该表现得任性一点会比较好吗？对我的家人来说——或者说濑津美的母亲，伯母她其实也对着自己的女儿怀抱着这样的想法吗……给我的建议也许透露出了长年伴在濑津美病床旁边的伯母内心的感想。然而，对于她这样的想法，现在的我却怎么也无法理解。——隔天一月二十日。这几天笼罩在天空中的云层消失，露出了一片高远辽阔的冬季天空。今天我父亲稀奇地来到医院，而他脸上的表情自始至终都显露出一副非常难过的模样。不过，在他跟我提到保险问题的时候，眼神中透露出来的心绪其实跟哀愁没有关系就是了。「那我接下来还有话得跟医生谈谈……」他说完便朝着走廊上走去。从他离开的方向看来，大概是要去之前我刚住进这层七楼病房时和医生会谈的那间昏暗的谈话室。现在的我又是一个人留在病房里头了。我无聊得没事可做，于是正将手伸向父亲路上顺道买来的一本漫画周刊而这本漫画旁边另外还放着他为我带来的水果跟果汁。装着水果的篮子旁边，就在我讨厌的香瓜前面，我看到了一串钥匙——是爸爸的车钥匙。「…………」那一串钥匙的金属部分光滑得发出银色的光芒。父亲的轿跑车在内装上下了不少功夫改装。这辆车是他的骄傲。我曾经有意无意地问他可不可以把车借我，却被他毫不犹豫地拒绝了。而眼前这串钥匙便是那辆轿跑车的。此时我的睡衣胸前口袋里头还放着之前那张驾照，它在核发的当天便几乎等于是永远失去了存在的价值。然而，我依旧每天将它带在身上，它是我过去曾经活在正常世界的证据。锵啷——我拾起了茶几上的钥匙。这只是我瞬间凭着直觉所作出的行为，连自己都不知道明确的动机。纯粹只是因为一股莫名的冲动而行动的——现在的我看待自己，就好比电视影集里头映出的其中一个桥段一般。我将几天份的药装进了一只塑料袋内便往走廊走了出去。我走过了护士站旁的走廊，快步地朝向电梯处前进。我的右手提着塑料袋，左手握着父亲的车钥匙；胸前口袋则躺着一张理应远远失去其存在意义的驾照。就在我经过谈话室的时候，看到和往常一样坐在里头看着电视的濑津美身影。她坐在一张狭窄的折椅上头，依旧带着一副同样无聊的表情双眼直视着电视屏幕。我对着她一如往常的背影唤了一声。「濑津美，电视好看吗？」「……你觉得呢？」「不像是好看的样子……」到这里为止仍和我们往常的对话没什么两样。而她那一双空洞的眼神即便始终都紧紧扣住了电视屏幕，视线焦点却和往常一样，落到了更遥远的彼方。「那……你要跟我一起走吗？」「咦……」我将手中的钥匙亮在她的面前，同时接着继续说：「我跟妳一样……我也讨厌自己家，我不想回去。」「…………我除了讨厌自己家……这里我也不喜欢。」「那……妳要跟我一起走吗？」「……嗯。」她答话的同时从椅子上起身站了起来。那一头长发随着她的动作晃过了我的鼻尖。在她同样也将自己数天分的药量装入了我手中的塑料袋后，我们一起离开了这层七楼病房。我关掉了谈话室中始终播映着无聊节目的电视，主持人尖锐的笑声也瞬间消失在周遭的空气中。我和她，濑津美，两人都穿着睡衣一起乘上了电梯，这层七楼病房是医院的最顶层。我们来到一楼之后，绕过了办理住院和出院手续的住院中心及急诊室入口，刻意从医院大门往停车场走去。冷风飒飒。一出了室外，一股寒意便拍在我的脸上。停车场中没有风阻，因此风势更来得强劲许多。我和濑津美小心翼翼地留意着周围的动静，穿行在宽广的医院停车场中。我左看右看，找了一阵子之后终于找到了爸爸的车子。那是一辆银色的轿跑车，车子的引擎盖上映出了冬季宽广的蓝天。我趁早将车钥匙插入车门上的锁孔中，将车门打开。「快，上车吧！」「嗯，好……」啪当——一声，我关上车门，同时让自己的身子沉入驾驶席的座椅中。而她，濑津美坐在副驾驶座上，因为身材太过矮小的关系，即便维持正常坐姿也几乎看不见挡风玻璃外头低矮的景致。我将手中的钥匙插进了启动锁孔，转开开关的同时也轻轻用脚踩了一下油门。这些都是汽车教练场上教的流程。咻咻咻轰隆隆隆隆隆隆I引擎震动的声音传遍了整辆轿跑车。接下来车子要开出去，我只需要再放下手煞车，然后松开离合器即可。这么一来，我们要去哪里都可以到得了了。「好了，我们走啰……」「……嗯。」听到我说的话之后，濑津美轻轻地点了点头。我没有进一歩回话，默默地踩下油门，让车轮带动车身开始缓缓前进。在用不惯的离合器和车身的震荡中，我们搭乘的这辆轿跑车穿行在停车场中，逐渐朝着出口外的大马路而去。「……这车子摇晃得很厉害呢。」「嗯，因为这是我第一次开这辆车……」「………………」「顺便告诉妳，其实这是我拿到驾照之系第一次开车上路。」「这样啊……」|这么一句之后，有如同往常一样将视线移向了窗外。看来，踏对我脱口说出的事实，并没有感到惊讶或者丝毫恐慌的情绪。此时我的车已经来到了停车场的出入口。前方横着一条宽敞的大马路。这边没有红绿灯，于是我便毫不犹豫地将车子开了出去。然而——叭叭叭叭……忽然一阵喇叭声从车子后头窜了出来，看来那声音是对着看也没看便驶入车道内的我们来的。我脚踩着踏不习惯的离合器，驾驶着老爸的银色轿跑车踉跄地行驶在车道上。这模样似乎让后方的车子觉得更不满意了，喇叭一直响个不停。看来他还会持续叭上好一阵子……不过我却不以为意地继续开我的车。|那年夏天，我忽然生病住院且接受了手术治疗，然后还一口气住进了七楼病房。那一切非现实的氛围，在我离开了七楼病房之后却依旧没有变得真实些。我想，到了现在，这般残酷命运即便在我的理性上可以理解，感性上却依旧迟钝得无法体会这其中所代表的严重性。「濑津美……」「什么事？」「你会觉得害怕吗？」「……我……觉得害怕会比较好吗？」「不，也不是……」现在时间还没过中午，太阳仍高挂在东方的天空洒下刺眼的阳光。我透过前挡风玻璃望向一片清澈的冬季蓝天，不知为何在这副景象中感受到了些许的哀愁。事实上，我并没有预设这趟车程的终点。寒冷的天空下，我脚踩着踏不惯的离合器，开着车子，摇摇晃晃地行驶在柏油路上。穿着睡衣的我，带着穿着睡衣的她一起坐在车上，将车子驶向国道。就在这么一个冬季里的某一天……——当天傍晚琦玉县的某处。原本高挂在东方的太阳也爬过了天空来到西侧，身上耀眼的金黄色光芒也渐渐转变成温润的橘红色。此时我们仍驱车不断地行驶着——漫无目的地行驶着。到了这边，周围已经是我们从没有见过的景物。在这时候……「……我们在这边稍微停一下吧。」我说完便找了一个地方将跑了一整天的车子靠到路旁。这里已经离开都会有一段距离，呈现不知名的郊区景致。周围非常荒凉，道路上几乎看不见其它汽车的踪迹。我将车子停在这样的一个郊区位置上，下车以后开始翻着车上的每个座位和行李箱，找寻着车里可用的物品。我在完全没有计划和准备的情况下便驱车奔出了医院，现在完全尝到了苦头。我边皱着眉头边翻开了副驾驶座前的置物柜。「天吶，真的是什么都没有呢……」里头只看得见些许高速公路收费站找来的几百圆铜板、几本漫画书，还有一台即可拍相机。尽管我们没有特别想去的地方，不过车上的卫星导航似乎也坏了。而我身上的现金大概只有八千圆左右。因为我急着出门，匆忙之中塞进口袋里的也就只有这么一些了。其实我对父亲车上究竟留有什么可用这点，打从一开始翻着车内的时候就没有怀抱多大的期待。不过加上我找到的零钱，现在我身上的资金凑一凑也不过九千圆上下。〔……就这么点钱接下来可麻烦了……)少少的九千圆连找间象样的旅馆都不够。再说，我想濑津美大概也没带多少钱在身上……我看着坐在副驾驶座的女孩心里暗自盘算着。「……怎么了吗？」「没有，没事……」……算了，会有这样的结果我是打从开始就知道的。何况这一趟开车出来，原本也就不是经过详细的计划和检验之后安排的行程，最重要的是，比起现在这个窘况，我更希望这个旅行能够继续进行。我无法让自己在同一个地方停留太久。因此，我再次启动了引擎，将车子从路肩开了出去。银色的轿跑车在黄昏的天空下继续展开了旅程。「话说，妳会不会饿呀？」I在车子里，我出声问了坐在一旁的濑津美。想想，我们从早到晚都还没吃东西呢。事实上，考虑到我们现在手上可用的现金，要吃到什么好东西是不可能的。不过买点快餐或者便利商店的三角饭团至少是不成问题的。「我看我们还是先找间便利商店停一下好了？」「……不要。」「喂，现在这个情况拜托妳就别奢求了好吗？再说，就算是便利商店的热食，比起医院里的餐点也还是好多了呀。」「…………」濑津美没有回话。她垂着头，视线移到了自己一身粉红色的睡衣身上。「啊，对哦。这倒真的是个不小的问题没错……」留意到她的想法，我也低头看了看自己身上的穿著；像我们这样身上穿了睡衣，确实不论走到哪里都会引人注目。虽说我们现在坐在车上倒还不成问题，不过要做什么都得赶紧换一套衣服才是真的……我做出了决定之后，打了方向盘将车子驶离了主要干道，朝着通往市中心的一般道路驶去。车子开了一会儿，我们来到了一条不知名的街道上。我想这条路应该离火车站很近才对。毕竟路上已经可以看到有人在行走了。「应该要有的呀……」我嘟哝着让车子缓速行驶，寻找着心中的目标。此时的我上半身已经不是贴在椅背上，而是挺起身来，边开着车边朝着道路两旁的店铺张望着。「……啊，有了。」没多久，我便发现了我要找的目标——一间投币式自助洗衣店。这间投币式自助洗衣店外观看起来破旧，座落的地点也是在一栋小小的住商混合式大楼中的一楼——也许这里正好……我边想边将车子停到距离门口稍远的路肩。「好了，妳在这边等我一下！」「嗯？」啪当——我关上车门，丢下了双眼圆睁、一脸不解的濑津美，独自朝着洗衣店走去。我的车子距离这间自助投币式洗衣店其实不过十公尺左右，不过我还是小心不要引起周围的人的注意，确认了四周没有人过来之后才悄悄溜进了这间店。——唰……就在我走进自动门的那一刻，扑鼻的漂白剂和洗衣粉味便朝着我迎面而来。店里破旧的模样就和它的外观一样，摆设的洗衣机和烘衣机也都是相当旧型的机种，看来已经用了很久了。「……没有人吧？」我嘟哝了一声同时走进了这间空无一人的自助投币式洗衣店。而店里头只有一台静静地独自运转着的烘衣机还在运作着。我看到它便赶紧凑上前去，确认它定时器上所剩的时间。……………………看来衣物的主人投了两百圆，将它设定成三十分钟。而现在大约是经过了五分钟左右。用直觉式的方式思考，在这台烘衣机继续运转的一一十五分钟内，衣物的主人应该正在哪里消磨时间才对……我得到这样的推论结果之后，先出了一趟洗衣店，看了看没有人之后才又回到那台正在持续运转的烘衣机前，将手伸向了烘衣机的门把……喀嚓——我用力一拉，正在运转的烘衣机便受制于设定好的功能而强制停止运作。即便猛然一阵水汽从里头窜出来蒙住了我的脸庞，我仍旧毫不犹豫地伸手抓住了还湿着的衣服，双手抱着四处张望了一下。——这是窃盗行为，而我现在所做的事情已经是犯罪了……我在脑中以极度理性的口吻这么解释着，一颗心脏却已经怦怦地跳个不停。对于这几个月来发生的事始终都缺乏这么一点真实感的我，现在也知道自己的行为究竟代表了什么样的意义。如果我现在罢手，也许只要口头道个歉都还可以了事……这样的念头被我强力地扼杀，凭着一股冲动飞快地穿出了洗衣店跑向车内。「啊……」濑津美见了我手中环抱着的衣物，瞠起双目露出了惊讶的表情。我没多看她一眼，将衣服扔到了后座便急急忙忙点燃了引擎。「好了，我们走啰……」「…………」咻咻咻轰隆隆隆隆隆隆——浑厚的引擎声中，银色的轿跑车再次驶出了路肩。当我回过神来，橙红色的夕阳已经沉入了天边，在紫色和靛色的渐层中宣告了夜晚的来临。车辆行驶中，我单手握着方向盘，瞥了一眼之前被我丢进后座的衣服堆。一眼看过去首先注意到的是一件拉风的牛仔裤、运动衫；都是些跟我年纪相仿的男性穿着。虽然衣服现在都还是湿的，不过有车子里面的暧气，应该很快就干了吧。「濑津美，妳待会儿就挑一套妳喜欢的衣服穿吧……」「………………」她没有回话，只是茫然地注视着那些被扔在汽车后座上头的衣物堆。「除此之外我们也没有别的办法了啦……」「……我知道啦」我从她的语气中听出了她的不满，而且情绪比起过去任何时候都来得强烈。……拜托，我也不愿意呀。不过我们身上只有九千圆现金，虽说目前还没有决定这钱要怎么用，不过拿来买新衣服绝对只会让我们接下来的选择变得更艰难而已……——当晚，仍旧是一个不知名的场所。在月亮出来之后不久，我们开着车子仍旧持续行驶了一会儿，然后在某个公园旁边停了下来。这座公园看起来像是一座儿童公圜。它夹在住宅区中间，小归小，该有的设备也一应俱全。到了这里，我们才开始盘点我刚才偷摸回来的衣服。「好像全都是男生的衣服呢……」也许车子里头的暧气也有帮到一点忙，这些衣服此时已经全干了。而衣物的种类就跟我方才稍微瞥了一眼之后猜想的一样，都是些拉风的牛仔裤和运动杉等等男装，不但风格跟我年纪相仿，尺寸也差不多。「濑津美，妳也挑一套出来穿吧。」我坐在驾驶座上，随便挑了一件牛仔裤和一件毛衣开始换起了衣服。「怎么了？妳不换呀？」我对着濑津美问道。「……这边每一件衣服都好大哦……」「那妳要这样一直穿着睡衣活动吗？」「……好啦……」她不情不愿地答了一声，然后也挑了一件牛仔裤和毛衣，打开了车门就要出去。「啊——喂，妳要去哪里呀？」「……去换衣服。」她丢下这么一句话便朝着公园里的公共厕所走去，一会儿之后……大约过了三分钟，喀喀、啪当——她打开车门又坐回了副驾驶座。「唉呀，妳动作还满快的嘛？」只见她手上拿着她刚换下来的粉红色睡衣，身上则穿上一套自己挑出来的白色毛衣和牛仔裤。「不管怎么说，能把睡衣换下来还是不错吧？」「…………」面对我的询问，她并没有回话。我看了看她，其实不看大概也猜得到，不过这些衣服对她来说尺寸还是太大，穿起来松松垮垮的。像是牛仔裤的裤管太长，所以她得在裤脚反折了好几圈。同样的，毛衣的袖子也是。「……我宁可穿自己的睡衣。」「别这么说嘛，至少这么穿比较暖和不是吗？」「…………」这句话让她又一次带着不悦的表情看着我。她身上此时的穿著，衬着那一副极为可爱的容貌显得非常不搭调，甚至给人一种滑稽的感觉。相较于她平时穿着睡衣，因为那种既美丽又可人的外型美得好比一幅画一般，反倒是让人觉得难以亲近。在这般稍具亲和力的氛围中，我也终于对着她吐出了稍微轻松的言词：「果然女孩子还是会想穿得美美的吗？」「……没有啊。」她的反应依旧冷淡。然后，看她对着自己身上那件松垮垮的毛衣感到不满也只有短暂的一会儿。不久之后，她脸上的表情又恢复成了那冷淡的模样。——六小时前医院内——这天，作为医院综合受理处柜台人员的我，依旧执行着我的工作。我叫作莳绘素子——我很庆幸自己能有莳绘这个姓氏。我非常喜欢这个姓——做这个工作已经五年，丰富的经验让我早已经习惯处理各种状况。「抱歉，请问外科诊区在哪里呢？」「请问您是初诊吗？如果是的话，要麻烦您先填写一下这张初诊单；如果您是从其它医院帱院过来的，身上有其它医院提出的转介信函，也麻烦您一并交给我。」这天是本院一周三次的门诊日，打从早上开始我就不断地回复着同样的问题。除了我，这里所有的服务人员多半面对到的也都是一般性的事务工作，而非病患对于医疗相关问题上的协助。因此，所有的问题理应都能以简单的几个问答模式解决。然而……『——我的车被偷了！』这个安逸的午后，第一个找上我的请托却是这么一件事。向我提出请求协助的是一名急急忙忙跑过来，还喘着气的中年男子。而这一切大约发生在五分钟前。男子带着震怒的表情，说话时的模样显得非常亢奋。『抱歉，可以请您具体叙述一下您所碰到的问题吗？」这句话另外也带有要对方冷静的意味，因此我说话的语调显得格外平缓。虽说有些少数的个案是病患即便身受重伤，却没搭乘救护车自行前来医院求诊；像这种情况我其实也处理得还满习惯的了，然而，面对前来寻求协助的人通报自己的车被偷了，这种情况从我站在柜台的这几年下来还是头一次见到。「啊、对呀……抱歉，其实是……………………」男子似乎稍稍冷静下了，开始将他所遇到的问题详细地说明给我听。他叫阿东，年纪约四十到五十岁。从他的叙述中我得知他有一名亲属住在临终疗养病房，而今天其实就是特地前来探望这名亲人的。就在他要回家的时候，他发现自己停在医院停车场中的车子不见了。车子什么时候不见的他并不清楚，而从他下车到他发现自己的汽车被偷，大约经过了两个小时左右。〔……这情况我该向警方报案吗？)听到对方叙述完整件事情的经过，我开始思索着解决的办法。就在这时候，我想起了之前曾经听闻过发生在这间医院里的事。这件事起因于一名七楼病房的女性患者私自驾车出游而引发了护士长和医生的震怒。不过这位女性病患既是教会的人士，原本又是医院里的一名看护，因此并没有受到严重的责罚……「那个，阿东先生您的车钥匙呢？」「车钥匙？钥匙怎么了吗？」「我想问您，如果车钥匙还在您身上的话，我想我们大概就得把这起事件当成窃车案件处理了……」我想我话说至此，他应该就能明白我的意思了。简单来说，如果车钥匙还在这位阿东先生的身上，那么车子肯定是被人橇开车门然后开走的，这种情况当然是偷窃了。然而，万一钥匙不在他的身上，那除了车子被窃的可能性之外，也有可能只是熟人将车子开出去的，而这个人……〔……很可能是这位阿东先生的儿子将车子开出去了。)「说到钥匙……啊！我想起来了，我好像是忘在我儿子的病房里头了！」「阿东先生，我们赶快去找找看吧。」我将柜台工作委任于前来交班的新人，跟着阿东即刻朝着电梯赶了过去。万一真是七楼病房的病患私自驾车外出，那这起案件接下来还真不知道要交给哪个部门来处理了。不过至少现在是由我负责的。来到了七楼，我和阿东先生一同走下了电梯。经过护士站时，我对着熟识的同事点了点头，旋即跟着阿东先生一同前往他儿子住的病房。他住在过了谈话室之后沿着走廊走到底的最后一间。从被分配到的病房位置来看，他的病征还没有发展到末期。我们来到病房前，制止了阿东作势欲猛力扳开房门的动作。……我敲了门，但门内并没有回应。「失礼了——」我扳开门把，同时对着门内唤了一声之后缓缓将门板推开。「阿东先生，您的儿子没有待在病房里头呢……」病房不大，不用特别找就可以知道人在不在了。此时阿东先生不知道有没有听见我说的话，进门之后就急急忙忙地开始找他的车钥匙。「有找到吗？车钥匙是不是真的不见了？」「嗯……我应该是把车钥匙放在这里的才对……」他伸手指着装了水果的塑料袋处说。仔细一看，那张茶几上的除了装着水果的塑料袋之外，还散落着几张空的药袋。(这些药袋……该不会是阿东先生的儿子一口气把里头装的药全都掏出来之后留下来的吧？)——果真如此，那么他搞不好还不只是一时兴起而开着车随便出去晃晃而已……事情可能严重了——加上他又是七楼病房的病患。要是他的念头一转，他甚至有可能连死都不怕了……「可恶！小姐，请妳马上帮我跟警方报案！」「咦？」「我说！请妳帮我跟警方报案，说我的车子失窃了！妳想想，要是我的车子被开出去之后撞伤了人那可怎么办！」一时之间，我不太能相信自己的耳朵。我无法即刻理解到他到底是基于什么样的想法而说出这种话的I报案车子失窃？万一车子被开出去撞伤了人？比起这些琐事，难道他不担心自己儿子的安危吗……从他愤怒而提高的音量中，我感受到了我和他在这件事情上面，着重的问题似乎不太一样。我甚至觉得比起周遭的一切，他永远只关心自己。「妳不报吗！好，那我也懒得拜托你们了，我自己去警察局报案！」「啊！先、先生！请你等一等！」眼见他猛然拉开门把就要出去的同时，我唤了一声将他叫住。面对这个无法用人情常理来说服的对象，我反射性地开始思索着究竟该如何安抚他的情緖……「阿东先生，我并不反对您报警。不过我想警方大概很难以窃盗案件受理像您这样以亲属作为嫌疑犯的案子。」「有这种事吗？」「是，根据法律条文也是如此。所以我想请您先缓一缓报案的动作。」「嗯……是这么回事吗……」先不论阿东先生究竟怎么理解我说的话，不过实际情况确实也跟我所说的相去无几。总之，面对这个无法用一般理论说服的对象，现在我所选择的这已经是最好的应对方式了。「我知道了，总之只要车子可以安全回到我的手上，那我就不计较了。这个部分就麻烦妳来处理了。」「呃……您说，我来处理……是吗？」「不然呢？我要回去工作了，有什么消息就赶快通知我。」他丢下这么一句话便匆匆离开了病房。被抛下来的我，面对他种种莫名其妙的态度跟想法而呆愣在那儿。其实我非常生气，但比起生气，我更觉得惊讶，没想到这个世界竟然真的有人可以用如此一厢情愿的想法作为待人处事的基准，我真的吓呆了。（我该不会……就么被卷进了一个棘手的问题里头了吧？）——怎么会这样？明明前一刻一切都还处在平顺且规律的日常生活当中，怎么现在就……我的脑中不禁如此埋怨着。然而，比起无谓的抱怨，我现在还有更重要的事情得着手开始去做。「我得先通知总护士长……不对，应该先跟七楼的护士长报告才行。」先行判断了行事的先后顺序之后，我便朝着护士站移动。就在朝着护士站走去的路上，我在七楼病房的谈话室中找到了正在和其它人交谈的护士长。虽说现在插进去说话会打扰到她们，不过现在我所遇到的问题也有它的急迫性。然而，就在我打算插嘴而靠上去时……「对，我女儿人不见了！」「真奇怪？我们今天应该没有为濑津美安排任何检查才对呀……」我再听到她们谈话内容时整个人僵住了……我知道这是怎么回事了——或者说这只是凭我的第六感猜测得来的结果。于是我毫不犹豫地插入了她们两人中间。「抱歉，护士长，打扰一下。」「咦……啊，妳是……」「我是莳绘，是一楼综合事务柜台的柜员。」我礼貌性地点点头，然后对着另一名妇人开口问道：「抱歉，请问您的女儿跟七楼病房的另一名住院患者，阿东优认识吗？」「阿东？是，认识，我也有跟他一起吃过几次饭……」——果然如此。基本上这层七楼病房的年轻病患不多，因此他们两人会有所交集也不是什么奇怪的事。不过也因为这个缘故，让我内心的不安逐歩向外扩散。「不好意思，麻烦您尽快带我到令千金的病房去一趟！」「病房？您是说小女的病房吗？」「对！我必须确认一件事，麻烦您尽快带我去一趟！」「可以是可以……可是她人现在也不在病房里面呀……」「不，我是说我现在手上正在处理的一件事也许跟令千金有关。」听到这句话，护士长和眼前的妇人全都露出了一副惊讶的表情看着我。不过我并没有特别跟她们解释，只是要她们赶紧带我过去。(希望这只是我自己瞎猜而已……)即便我心里这么希冀着，不过我的预感从来没有失准过。我们一行人穿过护士站，绕过了护士站旁的职员专用厕所，来到第二间病房。房门上吊挂这的名牌上写了住在这间房里头的病患姓氏。『佐仓』。我想起了这名病患我好像见过几次。她是个长得非常漂亮的小女生，让我印象十分深刻。我走进去的第一个动作便是一个一个拉开茶几下方的抽屉。而我之所以这么做的原因是，多数的病患都会将医生给他们的药品放在这些抽屉里头。翻到第三张抽屉时终于让我给翻到了。抽屉里放了几张空药袋，除此之外，我还在里头找到了一双室内拖鞋，却没找着室外用的鞋子。这么一来这位名叫佐仓的女孩去了哪里，答案就很肯定了。「……请问，您知道是怎么回事了吗？」「莳绘小姐，麻烦妳跟我们说明一下这到底是怎么一回事好吗？」七楼的护士长和病人的家属仍旧带着一脸摸不着头绪的迷糊表情，在不安的语气中对着我开口问道。我想了一下该怎么跟她们说明才好，一会儿之后才重重地呼了一口气说：「佐仓太太，请您冷静地听我说……」「咦？啊，是……」「令千金很可能跟着阿东一起从这间医院里头跑出去了。」我边说边告诉她们，我现在得去找总护士长报告这件事，同时也邀她们跟我同行。……唉，换做是平常日，现在的我早已经开始准备结束柜台工作、收拾东西回家去了。然而，我的预感老早就告诉我，今天不会过得这么平顺，而这的确也逐渐变成了现实。——一月二十日晚间琦玉县郊外——哗啦啦——天空中不知不觉间开始降下了大雨。这场雨好像忘了该适可而止似的在一月冰冷的夜色中倾盆落下。此时我和濑津美身在一处空旷山野、一个不知名的停车场中。我们从便利商店买完了东西后，来到这里，准备在这熬到天亮。我们将前座的两张椅子放平，让身子横躺下来；用傍晚从投币式自助洗衣店里偷摸回来的衣服当作棉被盖在身上。濑津美起初对于这些偷来的衣服相当反感，不过因为天冷了，或者是她看久了也习惯了，身上批了一件防风外套，正躺在椅背上望着车窗外的雨势。大雨滂沱地打在汽车的前挡风玻璃上。雨水汇集在一起而形成了一道道水流顺着向下滑落。我和她一起躺在车内，看着窗外同样的一幅景致。「濑津美，海带跟梅子的饭团妳要哪一种？」「……梅子。」我们将在便利商店买来的东西放在身上讨论着饭团的口味该怎么分配。今天的晚餐平均起来一人共有两个饭团、一罐五百CC的宝矿力和半包洋芋片。「活说，像这样的生活已经好久没有尝过了呢……」「——嗯。」虽说这种餐点绝对谈不上什么奢华的享受，不过比起七楼病房的菜色来说，我觉得已经够个意间，我的视线飘到了手表的表面。现在的时针指着晚上的十一点，在医院里头已经是熄灯时间，院方怎么说也该察觉到我们溜出来了吧？(车子不见了，老爸肯定是气疯了……〕说到我的老爸，他是那种再怎么样都不会为自己的儿子女儿担心的人。对他而言，真正重要的永远都只有他自己。这种形容方式用的绝不是什么夸饰法，而是我在他身边待了二十年得到的感想。「现在医院那边不知道怎么样了……」濑津美坐在副驾驶座上，在洋芋片一片片塞进嘴里的空档中喃喃地开口说道。她的母亲应该跟我老爸不同，至少还是会为自己的女儿担心吧。「哪，如果妳想回去的话我可以送妳回去喔？」「……………………」濑津美也没有回答我，只是默默地吃着洋芋片。我在离开医院时因为一时兴起而邀了她跟我同行，但到了晚上，我已经开始后悔了。其实我对我自己偷了老爸的车溜出医院的事情一点也不觉得有什么不对。而凭着自己的意志跟我一起溜出来的濑津美倒也不会让我觉得有什么亏欠。不过——我想也许你表现得任性一点会比较好吧……此时我忽然忆起了她的母亲对我说的这么一句话。一想到她现在很可能为了自己的女儿不见了而急得发慌，我就觉得心里非常过意不去。就在我看着她吃着洋芋片、伸手也想拿一块的时候，她伸向洋芋片包的手忽然停了下来。「……怎么了吗？」我问。「没有……」她答话的同时，目光依旧停留在被雨打成白茫茫一片的前挡风玻璃那。透过玻璃和雨夜的景致，可以看见路旁开了几株白花。这几朵花被雨水打得湿淋淋的。不过那些花朵宛如白雪般纯净的颜色，却让它们在雨夜的路旁分外地显眼。我记得这种品种的花。虽然我不知道是谁将它们种在这儿的；抑或者它们根本就是野生的，不过我认得这些绽放在漆黑雨夜中的白花。「这些花……是叫作Narciss吗？」「……是Narissus，就是我们俗称的水仙花啦。」「哦??原来是水仙花呀……」虽说我对于花花草草认识的种类并不多，不过说到水仙花，至少这个名字我还有听过。而我也同时想起了过去曾经提起这个话题时，一向鲜少开口的濑津美也一反常态地跟我搭起了话来，于是我表针对这个话题，继续试着引她开口。「那么？是不是这里的花也不一样呢？」「……嗯，严格说起来是不一样。」「哦……所以这里的花是很少有的品种啰？」「不是……这其实是哪里都可以看得见的品种。」「妳说这种花哪里都可以看得见？那……哪里可以看见？」其实我只是随便找话说而已，话中并没有什么特别的意涵，纯粹只是顺着话题接话而已。然而，我最后提出的疑问却让她思索了好一会儿。她缓缓开口道：「……往西边去。」「……西边？」「淡路岛上的水仙花……很有名。」「喂……淡路岛……妳以为我们现在人在哪里呀？」这是我第一次自己开车上路，实际的距离我还不太会抓。不过我想淡路岛距离我们现在的位置少说也有700km，就算走高速公路也不知道多久才到得了。再说我们身上的现金也不多，我不觉得够支付收费站的费用。如果不走高速公路，走一般道路过去，光是油钱的花费恐怕也不够付。「拜托妳别做出这种无理的要求好不好，淡路岛我们要怎么去嘛？不可能啦。」「……………………」她沉默了一会儿。「……我有说要去吗？」「咦……」「我只是回答你的问题而已……」她简短地回了话，然后又将视线投射到了前方外头的水仙花丛上。冷冷的雨和雾蒙蒙的车窗。她的视线穿过了重重障碍而落到了生长在车前不远的花间。然而，迷蒙的眼神却又让我感觉到她所注视的并非是这里水仙花，而是更远的彼方。淡路岛……其实我也不是特别想去那里。不过，对我来说，除了那里，实在也没有其它目标了……——翌日一月二十一日医院——「早安，莳绘小姐！妳已经醒了吗？」「啊、啊……是，早安。」我在佐仓太太的唤声中醒来，答话的同时，我揉了揉眼睛。这里是医院一楼的职员室，待在这里茫茫然过了一个晚上，不知不觉中天就亮了。我们昨晚一同对着总护士长报告了阿优和佐仓濑津美偷溜出医院的事。在避开了盗车事件的情况下，我们也跟警方报了案，寻求协助搜寻这两位患者，并请他们寻获之后带到医院里来。说归说，日本这么大，我们甚至不知道他们两人朝着哪个方向去了。因此就算警方允诺将会协助搜寻，也未必真有这种闲工夫帮忙。除了警察之外，我们也委托了其它医疗机构和教会帮忙寻找，不过这么做究竟能收到什么样的成效，我也实在不敢期待。即便如此，我们医院这边唯一能做的事也只有待在这间职员室里头等着各方可能梢来的讯息。深夜，七楼病房的护士长和总护士长终究还是得回去处理自己的业务而离开了职员室，留下我和佐仓太太两个人守在这儿熬到了天亮。(唉……这件事情根本已经完全超出了我该负责的业务范围了……〕其实我明明将事情报告上去之后就可以抽身了，不过却不知为什么也跟着一头栽了进来。「莳绘小姐，我们要不要先去附设餐厅吃个早餐呢？」佐仓太太说话的同时已经开始整理身上的衣服，准备离开了。而我也跟着她一同走出了这间职员室。今天医院并没有开放门诊，因此医院里的附设餐厅显得空荡荡的。我和佐仓太太面对面坐在一张桌前，我们在距离正午还有好一段时间的现在各点了一份午餐。「妳会不会很累？我看妳昨晚好像都没什么睡呢……」「嗯？啊……没事，您别担心。」看到我的眼神显得有些迷蒙，佐仓太太很体贴地对着我慰问道……然而，我在想，若是一般情况，不该是我来安慰她吗？面对女儿失踪的佐仓太太，就常理来说应该是我来担心她的情绪才对。结果事实不是如此，她显得相当坚强——或者该说，她的神情甚至表现得有些开朗。跟昨晚辘转难眠的我比起来，作为女儿失踪的母亲，她却躺在床上，早早就入睡了。「…………」「莳绘小姐，怎么了吗？」「不，没事……」「那我要去拿一杯咖啡，我也帮妳一起拿吧。」她说完便起身朝着柜台走去，步行的身段显得异常轻快。〈该不会……这个妈妈也是……〕就在我快要把阿东优的父亲忘掉时，他打了电话到我的手机里来，劈头就是一阵大吼。而佐仓太太现在的表现，直教我联想到她是否跟阿东先生有着同样的问题呢——阿东先生除了自己切身的问题之外，其它的人事物彷佛一概与他无关，永远只关心他自己。而佐仓太太若非也是如此？在这个女儿失踪不知去向的此时此刻，她又怎么能表现出这般轻松自在的一面？「来，就等了，这是您的咖啡。加一匙糖好吗？」「谢谢，麻烦您了。」我接过咖啡，试探性地对于我方才心里的疑惑提出了疑问：「那个……佐仓太太，您是不是……不太担心自己的女儿呢？」「咦？」「这么说也许有点失礼，不过我实在看不出来您有一丝丝为此感到担心的模样。」「…………」她沉默了。根据她的回答，也许我的想法也该有所修正吧。现在的我只是因为事情碰巧发生在我身上而一头栽了进来。然而面对一个丢了儿子，跟另一个丢了女儿的人，他们却对于自己失踪的儿女显得漠不关心，那我作为一个局外人，再怎么费心思去协助他们终究也是白费功夫吧。「您果然……不太担心自己的女儿，是吗？」「……是啊，也许真如妳所说的那样也不一定……」「那么我想我也许也不需要再插手管这件事了吧。」说完，我便端起了盛着空盘的托盘，正准备要从自己的椅子上站起来。此时的我总觉得整件事情从头到尾都是我自己一个人在瞎忙，一股火便不由得在心里烧了起来。「啊，等一下……我、我开始也是很担心呀。可是……也许除了担心之外，我心里更觉得高兴吧……」「……高兴？这是怎么回事？」我听到这句话，又将托盘置到了桌上坐了回来。这尽管是我自己心里没有任何根据的猜想，不过我从她觉得高兴的说法中，感受到的并不是欠缺责任感的处事态度，而且也不是自我中心的想法作为出发点的心态。「佐仓太太，如果您不介意的话，可以告诉我您内心的想法吗？我会尽我所能地为您提供协助。」直到这一刻为止，我才真的发自内心地脱口说出『我愿意帮忙』这样的想法。而之所以会有这样的念头，也许是因为我看到了阿东优的父亲，试图寻找一个证据证明，这个世上并不全是这般自我中心的人吧。除此之外，也许我感兴趣的只是这两个岁数差距不大的年轻绝症病人接下来的命运。想知道他们究竟会怎么面对自己剩余不多的人生……我想，我知道这几年累积下来的年假该怎么用了。第三章地图『……我的时间静止了。』我透过电视映像管中得到了许许多多的知识，明白了世间各种无谓的价值观。然而，不何时开始，我对于现实的体认却变得越来越稀薄，胸中的情感变得越来越空洞。『……然而，我还是喜欢阅读地图。』除了地图，我也喜欢汽车、火车；喜欢任何能够载着我到其它地方去的交通工具。我喜欢摊开地图，趴在床上，想象着自己搭乘各式各样的火车穿梭在各个不同的铁路在线；想象自己坐在各种房车、轿跑车、休旅车中在各地遨游。……我喜欢沿着地图，想象自己坐在车上，在延伸向日本列岛各个角落的国道1号在线，永无止尽地奔驰着；载着我开往如梦境中那般蔚蓝的天空下，载我抵达看得见美丽海洋的海岸。我总会想象着自己坐在车上，行进在海岬沿岸圆弧形的车道上；想象自己随着座车行驶过烈日映照的白砂湾……只要我闭上眼睛，我便哪儿也到得了。——只要我闭上眼睛，我便可以看见过去我从未见过的景致，踏上我这辈子绝不可能造访的地域……『我看着电视……吸收着视讯带来的，无谓的庞大知识情报……』『我看着电视……任凭心中的憧憬日渐滋长，一点一滴地蚀去自己的心灵变得空洞……』——一月二十一日琦玉县某处——雨后的天际，几片浮云飞快地略过深邃的高空。柏油地上还淌着雨水，在轮胎驶过时发出了——哗啦的水花飞溅声。这天，我们依旧持续开着车子。我们没有明确的目的，只是任凭引擎带动车胎不断地在柏油路上转动。此时的我根本没想要将车开往昨晚我和濑津美在谈话中提及的淡路岛。因为在我这么做之前，第一个得要面对到的问题就是，现在我身上带的现金就连汽油钱都不够付。我一边想一边驾着老爸的银色轿跑车直行在不知名的道路上——话说，这里是哪里呢……就在这时候，我发现到了这么一个更为切身的问题。其实我本来就对日本的地理不是很在行。再加上现在卫星导航又不能用，让我对于究竟身在何处这个问题，更是完全得不到任何依据了。于是我下意识地开始摇晃着脑袋，边开车边张望着四周的路标。「嗯……还是看不懂呀……」「……怎么了吗？」「嗯……没有啦。我不知道我们现在到底来到哪里了。」濑津美看了我的动作而出声问我怎么回事，而我也简简单单地回了话。(嗳，我想这个问题就算找她问大概也得不到什么帮助吧……〕「入间……琦玉县的入间郡。」「咦？」「下一个十字路口右转就可以接上十六号道……往八王子去。」「……妳……妳知道路呀？」「妳不会在这里住过吧？」「没有……我没住过这里。」这我可吓坏了……不，与其说我吓到，倒不如说是她对于这一带的道路熟悉程度让我觉得非常不可思议。毕竟我怎么看都不觉得她是那种会坐着车子到处跑的人。「那……妳该不会知道从这里怎么去那个地方——那个开满水仙花的淡路岛吧？」「……我听不懂你的意思。」「不是啦。我是说，如果我们不走高速公路，搞不好可以到得了淡路岛呢。」「…………」「你看，我们身上的钱是有可能不够付高速公路的过路费。不过如果不用付过路费，只需要付油钱的话搞不好还0K呢！」「——你想去吗？」「咦？啊……那个……也不是这么说啦……」「……那你问那么多干嘛。」她丢下这句话之后便再也没有开口，然后依旧摆出了冷淡的表情，将视线移向了车窗外头。而那一双眼眸，注视的似乎仍旧不是窗外流动的景致，而是更遥远的某处。〔她那句『你问那么多干嘛』……到底代表了什么样的意思呢……〕我想知道，如果我说我想去，那么她又会给出什么样的答案……车子依旧漫无目的地向前行驶着。我们打从一开始就没有计划过这趟旅程该怎么走，亦没有明确的目的地。因为我们只是不想待在家里或医院，因此才溜出来的。然而我——姑且不论濑津美如何，但至少我心里也许是这么期盼着——不管是什么都好，我希望能有个明确的启示来引领我前进。一月二十一日晚间神奈川县境内某地哗哗……前方不远处的浪花打在沙滩上传来了水声。我和濑津美一同走在漆黑的海滩上「好冷哦」「……是啊。」濑津美也跟着附和。我们将车子停到岸边，不为了什么特别目的，纯粹只是随便下来沙滩上走走。我原本想往西方去，不过不知道什么地方走错了，现在来到了南边。窣窣窣——漆黑的夜晚，不知名的海滩上吹着凛冽的寒风。我们停下脚歩，眺望起昏暗的海面。「黑得什么也看不见呢……」「……嗯。」她答话的同时仍旧和往常一样微微地垂着头，将视线聚焦在遥远的彼方。黑色的大海和黑色的夜空吞噬了地平线。一条白色的潮线横过了整片沙滩，向沙滩两侧无边无际地延伸出去。我原以为她会望着这片海洋好一阵子，然而，她却缓缓迈开了脚步，朝着白色的潮线方向走去。「你觉得……我如果就这么继续往前走会怎么样？」她背对着我，朝着沙滩上的潮线边走边开口问道。「什么怎么样？我听不懂妳这句话的意思。」他显示沉默了一会，然后才又开口：「……你觉得死了会是一种解脱吗……如果我就这么往海里面走去……」她问着问着但仍继续向前走着。——重复着住院出院的手续，到了第三次就是极限了，不会再有第四次。而在这种情况下，我们七楼病房的病患临终时唯一的选择永远都只有两个地方：不是医院就是家里，而且还没有人逃过这样的命运的……这是她曾经告诉我的，七楼病患之间口耳相传的条文。在她将这些条文传达给我之后，她在医院里背负的使命也就结束了……我想，她现在之所以会这么说也是基于这样的理由吧？「我不知道，因为我从没有溺水过。」我说。「那……如果我……现在就这么往海里头走去……你会阻止我吗？」她回过头来看着我的脸庞，对着我提出了这样的质问。一轮明月挂在她的身后。漆黑的夜空底下，那一双始终望着远方的眼眸此时不偏不倚地落到了我的身上。「我不知道……事情没真的发生，我也不知道我会怎么做。」「……也对。」她听到我的回答之后又转过身去，朝着白色的潮霖，一步步走了出去。「濑津美，你呀……」「……怎么了吗？」「其实妳希望有人阻止妳对吧？」「…………」在我丢出这个疑问之后，她的脚歩旋即在潮线前几公尺处停了下来。强风将海浪卷起的水花吹成了飞沫打在我的身上。「如果妳希望我阻止妳的话，那我就会阻止妳。」「不是……我从没有这么想过。」「那妳的意思是说，我不用阻止妳啰？」「…………」她没有回话。然而，她停下的脚步却没有再继续前进，就这么伫足在那儿。我想，这就是她的回答吧。——一月二十二日早晨神奈川县境内某处——深邃的天空是冬季特有的景致。蔚蓝的色泽清透得让人不由得感受到一股哀伤的气息。凛冽的北风在高架道路上飒飒地吹着。我们开的银色轿跑车引擎盖上映出了深邃的蓝天，行驶在北风呼啸的高架道路上头。我手里握着方向盘，而濑津美则是表现得一如往常地坐在副驾驶座上。〔……这里到底是哪里啊……〕就现在这个情况而言，最现实的问题还是，这辆车的汽油快没了。我身上原本带的现金就不多，加上之前还在超商里头买了些东西，现在剩的就更少了，大概只有七千圆左右。我不知道这辆车的油箱多大，不过我想一次加满应该还有余裕。尽管我们此行没有明确的目的，但一旦加满油之后若再耗光了，我们就等于没了脚，哪儿也去不成了。「我们得去加个油……」我打过方向盘，将车子驶向前方的加油站里头。「欢迎光临——」加油站里，一名精神抖擞的年轻男服务生一边擦拭着站内办公室的窗子，一边对着我们招呼起来。「请问是用信用卡加油还是用现金加油？」「现金……」「再请问是要加一般汽油还是要加高级汽油呢？」〔……一般汽油？高级汽油？)这我还真不知道——事实上，关于这辆车怎么保养，效能如何等等各方面的知识我可是一点也不了解。加上我才考上驾照，对于汽车的相关的各种常识也非常缺乏。「请问要哪一种呢？」店员又问了一次。「嗯……这个……」面对车窗外头等着我给他答案的店员，我支吾着不知道该怎么回答。接着，就在我想随便猜一样答的时候，坐在副驾驶座上的濑津美说话了：「……加一般汽油吧。」「咦？啊、嗯……加一般汽油，加满。」「好的，那么我们就是以现金加油，加一般汽油加满。」宏亮的嗓音中，这名服务生开始摆出了熟练的动作将油枪插入了我的车子的油箱之中。尽管车窗只开了十公分，不过那股令人讨厌的汽油味却也已经毫不客气地开始飘了进来。「喂，这辆车加一般汽油就好吗？」「…………」我问了坐在副驾驶座的她。不过她没有回答，只是默默地伸手指向加油机上的计费表。「啊啊，原来如此，加一般汽油比较便宜呀。」虽然我并不清楚两者之间的油价差距，不过我不觉得实际上会差这么多。加油机上的供油表中，液晶显示器上的数字不断攀升。25、26、27、28……跳表的速度非常之快。〔我该不会……犯了一个很大的错误吧……〕看着快速攀升的数字，我的心里开始出现少许的不安。我刚刚不经意地脱口说出将油箱加满的要求，不过现在身上仅有的现金加上零钱也不过七千圆左右。除此之外，我甚至还不知道这辆车究竟可以吃掉多少油……万一钱不够的话我该怎么办呢……我看着油表上的单价和总价，算算若是油箱吃油吃超过六十公升，那么我身上的现金就不够了。然而——38、39、40、41……加油机上的油表供油总量仍旧维持着一贯的速度不断向上，攀升，平常对于这个数字根本看都不看，现在却将注意力紧紧扣在加油机的供油表上。而且越看越觉得不安。「可恶，怎么还没满呀……」我望着油表望出了神，忍不住自言自语了起来。就在这时候，耳边忽然传来濑津美的声音——「……没关系啦，快满了。」「咦？」「因为这辆车的油箱是五十公升的……」一如她提出的见解，油表所显示出来的供油总量果真在47公升到48公升之间停了下来着加油机发出提示音的同时开始打印收据，而方才那名加油站的打工学生也跟着走了过来。「让您久等了，一共是5240圆。」「啊、哦……好。」我从口袋中取出了一张五千圆大钞，再加上一张被捏得皱巴巴的千圆钞一起交给他。「这是找给您的零钱，一共760圆还有收据，感谢您的光临！」在这名服务生宏亮的嗓音护送之下，我撇过头，将车子又驶回了柏油路上。老爸的这部车再次开回到了公路上头。这回不用担心车子没油了，不过身上的现金却只剩下两千圆左右。虽然这件事也同样让我觉得挂心，不过我倒是更在意方才加油站里头发生的事。「我说妳呀……该不会对于汽车的相关知识非常丰富吧？」「……没有啊。」「什么没有？这辆车的油箱大小刚刚还真被妳给说中了呢。」其实油箱大小这种问题也许只是一般人都知道的常识，只要凭着车辆的外观之类的特征去推敲就可以猜到，更有可能只是偶然被她猜中而已。然而，之前她对道路名称跟方向提出的看法却也丝毫不差。凭着这两次的经验，让我一时兴起而打开了前座行李箱，取出收在里头的行照，看着上面记载的数据随口对她提出了几个问题。「我说，妳应该知道这辆车的名字吧？」「……这算得上是有什么特殊目的的质询吗？」「也不是啦，妳就当是纯粹的猜谜游戏好了。」「答对了……那它的规格呢？」一九九年版，五福手排变速，输出功率最高可达200马力……我没想到她真答得出来。听着她继续用那平缓的语气叙述这辆车的规格，我也忍不住将视线移到行照上登记的讯息，一条一条往下看。「……长4。38m、宽1，695m；总排气量1797cc——你还要我继续说下去吗？」「不、不用了，够了……妳全答对了呢。」我答话的同时，将行照收回到前座的行李箱内。……真令人不敢相信，她答出来的内容竟和行照上登记的规格分毫不差。我还真没想到她可以全背下这些信息。若是问我她为什么会知道这些，我大概连猜也猜不出个象样的答案来吧。然而，她还是答出来了。I这样的结果，若是再加上她之前告诉我的道路名称跟方位，还有关于花的品种和特征，也许关系到其它方面的知识，她知道的还多着呢……「我说，妳为什么会知道这么多事情呀？」「没有啊……不过就是因为我年纪比你大上几岁罢了。」她丢下了这句简短的回答之后又如同过去那般闭上了嘴再也没有开口说话。她撇过头独自望向窗外，表现出来的态度彷佛即便我再怎么继续追问，她也没打算回答的样子。——年纪比我长上几岁……说实话，我真的不觉得她看起来有我这个年纪。不过这句话她以前也曾经说过，加上她的手环上写了她的名字和血型——濑津美，0型，年纪比我大了几岁……除此之外，我对她一无所知。今天的夕阳也早早沉入了西方的地平在线，将天空染成一片橘红色。我所开的这辆银色轿跑车此时仍旧持续在公路上奔驰着。没有任何目的地，没有任何该去的地方，只是盲目地沿着公路向前行驶。「濑津美，妳觉得我们接下来该怎么办好呢？」「……什么怎么办？」「我是说，我们身上几乎没有钱了。」「所以呢？」「……什么所以呀？」她的反应依旧和往常一样。此时的我们坐在车上，嘴里吃着方才从便利商店中买回来的饭团不着边际地交换了几个句子。而就在我们吃着饭团闲聊的过程中，奔驰在公路上的银色车子也不断地在消耗油箱里的油量。〔……也许我们应该停下车，什么也不做还比开着车子到处乱跑来得好一点。〕就算我这么想，但若是要什么也不做——或者是说什么也不能做地一直停留在同一个地方，对我们心灵上来说却也是另一种煎熬。因此，我在脑子里藏着这样的想法，仍不断地让车子的轮胎持续回转着。(大概还能撑三天吧……〕这几天车子开下来，我猜测不跑高速公路的话，汽油大概够我们跑上整整三天；加上身上剩下来的两千圆，持续在便利商店买吃的东西，大概也可以撑个三到四天。但这么下去，我们迟早会一贫如洗。「我说妳呀……」我对着坐在副驾驶座吃着洋芋片的濑津美唤了一声。「那个……是淡路岛吧？妳会想去那里看看吗？」「…………」她没有回话，手里又抓起了一块洋芋片，一样将视线放在车窗外头。「也许……我会想去看看吧？」「……为什么？」「这个……嗯……」听她这么一问，我倒是不知道该怎么回答了。事实上，我本来也就不是在拥有充分计划和明确目的的情况下从医院里的七楼病房中溜出来的……我想也许我所要的，就是这么一个明确的目的和方向。不需要具有什么特殊意义，那会是什么都好……——一月二十二日晚间神奈川县川崎巿某处——当天色完全暗下来的时候，我们将车停到某个小钢珠店的停车场中。我们当然没打算用小钢珠或者吃角子老虎机赚钱。毕竟我们身上只有两千圆，在做出这个决定之前，我们身上的现金够不够会是更大的问题。然而，若是手气顺的话，我们是可以利用一些小技巧偷到个一、两万圆的。这点以我住院前就固定会跑小钢珠店培养出来的经验来看，这种作法理应是可行的。我当然知道这种行为是不合法的。而我也并非向往这种人生，或者对于这种事情非常熟练的人。不过话说回来，现在我们如果能够弄到个一、两万圆大概就很够用了。甚至还有可能够把我们一路送到淡路岛去。因此，我将我所想到的计划告诉给濑津美听。「怎么样……要来试试看吗？」「……不要。」「喔，那好。」她拒绝的方式非常明快。不过我早已经料想到她会给出这样的答案了。其实我原本就没有对她的回答抱有什么样的期待。而我之所以会把想法告诉她，代表的纯粹也只是像是宣言之类的意义。「那妳在这儿稍等我一下。」我将濑津美一个人丢在车上，独自朝着小钢珠店前去。这间店里头比我预期的来得热闹些。钢珠台多，吐出来的小钢珠多，里头的人也多。到处都堆着一箱箱满满的小钢珠。——这对我来说也许正是个再好不过的机会了。我当下做出了决定，朝着我的目标——吃角子老虎机游艺区走去。我站在走廊上稍微张望了一会儿，看着众多客人手边的成果，锁定了其中一台机器。坐在机器前的是一名看起来像是上班族的中年男子。他脚边堆放着四个盛满了代币的箱子；老虎机上还另外堆了两箱。这是台位在角落的老虎机，而且旁边的机子还是空着的。从我刚才观察之后得到的结论，他似乎没有认识的人或其它朋友跟他一起来。〔……这下条件都备齐了。〕我想就算我从他脚边悄悄拿走一个箱子，他大概也不会马上发现吧。而从这间店一比一的兑换率来看，一箱代币至少值个两万圆有。「只要有这些钱……」我嘟哝了一句，同时悄悄躲在一旁等着他离开机台，去上洗手间。一会儿之后I确切地说大概是三十分钟左右II这名看似上班族的中年男子终于从位子上站了起来。我跟着他确定他是去了厕所，然后便赶紧冲回到老虎机的游艺区，看了看周围的游客和店员的动向之后，缓缓朝着中年男子的座位上位子旁走去。我为了不让自己的形迹看来可疑，于是佯装出一副泰然自若的模样，从位子旁的抱起了其中一个箱子……锵啷啷——就在下一瞬间，一堆铜板散落！地面发出了一阵巨响………我以为我抓那只箱子——不我确实抓住了，至少在它滑落的那一刹那之前，我确实抓住了。然而那个装满了代币的箱子太重，我抓不住就让整箱子的代币连着连着箱子一起摔倒了地上。我感受到了周围人群受到这起意外惊动，全都回头集中过来的每一道目光；我耳边听到其中有人对此发出评论和惊叫的声音，我察觉到成簇的脚歩声因距离拉近而放大的变化。然而，此时这些感受早就已经全被我抛诸脑后。事发的当下，我拔腿狂奔，现在已经来到距离小钢珠店门口两公尺前的位置。——啪当！「呼啊……呵啊……」我带着急促的呼吸关上车门，同时扳动了钥匙启动引擎，猛力地朝着油门狠狠踩了下去。事实上，我并没有感受到有人尾随着我追过来的迹象。然而，逃跑的过程中我也没有余力回头确认。就在我打了方向盘，准备让车子一股劲地冲出去时……——砰！喀喀喀喀……「咿呀啊啊！」车子在驶出停车场的时候似乎是碰到了柱子还是什么的，车尾狠狠撞了一下。接着还传来了几声车体和障碍物之间摩擦而发出来的恼人声响。然而，我并没有时间管它，仍将专注地将车子驶向了公路。「呼啊……喝啊……呼……」我轻抚着自己快要喘不过气来的胸膛，同时仍专注地开着车走在漆黑夜里的公路上头。坐在副驾驶座上的濑津美露出了些许不安的神情望着我，这是她初次展露在我面前的表情。我看了她一眼，心里想说些什么嘴巴却无法开口。〔……车子刚刚还撞了一下呢，不过比起车子撞得怎样……〕——现在最要紧的还是得赶紧离开这个区域……行驶中后照镜映出尾随在我们车后的车灯断地撩起我心里的恐慌。车子一路开了十分钟左右，在我确定我们离开方才那间小钢珠店好一段距离之后，我将车子停到路肩，开始检查方才车子擦撞到的地方。「……车子没事吧？」「嗯，应该没事……」濑津美的声音从副驾驶座的车窗中探了来问道。而我则是一边检查着车子擦撞到的地方一边答应。一眼看上去，车尾的保险杆有一块凹下去了；排气管也有点碰出了裂痕，不过应该也就这么点小伤而已。「……这点程度的擦伤，应该不会造成影响才对。」——啪当「呼……」我关上车门坐回到驾驶座上，因为紧张的心情得到舒缓而大大地呼了一口气。〔……真可惜。〕此时脑中第一个浮现出来的景象就是早先在小钢珠店里的那一幕。一切就只差那么临门一脚，我想下次我应该可以成功才对。方才我之所以没办法提起那只装满代币的箱子，我把原因归咎在自己太久没有提重物了——我想，只要我做好心理准备，知道我举的东西大概多重，我想我下次应该不会再出错才对……「……你还没有认清事实呢。」「咦？」「现在的你跟以前的你已经不一样了……」她一句话道破了我心里所想的事，彷佛我的内心全被她摸透了。「不过那东西不重……」「我觉得你最好不要用你之前的想法来作为衡量事情的标准……」「…………」我想，也许她说的对。即便我不想承认，但现在的我肯定和以前不太一样了。而若是以我现在的体力来看，这个作法也许真的没有成功的机会。「那……那我们到底该怎么办才好呢？」「…………」对于这个问题，濑津美没有回话。她闷不吭声地望向窗外，望着一片漆黑的夜空。——她这样的态度，难道是要我别再抱有任何期望了吗……第四章翡翠海『时间停止流逝，我的心灵也完全封闭；脑中的信息量日复一日地不断堆积着……我望着地图，闭上眼睛，想象着自己徜徉在不知名的城巿中旅行。』某天，我手里拿着一本我固定会买的月刊杂志，杂志的封面让我望出了神。这期的封面女郎身穿一件华丽的泳装，站在沙滩的海潮在线摆出了撩人的姿势，覆盖在她身后的那片沙滩上的，是一望无际的翡翠色海水。那是我始终梦想着的海滩。她……这个模特儿的年纪应该跟我差不多吧……她用那一副玲珑有致的身体曲线，在沙滩上摆出愉快的表情和动作，对着手拿这本杂志的我展露出了笑容。……我想我不会特别觉得羡慕，毕竟我连一件泳装也没有。那不是我迫切需要的东西，我只需要一件睡衣即可。——几次不同的季节更替；白蒙蒙的梅雨也几度盘据了整片天空，然后消失；我在这里日复一日地过着不需要和任何人交谈的生活……这天，我忆起了国一那年的六月，我初次住进了医院的那天；我想到了自己在住院前订购的那件泳装。它在我住进医院的那天，永远失去了发挥其存在价值的机会。我想起了那件泳装，并将它从衣柜里拿了出来。躺在衣柜里好几年的泳装，此时看来就好比全新的一样。我带着有些惶恐的心情试着将这件蓝色的学生泳装套到自己的身上……泳装非常合身。即便它是好几年前买的，现在穿起来却好比昨天才订作好送来的一样。杂志上的模特儿看着我露出了笑容。她站在翡翠色的海湾前面，带着一副身材姣好的模样对我露出了愉悦的表情。我看着那张封面，心里头涌出了一股莫名的哀愁。——我其实一点也不羡慕……我的理性这么告诉自己，但也许并非如此。也许我真的非常向往那片海滩。然而我的理性告诉我，这个梦想根本不可能实现，因此心里对于那片海滩的憧憬之情更是深得远远超乎我的想象。……然而，我胸前那一道长长的伤痕却在此时明明白白地告诉我，我该放弃这个梦想。因为它绝不可能实现。而那个伤疤还对我说——「……看来我的另一半，只能在梦境里头去找了……」——翌日一月二十三日东京都近郊——「嗯??已经早上了呀……」我在成群麻雀的叫声中清醒，大大地伸了一个懒腰。此时的濑津美仍躺在副驾驶座上鼾睡着。我和她都是将椅背放下来躺着睡的。然而，我的身高比较高，因此脚没办法伸直，睡得有些辛苦。我看了看表，确认了现在时间大概是早上七点。由于我们开着暧气，因此现在车窗变得整片雾蒙蒙的，从车内看不到外面究竟是什么样的天气。不过我想今天大概也是个晴天吧。「……嗯??」此时濑津美也终于从用来代替棉被的衣服堆里探出头来了。「妳醒啦。」「……呜呜……」只见她模模糊糊地应了一声，接着又卷起了身子继续睡了回去。不久之后又发出了酣甜的呼噜噜。……这家伙真是怎么睡都是这副德行。这几天和她相处下来，我察觉了一件事：就是她真的很爱赖床，而且她的睡相更是糟糕。我原以为是她身上的疾病发作，还担心了好一阵子。结果纯粹就只是她爱赖床和睡相糟糕的问题。关于她睡相的这个部分还有件事情得说……在我们第一个在车上过夜的晚上，她竟然滚着滚着就躺到我的身上来了……如果躺在我身上的是个天真无邪的小女孩，会心地笑一笑倒不会让人有什么奇怪的联想。然而，濑津美不但已经远远超过了还可以算得上是小孩子的年纪，而且据她说，她的年纪还比我长上几岁。加上端看她的容貌，那张楚楚可怜的脸庞美得足以让人为之屏息，就这么贴在我的胸膛上可是会让我的心脏像是小鹿乱撞一样怦怦跳着。即便平时相处的时间也算不上短，不过一想到我们身上都扣着一只白色的手环，那种异性之间的魅力就怎么也无法成为意识中的焦点。若是再加上她总会表露在外的那种拒人于千里之外的态度，就算她长得再可爱，她身上所散发出来的魅力也会被她自己扼杀掉。这样的她若是摆出了那天晚上那般完全没有任何防备的熟睡模样，看起来就好比哪个从摄影棚偷溜出来的少女偶像一样。因此，只要不是永远都板着一张脸，不要看起来都是一副冷冰冰的表情，偶尔会展现一下开怀的笑容，那她究竟会变成怎么样一个充满魅力的女生呢……我胡乱地想象着，脚踩住了油门，又将车子从路肩开了出去。太阳缓缓沉入了西边的天空，在地平线附近漆成了一片橘红色。而我们的座车此时依旧不断地在公路上奔驰着。〔……接下来该怎么办才好呢？)我们身上已经没有多少钱可用了，但我怎么也不想停下来。「……我说……你呀……」就在我的脑子里正思考着我们现在的处境时，濑津美稀奇地对着我开口问道：「你可以洗澡吗……」「洗澡呀？可以呀，只要不泡澡泡太久的话。」「喔……我也是。」我们现在说的是医生准不准的问题；像有些病患因为肾脏和消化器官方面的疾病需要插管，医生就会要求他们绝对避免让身体碰水，洗澡就更不用提了。就这方面来说，我跟濑津美患的病似乎都是呼吸道方面的疾病。「怎么了？妳想洗澡吗？」「……不可以吗？」「那倒不会，我也想。」说是这么说，不过现在我们身上的现金已经完全不够支付饭店或旅馆的费用了。「那我们找个付费澡堂洗个澡吧？」「……付费澡堂？」「嗯，付费澡堂不贵，这么点钱还不成问题。」「……我想还是算了。」「算了？妳不想洗澡了吗？」从我们偷溜出七楼病房之后已经过了整整三天了。在翳院里头、每周会有两次泡澡的时间，平时医院也会提供热毛巾让我们擦身体，一天两次。冬天的天气比较不容易流汗，而我们又是整天都待在车内，要弄脏也不太可能……「妳……该不会是因为澡堂里头都是陌生人，因为不好意思的关系所以不想去吧？」「…………」她沉默了一会儿。「……不是这个问题啦。」说完，她又转头面向窗外，我猜不出她究竟是讨厌去澡堂，还是怕人多觉得害羞，于是我试着提出另外一个方案：「那我们去露天澡堂好吗？」「……露天澡堂？那跟付费澡堂有什么不一样？」「其实就性质来说我也不太会分……」但我还是将两者之间反应在实际情况的差异上详细地跟她叙述了一遍。好像说往山里去就会很容易看到露天澡堂。而这些澡堂基本上不是以营利为目的，而多是当地的福利机构，几乎是不收费的。「加上这些露天澡堂位在山里头，跟住宅区的付费澡堂不一样，很少人去。」解释到这边时，我又试着再问了她一次：「怎么样？去露天澡堂0k吗？」「…………」她听了又是一阵沉默。不过我想这次跟之前的不同，因为这个提案还满有吸引力的，所以她很认真地在烦恼吧。「……还是算了吧。」「这样啊……好吧，反正我们车子一样继续开，如果妳改变主意的话再随时跟我说一声好了。第四章翡翠海对于她最后的决定，我只是淡淡地这么回答她。到头来，我的提案还是被她否决了。不过她的反应却和以往不太一样。即便同样都是否决，她这次却有把头转过来，正面对着我回话。我想，如果换成是平常的她，回话的时候应该会把头撇向窗外吧。夜幕低垂，一轮明月高挂天空。在方才说完话之后，我们的车子又继续行驶了一会儿，找到了一间看似学校的建筑——也许这里0K吧……刚刚的对话让我觉得颇为在意，于是在这幢建筑的入口处附近靠边停了下来。「……怎么了吗？」濑津美问道。「嗯，在这里稍微停一下。」我答了话之后转头面向后座开始在之前摸回来的那些衣物堆中翻找着。(我记得应该有两、三条毛巾才对……〕在拨开了几件看起来不怎么样的衣服之后，我找到了一条非常扑素的毛巾。毛巾上印着『白石工业』几个字样，大概是哪里来的赠品之类的。「妳在这边等我一下。」「咦？哦……」我丢下一脸疑惑表情的濑津美推开车门，手里拿着两条看起来朴素到不行的毛巾便下车朝着眼前的学校建筑走了过去。此时已经是学校关门的时间。我攀过大门，鬼鬼祟祟地四处张望着前进，同时寻找我要找的设备。「啊，有了！」我要找的是一条水管。眼前这条水管大概是用来替花圃浇水用的吧。——唧、唧。唧……唰~~在我扭开龙头的同时，大量的水流便一口气泄了出来。我将毛巾浸到水流底下，在刺骨的寒意中搓了搓两条毛巾，然后扭干。——啪当。「久等了，拿去。」我关上车门的同时，也将手里拿的其中一条湿毛巾朝着濑津美递了出去。在她接过毛巾之后，我便开始脱下身上穿的毛衣，径自开始用手中的湿毛巾擦拭起了身体。车子里的暧气够暧，毛巾冰冷的触感在微温的温度中接触到身体让我觉得非常畅快。「妳也擦一擦吧，不用觉得不好意思。」「…………」「冰冰凉凉的触感很舒服哦！」「恩……」濑津美原本似乎心里还有所顾忌，手上抓着毛巾始终没有动静。不过她听到我说的话应了一声之后，也开始伸手解开自己身上的扣子。她没像我一样把上衣整个脱掉，而是松开扣子之后把手伸进一身松垮垮的毛衣和牛仔裤中，开始擦拭起了自己的身体。「喂……」「怎么了吗？」「……你不要看啦。」「啊啊，对哦，抱歉……」她说话的时候已经将衣服脱到一半，意识到我的视线，于是低声表示抗议，脸上的表情在困扰中带了点羞怯。这是我第一次看到她有这样的表现。我转过身去，她也转头面向另外一侧；我和她在狭小的车厢内背对背坐着。「怎么样？身体擦一擦很舒服吧？」「……嗯。」车厢中的灯光照在外头一片昏暗的玻璃上，好比一面镜子一半映出了我的脸庞。镜面中的我的背后——在另一侧的车窗上，我看见了她。我看到她光着上身擦拭着自己身体的模样。即便我不是故意的，但我仍看见了——我看见她胸前一条长长的伤疤，那大概是手术后留下来的伤口吧？我不知道她到底患了什么样的疾病，不过那道伤疤比我身上的更来得长了些。濑津美……端看她的外表，那楚楚可怜的模样甚至可爱得会让人一时之间忘了呼吸。然而，她那一副白皙的胸膛上却开了这么一道非常突兀的伤疤，让人看了非常不忍。「喂……」忽然间，她的声音从我的身后飘了过来。「嗯？嗯……怎么了吗？」「我的伤疤……很稀奇吗？」这句话从我的背后飘过来，然而，却是对着车窗玻璃中所映出的我来问的。这大概就是她不想去付费澡堂的缘故了吧。我原以为她纯粹只是不喜欢在陌生人面前裸露身体，但此刻我却深深为了自己的思虑不周而感到懊悔。——一月二十五日神奈川县近郊——寒冷的冬天，天空里布满了白云。明明是大白天，车窗外头的风景却显得有些阴暗。我们开着车，依旧漫无目的地在公路上行驶着。不知不觉又过了两天。对于同样坐在车上的我们来说，多过了这两天一切并没有什么不一样。唯一的大问题是我们身上的现金见底了，汽油也快没了。「一天到晚吃这些东西妳会不会吃腻呀？」「不会……」我们手里各自拿了一个便利商店买来的饭团，啃着啃着交换了这么一句问答。便利商店的饭团是比医院里的配餐好吃得多了，不过几天吃下来，我也真的快吃腻了。然而，就算吃的是这些便宜的东西，以我们现在身上仅存的现金来讲，最多也只能再吃个几次。「……很吵呢。」「嗯？妳怎么忽然这么说？」「车子发出的杂音比以前大声……」「啊啊，经妳这么一说确实是如此。」这个问题肯定跟我们几天前为了逃离小钢珠店而在停车场出口处撞到了车子的保险杆有关。虽说我一直没有特别留意，不过车子行驶中所发出来的杂音确实比起以前来得大了些。不过。反正大概也还能跑啦。比起这个问题，现在最麻烦的还是油箱快空了。在油表显示没油的灯号亮起来以后，我们的车又继续开了五分钟左右。现在我身上只有九百圆，跟上次不一样，这次只要开进加油站，大概是没办法付钱出来了。话虽如此，车子的油一旦耗尽，我们这趟旅程也就玩完了……想了一下之后，我开始留意路边的加油站——那种自助式的。I没过多久，我便找到了我所想要找的加油站。于是我很快地将车子开到并排着的几台加油机中最前面的一台旁边，将车子停了下来。「车子要加油……」我对着濑津美说。「……喔。」「不过妳别下车哦。」「………………」她没有回话。不过我想她应该已经明白我的意思了。我推开车门下了车，跟着说明依样画葫芦地将油枪塞进车子的油箱之中。加油站里还有另一辆车，而里面的自动贩卖机后面也还有一幢建筑。不过倒没有看到类似店员的身影。我想他大概在房子里算帐吧。看了墙上的说明，顾客应该在加油后持着账单拿到那间房子里头缴费。——以现在这个状况，只要我开了车就跑，应该是可以逃得掉才对……我看着这间没有人积极服务而显得悠闲的加油站，心里得出了这样的感想。23、24、25、26……加油机上头的供油表，数字默默地往上跳着。和上一次不同的是，这次加油机跳表的速度似乎比起之前来得慢了许多。就不能快点吗……我的心里对着始终还没到顶的供油表不断催促着。就在油表跳过了40，不久就要加满的时候……「欢迎光临！」直到前一刻都还待在方才那栋建筑物里头的店员忽然来到了我的身边，对着我开口招呼。「需要帮您检查压缩机或者帮您清理烟灰缸吗？」「咦？啊……不用，不用了……」「了解。今天有点冷，请小心别着凉了。」说完，他便开始为我的车子擦起了车窗。就在这个时候，加油机的油枪跳满了。再一声提示音，加油机也开始打印账单。「啊，缴费要请您到那边去哦。」他暂停了擦窗的动作，为我伸手指向方才那栋建筑物里头的店的方向。我愣住了，一时之间不知道该怎么办，我只能手持着账单茫然地站在原地。「先生，怎么了吗？」店员问。「嗯？啊……没事，没事……」不管怎么样，我都得先坐回车内，然后发动引擎。（……我到底……该怎么办才好……）方才那名店员帮我擦窗的动作现在已经进行到了后方的挡风玻璃。以现在这个情况来说，只要我猛踩一下油门，理应是可以逃得掉的，不过车号大概也会被记下来吧。这么一来只要遇上临检，肯定简简单单就会被逮到了。——不过，如果要逃的话，也只有现在这个机会了……我下定决心，用力地猛踩了离合器。接着，就在我打算将排档杆从空档打向二档时「拿去……」忽然间，坐在副驾驶座上的濑津美拿出了一只信封，将信封口对着我。「咦？」「……拿去用吧。」信封里头有一张万圆大钞亮出了头。「妳、妳……妳有带钱呀？」I我一直以为她身上一毛钱都没有呢——既然有钱，那我们这几天根本不用过得这么辛苦呀……「妳为什么不早说呀？」「你有问吗？」「咦？这个……我……」「因为你没问嘛。」说完，她又摆出了和以往同样的态度，撇过头就将视线移到了窗外。缴了钱之后，我又将老爸的轿跑车驶向了公路。油箱满了，现金也有刚刚找回来的五千圆。然而，我最在意的还是方才的那件事。「我说妳呀……」「拿去，我就只有这些了。」「咦？」|在我开口之前，她先一步将方才那只信封递了出来。「这……可以用吗？」「用啊……」我看了看信封，里头还另外装了四张万元大钞。这些钱够我们花上一阵子了……濑津美递给我的这些钱让我不由得打从心里松了一口气。然而，接着我倒是留意到了另外一件让我觉得挂心的事情——为什么，她身上会有这么多钱？以我的情况来说，为了溜出医院，我只能随手抓了几千圆在身上，而她的情况却跟我不太一样。我觉得这些钱好像是她预先准备好的。「我说……妳之前不是说过妳讨厌待在医院里的七楼病房吗？」我问。「……我也讨厌待在家里。」「对啦，还有家里。我也是……」——第三次返家疗养许可是最后一次，没有第四次了。我们这些七楼病房的病患只能选择死在家里或者死在医院。过去也从没有人逃过这样的命运……这是七楼病患之间口耳相传的条文。我在脑中意识着这句话，同时对着濑津美开口问道：「那妳想去哪里呢？」「…………」「这些钱不就是为了这种时候用的吗？」我想起了她之前对我说过的话——她曾说想在自己身体还能行动的时候离开医院和家里，然后问我是要阻止她？还是要跟她一起走。「其实妳有想去的地方吧？」「没有啊……」「妳都说没有，这样我怎么知道妳到底在想什么呢？」「……我没有任何想去的地方。」她答话的同时，言语中透露出了一股落寞和哀伤的心绪。如果真如濑津美所说的，她根本没有任何想去的地方，那么她身上这些钱，不就是为了一个没有目的地，甚至不知道什么时候起程的旅行而准备的吗……怀抱着这种心情，空虚而永无止境地等待下去，这样的她让我觉得牵挂，而她此时落寞的侧脸似乎更肯定了我的揣测。「……那，你又怎么想呢？」她问。「我……我也没有想去的地方。」「……你不要学我说话。」「我才没有呢。」我们两人在没有任何目标地不断开着车；出发前，我只是凭着一股冲劲想要逃出医院。而她在离开医院之前，则是自己一个人带着空虚的等待心理，默默地准备着甚至不知道何时能够成形的计划，然而……「不管哪里都好，我们找个地方去吧？」我说「咦……」我想，至少我心里确实是怀有这么一种渴望。不论是什么都好，我希望我能够有一个明确的方向。「喂，妳觉得淡路岛怎么样？」「………………」「以我们现在身上的这些钱，要去淡路岛可不成问题哦。」我想，去哪里都好吧，只要不是医院或者家里，只要我们可以不断地移动，去哪里都好。然而，这样并不代表着我们得毫无意义地到处游荡。而是能有一个明确的目标来引领我们前「妳不会想去吗？」「……不会呀……」她答了话之后，又一次循着她一贯的模式，别过头便将视线移到了窗外。那双眼眸此时也同样望着视线那头不知名的远方。她到底……在眼睛里头看到了些什么呢？她到底……又是怀抱着什么样的想法，怀抱着什么期待而决定跟我同行的呢……——一月二十五日晚间佐仓家客厅——「莳绘小姐，不知道这些菜合不合妳的口味……」「谢谢，我很喜欢可乐饼等等这些油炸类的食物呢！」我来到佐仓太太的家里。这间屋子位在距离医院很近的木造公寓里头。今晚我受邀来到了这间屋子里和濑津美的父母亲一同共进晚餐。自从濑津美和阿东优失踪之后已经过了好几天了。起初我们始终都待在医院里面等待消息，不过结果是一点进展也没有。因此，我提出建议，说我们在家里等待各方联络会比较妥当，于是我就负责等电话的工作，每天都来到佐仓太太家里叨扰。几天下来，让我觉得非常不可思议的是，医院竟然在这么短的时间内，从原先不小的骚动中归于平静了。扣除掉偶尔会想起这件事而跑来大骂一番的阿东先生，还有请了积得多到不象话的年假而在医院里头闲晃的我之外，其它的人似乎已经完全把那两名溜出医院而失踪的病患忘得一乾二净了。「话说……莳绘小姐几岁了？」「嗯？啊……二十六了。」「这样啊？好年轻哦。你有小孩子了吗？」「没、没没没有啦！别说小孩了，我连个男朋友都没有呢。」我被问得神经都竖起来了，拚了命地猛摇头——我们在偶尔闲聊的过程中一口一口地一起吃着晚餐。他们将自己的女儿I目前行踪不明的濑津美的相片——挂了好几张在屋子里头。「令千金长得真是漂亮……」「莳绘小姐也不逊色喔。」「啊哈哈，妳过奖了，谢谢。」我稍微应和着陪了笑脸。我的笑声也许不太自然，不过我也不是故意的。毕竟之前我坐在一楼柜台的时候曾经看过她几次，她长得真的非常漂亮。我原以为她是国中生或小学生，不过没想到她竟然已经二十二岁了。、我看着那张相片，即便我和她都是女性，但我仍会被她美得不可思议的外貌给深深吸引。「对了，莳绘小姐，妳觉得这样菜好吃吗？」「嗯？哦，我是很爱吃啦……」我看着照片，正伸手欲拿盘子里的炸薯条时，佐仓太太对着我开口问道：「小女其实很讨厌吃马铃薯呢。」「嗯？可是……我记得濑津美喜欢吃的东西不是马铃薯吗？」「嗯，不过……她其实不是一开始就喜欢的。」佐仓太太所说的话让我觉得惊讶。一方面这句话跟我过去所听到的不太一样，而她提起这件事时，说话的语气也明显变了样。「其实刚开始的时候……是我搞错了。」「……搞错了？」「嗯，我以为她喜欢，所以每天为她做了带回来的……我以为我找到了她喜欢吃的菜，因此非常高兴。」「那濑津美呢？」「她呀，每天我带炸薯条来的时候，她都会乖乖地全部把它吃完，因为她不想让我觉得失望。」说着说着，她也伸出了筷子挟了一块炸薯条然后接着把话说完：「她就是这样的小孩……」她神情落寞地喃喃吐出了这句话后，也抬头将视线再次移回到了濑津美的照片上头。濑津美的照片在屋子里随处可见。而里面的她看来也都非常漂亮可爱。不过，她脸上的笑容，似乎都让人实在觉得她其实是在强颜欢笑。〔……就算自己身上的痛楚可以忍，但别人心里的痛楚，她却怎么也无法承受呀。〕如果真是如此，那么——那么佐仓太太搞不好其实早就察觉到濑津美讨厌马铃薯，但她自始至终只是装作自己不知道而已……我不知道我的揣测是不是正确，不过也许当两个人相互用尽心思要体谅对方的时候，是不是结果就会变成这样呢？变成两个人都会被那看不见的体贴束缚，造成彼此身上难以承受的痛苦……「所以呀，莳绘小姐，虽然我不知道她到底为什么决定这么做，不过我其实觉得很高兴呢。」「…………」「因为她可以在人生的最后……好好任性一次。」听到她这么说，我一时之间不知道该怎么答话，只能默默地听着。我想佐仓太太的想法并没有错。而现在的我，似乎也终于可以理解了。「我这个当人家母亲的，会有这样的想法是不是很奇怪呢？」「我不知道耶……」面对她的提问，我老实地回答了。毕竟这个问题跟从来不会生病的我实在扯不上关系，因此也很难理解。而我也无法想象一个为人母的，在面对女儿遇上这样的遭遇时，究竟会用什么样的方式为女儿着想。……然而，我想如果这个家庭里头，这样的生活已经持续了将近十年，那么为人母的，会有这样的想法也许是再理所当然不过的也不一定。第五章国道1号『我喜欢看地图……』我喜欢看着延伸到日本各个角落的国道1号，让它带着闭上眼睛的我到达所有不知名的地方。我也喜欢也许有一天能载我到各地旅行的车子。然而，不论我学习到了多少知识，那些旅行……终究只是空想。就在我做着梦的时候，我的心，还有我对现实的体认都逐渐变得脆弱。我有泳装，有地图，但我没有未来。宽广的世界仍存在于窗外，然而围绕在我身边的现实却不允许我触碰它。其实只要哪天我闭上眼睛，我就可以离开这里，去一个什么也没有的世界。然而这个世界本身还是会继续运转，不会因为我而消失。……我知道。我知道我的另一半得到另外一个世界去找了。……我知道。但我仍却试着去想象，『如果我的结局不是如此』……这样的想象成天盘据在我的脑海之中，也许已经足以称之为一种期待，一种希望。不过，到头来这样的梦想终究只能是一种空想，永远都不会实现……不论是比基尼泳装也好，如翡翠般翠绿的海洋也罢……胸前那一道长长的伤疤告诉我，这样的期待不是我所能够拥有的……放弃吧。我这辈子多数的时间都在医院里头度过。我无法埋怨，亦无法祈求什么，始终只能在阖上双眼的时间里头解放我的灵魂。除了医院里的七楼病房和自己家里，没有其它去处的处境让我觉得悲哀。我没有选择的权利，但我也没有自己想去的地方，这样的我岂不是太可怜了……即便如此，虚度的光阴溜过，我也已经二十二岁了。「就算一个也好……可以让我喜欢上些什么吗……」就在我自言自语呢喃着的同时，彷佛觉得早已静止的时间出现了那么一点点松动的迹象。这天，我原本封闭的心灵变得非常痛苦和煎熬……——一月一一十六日神奈川县——银色的轿跑车闪亮亮的金属外壳辉映着天空，将冬季清澈的蔚蓝景色披在身上。我们驾着车行进在公路上。尽管这天依旧还是没有找出属于我们的目的地，然而，现在至少油钱和购买日用品的经费都不用愁了。我手里握着方向盘，身旁则坐着刚起床而显得一脸睡眼惺忪、正揉着眼皮的濑津美。「嗯……」「妳醒啦？」「……嗯。」我将方才在自动贩卖机买的宝矿力递给她，然后将车子切进了快车道。再开一会儿车子就会进入两条三线道交会的十字路口。昨天我的提议虽然没有得到她的赞同，不过我仍旧将车子往西边开。我想我心里终究还是得要一个明确的目标。不管是什么都然而，现在的问题是，我对路径一窍不通。而且若是走高速公路，身上这些钱搞不好还是不够……就在我脑中烦恼着这个问题的同时，两条三线道交会的十字路口已经映入前方挡风玻璃之中。我想都没想，正打算直行的时候，濑津美开口说话了：「……这里要左转。」「咦？」「左转啦……」她忽然对我提出了方向上的指示。即便我狐疑地不知道她到底为什么要我这么做，但仍照着她的意思打了方向盘。车子驶进了※左转用的慢车道，转进了一条同样宽敞的大马路。(译注：日本的街道行车方向与台湾相反。〕「妳怎么……为什么忽然要我左转？」「……这条是国道1号……接下来的一段路你就直直开就好了。」「妳……」她忽然冒出来的指示让我着实吓了一跳。过去几天和她一起行动过来，她好像总是表现出一副什么都知道的样子，然而，即便她很可能相当博学，不过这倒是她第一次自发性地对我下了指示。「……妳该不会也想去了吧？」「…………」「哦，那个我是说淡路岛啦。」「……不行吗？」「没有啦，我不是那个意思……」我和她……一个希冀着某个明确的指引而不断地到处游荡，另一个却视线永远望向远方，脑子里在想什么旁人永远不得而知。我处在这样的她身边，实在很难料想到竟然有一天她会主动对我提出指示。「……我没有期待什么。」「咦？」「我也不想要什么泳装……」「妳在说什么？」「…………」「……没有啦。」——一月二十七日爱知县国道1号——冬季蔚蓝的天空下，银色的轿跑车反射着打在身上的阳光行驶在公路上。我们穿过了路上有许多陡坡和急转弯的箱根，现在路面摊成了直线，也没有那么多坡道，变得好走许多。「喂，这里是哪里呀？」我对着濑津美问。「现在在爱知县，再过不久就会开进名古屋了……」因为考虑到我们身上的现金有限，因此我们舍弃了方便快速的高速公路，改走※一般道路。而这样的选择若是由我一个人自己开，那肯定要去哪里都到不了，所以一路上都得听从她的指示。这中间最令我感到不可思议的是，她对于道路分布位置的了解程度，竟比起卫星导航更来得精确且详尽。我不知道她为什么会这么清楚，不过我想她所指出的方向都是正确的。(译注：日本的国道1号并非高速公路，而是一般道路。〕「……下一个路口要转进&quot;号道。」「好。」我听她的话打了方向盘。我看了看窗外。这般热闹的都会是我生平第一次造访的地方。我开车穿过一条条街道，直指着北方。接着，不知不觉间，繁荣的都会景致逐渐变成闲适的田园风光。「喂，我们在那边稍微停一下吧？」车子走在国道上，我在路边看到一间家庭式餐厅，伸手指向它对着濑津美开口问道：「不然我们这几天一直吃的都是便利商店的食物昵。」「……嗯。」想当然尔，我们也不是因为喜欢才挑便利商店的东西吃的。这是因为我们身上的现金不多，而且也没有心情去吃其它的东西。不过现在金钱方面有些余裕了，因此我便提出了这样的意见。「怎么样？偶尔到家庭式餐厅吃个饭其实也不错吧？」「……我吃便利商店的东西就好。」她说完话，头也跟着垂下去了。她看着自己身上的衣服——唉呀，原来是这么回事。她现在身上还穿着松垮垮的男性衣物呢……「对哦，那我们先在那边停一会儿吧？」「……那边？」「那里呀，一间牛仔裤专卖店。」那是一间时常会在国道上出现的，专卖牛仔裤和休闲服饰的批发量贩店。「我想这种店里的衣服价钱一定不贵。」「…………」「那我们过去了？好吗？」「…………」她始终没有回话。不过她也没表示出反对的意思。……以她的思考习惯来看，我是不是可以把她没有提出反对意见的沉默视为某种程度的肯定呢……我们走进了店内。这间店一共有两层楼，楼层面积相当宽敞。濑津美进来以后便好奇地在好几个柜前来回逛来逛去。事实上，这个时候的她表现出来的态度还是和平常一样一句话也不肯说，不过就算外表看起来没什么两样，但我想肯定不是如此。现在的她，跟过去睁着一双无机质的眼眸、始终没有任何反应地看着无聊的电视节目的时候，肯定有着某些不同的地方。她拿起了好几件衣服和裤子，看了看上面的标签，然后陷入了长考。接着每当她试穿一件衣服的时候都会跑过来给我看。「……怎么样？」「很好看呀。」「…………不会很奇怪吗？」「嗯，不会吧。」同样的对话就在她每换一件衣服之后重复了好几次。而她尽管始终没有露出笑容，所有的心情全都不形于色，但依我看，现在她所表现出来的反应，肯定是很高兴的。「怎么样？决定要买哪一件了吗？」「……嗯，我要这两件。」濑津美说完亮出了她最后秀给我看的一件可爱的衬衫，和一短裙，这两件衣服怎么看都是国中生或高中生的品味。但我记得她好像说过她年纪比我长上几岁……然而，两件衣穿到身上，不仅没有一点违和感，而且还非常相衬，可爱的模样不让人对着她展露微笑。「不过那件裙子还是不要吧？」「咦？」「啊——不是啦，我的意思不是不好看啦……」「…………」「我是怕妳会冷啦，冬天嘛。」「才、才不会呢……我不会怕冷的啦……」濑津美极力地驳斥我的意见。而这时候的她，那张白皙的脸庞似乎泛起了些许的红晕——这家伙明明怎么也不会表露自己内心的情绪，这会儿怎么……该不会是害臊了吧？这是我第一次看见濑津美有这样的反应。「欢迎光临！」就在我们走进门后，一名店员带着爽朗的笑声对我们打了招呼，同时将带领我们到一张桌字前面……在买完衣服之后，又沿着国道找到了一间家庭式餐厅。当我看到这间餐厅，提议要到这里用餐时，濑津美仍旧没有回话。不过我说完之后，仍旧自顾自地将车子停到了店内。接着也没看她反对，等我下了车，只见她照样追下车来紧跟在我的身后——我想，她对于我提议要来这间家庭式餐厅吃饭其实本来也就没什么反感吧？甚至，之前我说要帮她买套衣服，她其实心里应该是觉得挺高兴的才对……「好了——妳想吃什么？」我说话的同时也将餐厅的菜单递了出去。这间餐厅不只提供常备性的午餐和一些随着季节更换的套餐，还有自助式的饮料吧和色拉吧台等等，品项相当齐全。(话说，这类型的家庭式餐厅，不管到哪里大概都差不多吧。〕我边想边在心里决定了自己想吃的餐点。「嗯……」就在这个时候，我看到她看着菜单不知道在烦恼些什么。「怎么了吗？妳该不会找不到妳想吃的东西吧？」「……也不是啦……」答了话之后，她开始专注地看着菜单思索了起来。不一会儿之后，她小小声地对着我问了一句：「……你不觉得太贵了吗？」「嗯？妳说这里的东西贵吗？」「嗯。所以我们要不要去别的地方吃？」尽管她这么说，不过就我的看法——不，其实就一般性的餐厅定价来说，这里的餐点价位应该是还好才对；至少我不觉得它开价开得比其它餐厅高……然而，此时我看着她的脸庞，她脸上的表情有种令人难以形容的认真意味。「嗳，怎么说呢……我也不是想都没想就进来的。外面的餐厅大概都是这个价位吧。我们就在这里吃吧？」「……好啦。」她似乎有些不满，皱着眉头又继续将视线移回到了菜单上。〔……是怎样？这家伙难道是个非常节俭的人吗？〕接着又看她烦恼了好一会儿之后，似乎终于决定了她想吃什么了。我看了之后正准备举手招呼服务生过来帮我们点餐。然而，这时候她忽然对我开口问了一句话：「我问你哦，这个饮料吧是什么？」「……啥？」「可以点咖啡或红茶吗？」「…………」我看着她，从她脸上读不出任何一点点开玩笑的意思。继方才她对于这间餐厅的价位发表的意见之后，这会儿我又听到了一句不太像是她会问的问题。我剎时间不知道该怎么回答，不过到头来还是直接作出了解释……「咦？喝几杯都可以吗？」「嗯，不过也只有那个吧台上提供的饮料可以随便喝。」「这样啊……好棒哦！」我不过就是把饮料吧是怎么回事告诉她，结果她竟然露出了让我意想不到的惊讶反应。在我们点完菜之后，她很快就起身踏着愉悦而轻盈的歩伐朝着飮料吧走去。〔……这家伙，该不会是第一次来到这种家庭式餐厅吃饭吧？)我边想边坐在自己的位子上，仔细地观察着她的一举一动。而她则是站在飮料吧前面，又开始为了要喝什么而烦恼了起来。「咦？」就在这时候，我忽然察觉到了一个现象——店里的服务生还有客人们，有不少人都在注意着濑津美，视线不时往她身上飘去。另外和她擦身而过的人竟也全都会忍不住回头再多看她一眼。我想大家之所以会有这样的反应，绝不是因为很少人会像她一样站在飮料吧前面烦恼着要喝什么，而是因为她长得实在太漂亮、太可爱了，让人忍不住多看她一眼吧。事实上，若是再仔细地看到距离她比较近的几张桌子上客人们的反应；从他们的视线中也不难发现，他们之间的话题已经开始围绕着濑津美身上打转了。——嗳，若是我不认识她的话，现在大概也会跟其它人一样，误以为是哪个偶像明星或模特儿来了吧……话说，刚才帮她买的那一套可爱的衣服穿在她身上实在非常搭调好看，这点看在其它人眼中应该也会有同样的感想才对。〔说实话，这家伙若是扣掉那张老是显得不快乐的表情，还真找不出什么地方不配当个少女偶像呢……〕我边想边望着她的身影——就在这时候，她忽然转过头来对着我招起了手……「怎么了吗？」我跑过去站在她的身边，对着她开口问道……看来她拿起了一个红茶杯之后，就整个人不知道所措地愣在那儿了。「我问你哦，我真的可以再这旁边挑我喜欢的喝吗？」「可以呀，飮料吧的东西本来就是妳想喝什么就喝什么，想喝多少就喝多少的。」「可是……人家从刚刚开始就一直被其它人盯着看耶……」「……啊？」「我在想，我是不是做了什么让大家觉得不高兴的事……」我不知道该说她的回答让我觉得有趣还是让人觉得可爱。我笑了笑，然后告诉她别担心，这些东西是可以喝的。接着我们坐回到了位子上用餐，周围人们的视线仍不时往我们这边飘来。每当濑津美一察觉到这些视线，她就会慌张地开口扒着我问些奇怪的问题。比方——「刀子是用右手拿吗？」「啊！该不会这种餐厅其实不可以请服务生来为我们倒水吧？」……等等等等。听到这些问题，我大概可以猜到她真的是头一次来这种家庭式餐厅吃饭吧。而且，她似乎也完全没有察觉到自己的长相究竟多么迷人呢。出了餐厅之后，我们又坐回到车上继续往目的地前去。银色的轿跑车在冬天深邃的天空下持续奔驰着。排气管恼人的杂音和清澈的蓝天形成强烈的对比。「接下来转弯走国道21号……」「好。」我遵循着她的导航指示行驶着，不知不觉中已经来到了岐埠县。过去她总在必要的时候才会回过头来，其它时候都是面向窗外，自顾自地远眺着他方。然而，现在却开始不时地透过车窗边的后照镜，望着镜中映出的自己露出高兴的表情。而这些动作似乎都是想趁着我不注意的时候做的。「……怎么了吗？」此时她留意到了我的视线而对着我开口问道。「没有啦，我看妳好像很喜欢刚才买的衣服嘛？」「没、没有啊……没特别喜欢啦。」说完，她便将视线从后照镜中移开，佯装出方才她的一切动作其实都只是个意外。不过，一会儿之后，她趁着我转头望向别处时又开始注视起了后照镜——看来，她其实也有像个女孩一样可爱的地方嘛……看到濑津美这样的一面，即便她平时都是那一副面无表情的模样，我却也觉得她真的相当可爱。——一月二十七日晚间天已经黑了。我将车停到路边，两个人将椅背向后倒，又盖起了之前偷摸来的衣物充当棉被准备休息了。「我说呀，不知道医院那边怎么样了……」濑津美对着我开口问道。距离我们离开医院已经好几天了。然而我们手上依旧还挂着医院为病患戴上的手环。她问我话的时候，视线还没有转过来移到我身上，而是紧盯着自己手上写着血型和名字的白色手环发问的。「妳觉得我们溜出来会在医院里面引起很大的骚动吗？」我反问她。「……有可能。」「也是喔……」不管是父母亲也好，其它亲友也好，或者是医院里的医生和护士们也罢。就算只是表面上表现出来的态度，一想到他们会因为我们溜出来而担心得鸡飞狗跳，我心里多多少少也会觉得有些过意不去。……抱歉，老爸；抱歉，关心我的大伙儿们，我竟然做了这么任性的行为……「吶，这给妳……妳要用的话可以用。」我边说边将放在药袋里头的手机掏出来交给濑津美。这支手机被我关上电源，一直放在药袋里面。虽然我一点也没打算用它，不过我还是将它带来了。我打开手机，看到一整排的未接听来电对着濑津美说：「妳拿去打个电话给妳家里的人吧。」「…………」她没有回话，不过我仍将手机塞进了她的手中。「至少让他们听听妳的声音。我想他们一定很担心妳的。」我说。她不发一语地呆看了手上的手机好一会儿。然后对着我开口问道：「……按这个键对吗？」「嗯，要先拨区码哦。」「哦……」——哗哗哗哗……几声按键输入时发出的信号音接连响过了之后，她缓缓将手机贴到了自己的耳边。坐在一旁的我也清楚地听见手机里头传来的答铃声。就在第四声铃响结束的同时——「……您好，这里是佐仓家……」电话那头发出来的声音从手机和她的耳朵中间溜了出来，小小声地传入了我的耳中。『喂，请问您哪里找？』「………………」『……喂？是濑津美吗？妳到底I』——啪嚓。在她好好结束这通电话之前，她按下了按键，直接将电话给挂了。「喂，妳不说话好吗……」「…………」她没有回话。接着当她把手机交回到我的手上时，倒是对着我反问了一句：「……你呢？你不跟你家里的人联络吗？」「我想你的家人跟朋友一定也很担心你的。」「……不用吧，我想我还是算了……」我原本想说是不是打个电话给我妹妹好了，不过最后不知道究竟是基于什么样的念头，我终究还是否决掉了这样的想法。其实我心里是有不想让大家担心的想法，和对大家感到抱歉的愧疚感，不过除了这两种心情之外，另外也确实存在着某种其它的障碍。我不知道这样的心理障碍究竟是以什么样的形式存在于我的脑中的，然而，我想除了现在坐在我身边的濑津美之外，跟我们一起住过医院七楼病房的病患或多或少可能都有同样的感受才对。「我说你呀……」面对我的沉默，濑津美隔了一会儿之后倒是稀奇地主动跟我说话：「你呀……第一次听到自己会死的时候……你有哭吗？」「…………」死亡——这么一个词汇唐突地出现在我的耳边，让我一时之间感受到了不小的震撼。面对这个沉重的问题，我稍微思索了一会儿才说：「……我想……应该是没有。」「那你有埋怨为什么只有自己必须面对这样的命运吗？」「这个……我不记得了。」|在一切事情发生的当下，我甚至无法将自己面临到的一切视作我必须面对的现实。我无法将眼前发生的事变成自己切身的体认。然而，也许这只是我的想法，而残酷的现实已经在我心里留下了阴影……——一起在教练场上课的好友买了新车，来到我的病床前对我抱怨着他得背负三十六期的贷款，很辛苦……其它朋友之中，有人已经决定要去哪里上班；有人确定留级；有人有了小孩；另外还有人被女朋友甩了。然而，不管他们后来的发展是好是坏，至少他们都有自己不同的人生。而我……我的未来却已经完完全全被斩断了……从这个角度来看，也许我真有埋怨过，为什么只有我得面对这样的命运吧？我曾经告诉过自己这就是我的命了。但，就算我在理性上可以接受，情感上却无法认同。因此，也许我……真的还有对于正常人生的一丝丝眷恋吧。「那妳呢……妳当时又是怎么想的？」「……我吗？」「嗯，妳觉得自己很可悲而哭过，然后埋怨起这样的命运吗？」「…………」她沉默了一会儿。「……我没有。」「为什么？」我问。「因为，我打从一开始就没有怀抱着希望……」「没有怀抱着希望？」「……嗯，因为我早已经放弃了。」的确，如果一开始面对到这样的命运时就抛弃了希望，那么心理上也就不会再有任何痛苦；若是转过身不去看自己的未来，即便不会再有任何事情让自己觉得快乐，但也不会有任何情再让自己觉得难过了。不过，面对这般消极的想法，我却不由得这么想I那不是太可悲了吗……难道说，对濑津美而言，除此之外，她也别无选择了吗？「……我之前看过电影，电影里说，一匹狼最多也活不过三年。」这时候，她忽然转开了话题，让我听不懂她想说什么。「可是……驴子却可以活九年。」「妳想说什么？什么狼可以活三年，驴子可以活九年的……」「……好像说，因为驴子有用，所以可以活得久一点。」她说话时带着落寞的表情望向窗外。我想这是她为了说服自己，让自己放弃一切希望的借口吧。——一月二十七日晚间佐仓家濑津美房间——我今天也来到了佐仓太太家叨扰。几天下来，阿东优和濑津美失踪的事件没有看到什么进展。我待在佐仓太太家里，在他们两人上班外出的时间替他们等电话，而他们也因此让我参观了濑津美的房间。这是一间六迭榻榻米大的房间，里头放置着一张大床；房里有一面大片的玻璃窗，让里头显得宽敞而明亮。这间房整理得非常干净。不过这句话如果换个方式来说，就代表这里缺少真的有人生活过的气息。濑津美，她的外表尽管看起来稚嫩，但实际年龄却和我相差无几。然而，这间房却怎么看也不像是那个年纪的女性会有的房间……我边想边浏览起了床边书柜上的书目。「这是……地图？」令人感到不可思议的是，这只书柜上摆放的书目中没有漫画、小说之类的书籍，而是一本本的地图集。这些地图集的范围不只局限在全国地图或我们居住的这个县市的地图，还有关东、关西、九州岛、北海道等等各个地区分门别类的详尽地图集。除了地图集之外，书架上还有濑津美每个月固定会购买的杂志、汽车报导。「难道濑津美喜欢汽车？可是她的兴趣应该不在兜风呀……」就我从佐仓太太那儿听来的讯息，濑津美应该没有驾照。另外，也许这么说不是很恰当，不过我实在不认为像她这个年纪的女生应该喜欢阅读汽车报导还有地图。〔……这些书目出现在书架上，究竟意味着什么呢？〕我边想边将视线移到窗边的花盆上。那一面采光良好的窗子前面种了几株盆栽，现在也开花了。「是百合花吗？还有什么其它种类的花是白色的吗……」其实我并不是很清楚那些花花草草的，不过我印象中曾经看过这种花。因此它应该不是多么稀有的品种才对。先不说从这几株盆栽能不能断定濑津美拥有园艺方面的兴趣，不过若是跟方才的汽车报导和地图集摆在一起，我就真的很难理解它们两者之间的关系了。濑津美真是个既美丽又不可思议的女孩呀……此时我身在她的房里，再加上之前见过她几次面时窥得的印象，让我不禁有这样的感想。——嘟嘟嘟嘟嘟……忽然间，一阵电话铃声响起。这并不是我的手机铃声，而是客厅里的电话声。我赶紧从濑津美的房间跑到客厅，就在我将手按在听筒上时，我的脑筋稍微转了一下……——这通电话绝不是佐仓太太和她先生打来的。因为我已经跟他们说过几次，如果要找我就打我的手机，我想他们应该没有忘记这点才对。因此……搞不好这通电话的发话人，正是我所期待的对象也不一定。我紧张地接起电话，「……您好，这里是佐仓家……」『………………』「喂，请问您哪里找？」『………………』我问了两句对方都没有回话。这让我此刻的心緖变得越来越紧张，我试图压抑住内心的悸动，果断地对着话筒出声唤道：「……喂？是濑津美吗？妳到底——」在我开口把话给说完之前，对方就先一步把电话挂断了……我想——不，应该是百分之百可以肯定，拨电话过来的人就是濑津美没错了。我赶紧试着回拨，不过对方似乎已经将电源切断，连接通都没接通。濑津美没带自己的手机出门，因此她肯定是借了阿东优的手机来打的。〔……至少我现在可以确定，他们两个人目前是平安无事的。〕虽说光是这么一通无声电话就下这样的判断是有些鲁莽，不过目前也只能这么想了。另外，虽然我不是很想这么做，不过我得跟阿东先生联络一下，跟他问问他儿子的手机号码，确认这通电话到底是不是用阿东优的手机拨过来的。「可是……他们为什么现在会想到要打电话回来呢……」我的脑中忽然浮现出这样一个疑问，然后径自陷入了沉思……——他们两人一起溜出医院也都好几天了，而过程中一次也没有打电话回来过。然而他们身上带着手机，想打的话什么时候更应该都可以打回来才对……虽然我在佐仓太太面前从没有说出来过，不过我原以为，他们可能不会再跟医院或者家里人联络，因此差不多已经放弃希望了。然而，从他们现在会想到要打电话回来的情况来看——「……是不是，他们现在心理上的压力已经得到抒解，因此而有些许的余裕可以想到要联络了呢……再不然，会是他们遇到了绝境了吗……」我现在并没有任何足以判断的依据，但我希望会是前者才好。——不知道他们两人现在怎么样了……我站在看似不会再度响起的电话前，心里带着这样的希冀等待着佐仓夫妇回家。——一月二十八日岐阜县关原町我们现在直行在国道21号上。黄昏的天空下，车窗外可以看见斑斑白点从天上飘下，而且越飘越多。「……怎么了吗？」濑津美问。「嗯，下雪了……」不知不觉之中，公路的两侧已经堆起了白雪。我不知道我们什么时候把车子开进积雪地区，然而现在看过去已经是整片白茫茫的景致了。……这下子不太妙呀。刚才我确认过，这辆车用的轮胎不是雪胎。而且接下来的地区可能雪会下得更大，那就很麻烦了。「喂，这一带下雪会下得很凶吗？」我对着濑津美问。「咦？」「没有啦，我是想说，如果雪还会下得更大的话那我们车开起来可能会有点辛苦……」虽说现在路面上还没有积雪，不过若是在雪下得比较凶的地区，路面哪里冻住了其实也都没什么好惊讶的。这么一想，在雪地上开车，我在教练场上也只在教案上看过而已，也许还得想办法帮车子装上雪炼呢……我边想边把车子停到路肩。「……怎么了吗？」「嗯，我看看行李箱里面有没有雪炼。」我答了话之后打开行李箱。然而，在我探头进去之后只从行李箱里头找到一颗备胎，还有一些工具，但没有找到我要找的东西。〔我想如果雪下得更大的话，雪炼肯定是必要的吧……〕以我们现在身上的现金恐怕买不起雪胎，所以至少得去找间加油站买个雪炼吧。然而……附近就连加油站也没看到。「喂，接下来会怎么样妳知道吗？」「接下来……是关原町。」「这妳刚刚已经说过了，我想问的是，接下来是不是很容易下大雪的地区？」「这个……我不知道……」她答话的语气中带有一股莫名的落寞。她的反应让我感觉到有些印象上的落差。毕竟她对各个地区的道路分布都知道得非常清楚，对这辆车的规格什么的也几乎是了如指掌。然而，相较于这个她更可能知道的事情，她却没有答案。「好啦，那我们接下来就小心点开吧。」我们接着又继续把车开了出去。天色已经暗下来了。然而，飘雪的情况却似乎没有停歇的迹象。……也许这么下去有点危险。其实我们的车速并不快，不过我听到轮胎压在地上已经有一些喀哩喀哩的声音，再加上马上就要入夜了，整片路面迟早会冻起来的。因此，我想现在比较适切的作法应该是先找个地方停下来等隔天天亮了再说吧。我在这样的想法中握紧了方向盘，同时转头对她开口问道：「我说，因为雪下得有点大，所以我想先往镇上开过去，怎么走好呢？」「这样的话下一个十字路口要左转。」「好。」我应了一声，同时在路口处打过了方向盘。然而……「……喂，这么走真的对吗？」「咦？啊……嗯。」「可是这边积雪积得很严重呀？」而且，这条路的路面宽度不像是国道，一下子便窄了许多。虽说这条路也是一条双线道，不过我想车子交会时，若是不让一下大概是无法过去的；再加上视线不良，放眼望去不但没有其它车辆行驶在这条山路上，甚至连一间民宅也看不到。情况更糟的是，这条路上的积雪不只是在道路的两侧，甚至连路面上都堆起了雪堆。……我看这倒不是她指路的方向出了问题，而是方向对了，但在这种天候下不见得真的能够行驶。其实在刚才那一句问答之中我大概也渐渐明白了，她的知识可能并没有涵盖实际的应用层面，纯粹只是死的知识而已。「唤、啊，糟糕——」一个意外让我不禁扬声叫了出来——轮胎打滑的情况传到了方向盘上。我想就算我们车子现在用了雪胎，面对像这样整条路上积雪的情况恐怕也没办法应付……——铿！喀哩喀哩喀哩……「咿呀！」车尾的保险杆在路旁的护栏上稍微碰了那么一下。「喂、喂！车子没事吧？」她急忙地问。「嗯，像这样轻轻撞一下是没什么关系的啦。」重点是，如果雪积得再厚些，车子不能开了就麻烦了。——路上下雪，这边既没有民宅又没有其它车辆经过，如果真不能动的话……我担心地想找个地方回转，然而车子开了一会却没看到可以让我回转的地方；就算有也都积雪积得严重，根本没办法让车子调头。皑皑的白雪持续飘落，似乎没有停歇的迹象，看起来地上的积雪应该会越积越厚。现在是一月，雪大概只有可能下得更大，却没有机会融化和消退。眼下周围已经一片漆黑了。我仰赖着车头的大灯行进，小心翼翼地握紧了手中的方向盘。「……对不起。」I濑津美坐在副驾驶座上露出了一脸不安的表情，忽然小小声地吐出了这么一句话。我原以为就算天塌下来这句话也不可能从她的口中听见，不过此时她心里搞不好也觉得她该为了这个结果负责吧。「别在意啦，这不是妳的错。」我笑着要她不用担心I这样的说法有点逞强，不过我仍对着此时表现得有点反常的她这么安慰着。然而……〔搞不好这条路在冬天根本是禁止通行的呢……〕即便我要她不用担心，不过心里则是渴望着能够早一刻离开这条艰困的道路，而显得有些焦虑。我们弯进这条路已经开了半小时了，却没有会过任何一辆车，甚至连一间民宅也没有看到。我刚刚看了看手机，虽说我大概早也已经猜到了，但手机上也毫不拐弯抹角地显示出这里收不到讯号。一想到可能会死在这种地方，我的掌心就不自觉地冒出了汗水。接着我们又持续开了一会儿，终于在远处看见了一盏灯火。「……有房子了。」我的声音不自觉地发出了颤抖。一片漆黑的山野中不断地下着雪，一盏灯火出现在这个画面中真的让我大大地松了一口气。「我们终于可以不用再开这条山路了……」「……嗯。」不晓得是不是我多心，我看她此时脸上的表情也稍微缓和了下来。「我们绕过去看看吧。」我在这句话中道出的不是一个提议，而是知会。毕竟这条山路再开下去不晓得还要开多久，再这么继续在黑暗中开下去，我觉得那绝不会是一个明智之举。至少该跟他们借个一条雪炼吧。住在这里的人家，我想他们应该会有的。另外，若是能拜托他们让我们在他们家里待到早上，那更是再好不过了……我打着这样的主意将车子开往那间亮着灯火的人家。「晚安，打扰一下！」来到这间沿着山路旁搭起的民宅，屋檐上早已经堆起了雪，我们将车停到屋檐处，然后下车到玄关前先试着敲了敲门。这栋建筑看来颇有古风，像是乡间田野中常可以看到的房子。从外观上来看似乎也已经有相当的年纪了。「晚安，请问有人在吗？」房子并没有门铃，因此我是轻轻敲着门对着门内问的。就在我重复了几次同样的动作之后，眼前的木门终于缓缓向外推开了。「呼??今天很冷呢。」门里头出现的是一位穿着塑料长靴头上戴了一顶草帽的老太太。她带着和善而平缓的语气和独特的口音出了声。「抱歉，我们的车子在这样的大雪中没办法继续开了……」「唉呀呀，真是辛苦你们了，竟然在这么晚的天色下开在山里呀。」「所以不好意思，我想跟您打个商量，不知道能不能跟您借个雪炼？」我边说边望了一下这户人家停在中庭的小型卡车——果然还是要有的……住在这样的山里，车子肯定是生活上必备的工具，而且我猜这辆车碰到大雪时的对应装备应该也相当齐全才对。（……我想他们应该会有预备的雪炼吧。）我边想边等着老太太回话，就在这时候——「嗳，先别说这个了，快点进来吧，我看你身子都冷了吧？」「啊、那个……老奶奶，您等等——」她完全不打算听听看我想说些什么，一股劲儿地就拉住了我的手往屋里头走。我看了看濑津美，她的手也被这位老奶奶拉着牵到了屋内。「别客气了，我们刚好在准备晚餐呢。」我们就这么跟着她进到了屋子里头。我们被带到了客厅之中。这间客厅中央有一个地炉，地炉以外的部分则铺设了木板。地炉底下生着柴火，啪啪啪地燃烧着；周围的墙上挂了萝卜、干香菇，还有其它我不知道名字的蔬菜。我看着看着，觉得自己彷佛走进了一处电视里头常见的农人家里。「你们待在外头一定冻坏了吧？别客气，就当成自己家里坐吧。」是关西腔吗……我这么猜想，不过却又觉得有些不同。老奶奶说话的语调非常柔和，面带微笑地还为我们端上了茶水。「谢谢，不好意思……」我点点头，对着老奶奶道了谢。坐在地炉前面可是我生平头一遭经历到的情况。暧和的程度远远超出我的想象。就在我正想喝一口茶而抬起头来的时候，视线和坐在一旁的濑津美对上了。「………………」「………………」我们没有交谈，不过却彷佛可以心灵相通，知道对方想说些什么。来到这里完全是误打误撞，不过我们也不是小孩子了，对于对方所释出来的善意和当下的气氛当然能有一定深刻的体认，更别说现在招待我们的是这么一位为人亲切的老奶奶了。我和她相互交换了一个苦笑，然后餟了一口热茶。一口一口把茶喝完了之后，我对着老奶奶缓缓开口问道：「那个，老奶奶，不好意思，关于我刚刚跟您提到的雪炼……」「喔，你别担心，雪炼你要几个有几个，有需要就带走吧。」「这样啊，真是太谢谢您了。」I我答了话之后将空茶杯置到地上便起身站了起来。就在这时候，老奶奶对着我开口问了：「怎么了吗？你们急着赶路呀？」「喔，不，那倒没有……」「那就别急着走，今晚就留下来过夜吧？现在这个时间就连我们住在这里的人都怕危险而不太敢出门的呢。」「………………」「………………」我和濑津美在没有预期的情况下视线又彼此交会，透过两人的眼神来交换意见。至于主题则是老奶奶提议的『留下来过夜』。其实就算有了雪炼，我也没自信把车子开在晚上铺满雪的山路上。若是能在这里留到天亮，那当然是再理想不过了。因此，老奶奶的邀请对我来说实为不小的帮助——我试着用眼神让濑津美明白我这样的想法。「……………………」对此，她显得有些困扰地露出了苦笑，不过我看她并非对于这样的方案特别反感，因此我便答应老奶奶的邀请了。「谢谢您的邀请，不过我们真的可以待到早上再走吗？」「可以可以，回来过年的孙子们刚走，现在这房子里就只剩下我一个老人家，你们不用介意啦。」老奶奶带着平和的语气答应了，脸上的表情显得有些高兴。这一切都在我们意料之外，不过已经好几天没有在床垫上盖着棉被睡觉了……一想到这点其实我心里还觉得挺高兴的。「那我先去准备晚餐，你们先洗个澡吧。」老奶奶说完便起身朝着厨房走去。在她一句话引导之下，我便转头对着濑津美开口问道：「怎么样？你要先去冼吗？」「没关系，谁先都好……」我和她，两个人这几天都待在车内，加上冬天也不太容易出汗。不过有这个机会，能泡澡当然是很令人高兴了。「快点去吧，不然热水都要凉了。」老奶奶从厨房端了一个锅子，将它挂到了地炉上，然后将另一只手持着的浴巾和浴袍递了出来。「来，这是给哥哥的，这是给妹妹的。」「哥哥？」「……妹妹？」「你们家妹妹真是可爱，跟我们家孙女就是不一样，呵呵。」老奶奶说完张口发出了爽朗的笑声。这时候，我和濑津美做了第三次的眼神沟通。这次的议题是关于所谓的兄妹。「…………」我想在这个情况下，与其积极地否定，倒不如就让这个话题就这么带过会比较好。因为若是要解释我们两人之间的关系，那就算是用尽千言万语恐怕说也说不清I我将这样的意念灌注在我的眼神中试着让濑津美明白。「…………」看来她确实感受到了我的想法，轻轻地点点头。「老奶奶，这样的话那就让她——我妹妹先去洗澡好了。」「哦，这样啊？其实你们可以一起洗呀，我们家的浴室很大呢。」「………………」……怎么办？关于这个新的议题，我试着再次使了眼色给濑津美。然而……「………………」濑津美选择别过头，以非常有趣的反应回避掉了我的视线。这副模样看来真是有些滑稽可爱。「奶奶……我先洗好了。」「这样啊，难得有一间大浴室，不用很可惜呢。」「那个……我、我哥他好像……没打算这么早去洗澡……」面对老奶奶的劝说，濑津美结结巴巴终于还是把话给说清楚了。站在一旁的我，对于此时她的反应和平时那般冷淡态度上的落差感到非常有趣，乐得处在一旁观看，然而最后还是忍不住调侃了她一句：「喂，濑津美，妳洗澡可别洗太久，让我没有热水洗哦！」「我、我知道啦……」她答话的的同时恶很狠地了我一下。而那张可人的五官摆出来的凶恶表情，散发出来的气势却显得格外惊人。「老奶奶，感谢您的招待。」「别这么说，不过是些粗茶淡饭而已。」我们吃完了老奶奶亲手做的料理之后深深地呼了一口气。话说，像这么有模有样的餐点已经好久没有尝到了。事实上，几天下来，扣掉今天晚餐和昨天中午在家庭式餐厅吃的那一顿之外，全都是在便利商店随便买东西吃。这种吃饭方式自从我住进医院以后就再也没有过了。「我看你们今天也早点休息吧，都累了吧？」老奶奶边收拾着餐具边对着我和濑津美说道。我看到她的动作，赶紧站起来要帮忙，然而，抢在我之前——「我来帮忙收吧。」濑津美已经先一歩站起了身。「没关系没关系，这点小事我自己来就好，你们不用麻烦。」「可是……」「别可是了，我看小妹妹妳也累了吧？妳看起来气色不太好呢，早点休息吧，明明是个漂亮的女孩子家，要好好爱惜身体，不要让憔悴的病容破坏了妳的天生丽质喔。」「………………」老奶奶并没有恶意，不过一句话还是让濑津美垂下了头。而这时候得换我来说说话，让濑津美别在意自己没办法帮忙的事了。「那就麻烦您了。我妹妹真的累了，那我们就先休息好了。」「隔壁房间小，可能要委屈你们了。我已经铺好了床，你们好好休息吧。」「谢谢，那我们先失陪了，晚安。」我们对着老奶奶点点头，然后便转身离开了客厅。我们来到隔壁房间，这个有点狭窄的房间地板上已经铺好了三张床。「话说，我们也好久没有睡在床上了呢。」我说。「……嗯。」我想都没想便倒到了床上，抓起了被子一拉便盖到了头顶上。打从我们从医院里的七楼病房中溜出来，已经过了整整一个礼拜。期间我们始终都是将车子里的座椅椅背倒下来就睡在车上，因此有铺好的被子可以睡，这种触感真的令我非常怀念。忽然间，耳边传来濑津美的声音。「怎么了吗？」「……你不可以超过这条线哦……」她说话的同时伸手指着我的垫被和她的垫被中间的交界处。这样的举动就好比小学时的男生女生之间常有的那种划分领地的举动。「喂，这话是我要说的。妳睡相差，好几次都翻过来睡在我的身上，我都还没说妳咧。」「……讨厌。」她说完便径自翻过身去不再理我了。我在想，此时她那张美丽的脸庞搞不好气得两个腮帮子胀得鼓鼓的呢。不过其实每当她有任何不同于往常那般冷淡的反应时，总会别过头去，让我无法窥见她脸上的表情。因此，说她脸上会有什么样的反应，终究也不过只是我自己胡乱猜想而已。不过，当我一想到她若是真的气到鼓起了一张脸，心底不知为何就觉得乐了起来。「唉呀，你们还没睡呀？都累了一天了，不早点休息不好哦。」此时老奶奶洗完了碗盘也进到了房间里来。她钻进了一旁的被窝之后对着我们说：「那我老人家要关灯睡觉啰，晚安。」「好的，奶奶晚安。」一片漆黑的房间中，只有一盏小夜灯微微亮着。我在被窝中醒来，转头便看到濑津美躺在一旁酣睡的样子。〔……我看这家伙真的累了……再说，今天也真的发生了不少事呢。〕我边想边大大地伸了一个懒腰。光是这么一个小小的动作，平常在车子里头睡的时候可是何等的奢求呢。伸完懒腰之后，我转过头静静注视着她。我和濑津美之间只有短短数十公分的距离，近得甚至能感觉到她的呼吸。只要我稍微翻个身子，这近在咫尺的范围就可以让我压在她的身上。这种危险的距离感让我不由得心跳加速。平时我和她一起睡在车内的时候，鲜少意识到她身为异性的这个部分。毕竟一旦想到我们两人身为绝症患者的立场，不论怎么样的激情都会在瞬间被狠狠浇上一盆冷水。我看着她那张美丽的脸庞。这张脸若是端看外表真是可爱到令人难以抗拒。加上今天几次发现到她令人意外的另一面，此时看着她没有任何防备的纯真睡脸，我的心脏便不争气地怦怦乱跳。「呼噜……呜……拉面……」……拉面？「又是一句无厘头的梦呓呀……」「呜哇！」|一阵掀被声中，她拨开盖在身上的棉被，左右开始乱翻乱滚了起来。（天哪……真拿她她没办法……）我起身伸手抓回了被她掀开的被子，重新盖回到她的身上。……这家伙，不但爱说梦话，睡相也真是有够差劲的了——话说，这模样跟她平时醒着的时候那种落差也未免太大了吧？忽然间，我想起初次和她在医院里头邂逅时的情景。当时的她口中还永远都只有『没有啊』三个字呢。现在虽然也总是成天都带着一副茫然的眼神望着不知名的远方，让人不知道她脑子里到底在想些什么。不过我想我渐渐地可以开始看到她心里不为人知的一面了。关于她身上这个可能只有我才了解的性格面，让我不禁在心里为此感到高兴。然而……只要一想到接下来我们得面对到什么样的未来和人生结局，一股哀愁也同时涌上了心头。——一月一一十九日早晨——昨日的那场纷飞大雪，彷佛只是上天对人们开的一场玩笑。一大早，冬天澄澈深邃的蔚蓝天幕便高挂在我们头顶。「那你们小心一点哦，路上还有些积雪呢。」「是，谢谢您的招待！」此时停在老奶奶家、庭前的银色轿跑车，INTEGRA已经装上了她送给我们的雪炼，整装完毕随时可以动身了。「那我们差不多该出发了。」说完，我和濑津美一同扳开车门坐进了车厢内。就在这时候——「唤呀，这个你们带着，我怕你们路上会肚子饿。」老奶奶边说边递了一只塑料袋给我们。「老奶奶……谢谢您。」濑津美深受感动地说。「妹妹要跟哥哥好好相处哦。」说完，我和濑津美一起对着车窗外头的老奶奶挥手，然后引擎发动后，便再次开上了四处堆着白雪而显得色彩斑剥的山路。银色的车子再次奔驰在山路上。轮胎碾过结晶的霜雪发出喀啦喀啦的声响，我们踏过积雪的柏油路持续前进着。开了没多久，我们就得把之前装好的雪炼给拆下来了——方才出发前老奶奶在教我们装上雪炼的同时也告诉我们，若是车开进了市区或者高速公路，雪炼就得拆下来才能再跑。「我说呀……」坐在副驾驶座上的濑津美忽然开了口。「怎么了吗？」我回问了一句。「……那个老奶奶呀，真是个好人呢。」她说。「是啊。这个世上也是有像她这么好的人存在呢……」我手里拿着老奶奶给的饭团，带着深刻的感触答了话。老奶奶递给我们的塑料袋中装了她为我们两人包的饭团，还有昨晚吃剩的※筑前煮。(译注：筑前煮，一种以鸡肉或者猪肉搭配蔬菜，加上酱油、味酣和糖炖煮而成的日式年菜。〕虽然我们是无心的，不过直到最后分别的那一刻为止，老奶奶始终都以为我和濑津美是一对兄妹。然而，我想这样也好吧。而濑津美大概也会有同样的想法才对……我想着想着，对着坐在副驾驶座上的濑津美喊了一声。「喂，濑津美，我说呀……」「嗯？」「什么『嗯』？妳不是应该回答：什么事呀，哥——才对吗？」「………………」我当然不是认真这么说的，纯粹只是开个玩笑而已。不过我因为想看看她听了会有什么反应，所以还是忍不住开了这样的玩笑。她垂着头。我原以为她会就这么低着头持续好一会儿，结果没想到她很快地便回应了。短短地回了话之后，濑津美便又撇过头将视线移向了窗外。我不知道此时此刻她的脸上究竟会写着什么样的表情，但我想应该不会再跟以前一样茫然地望向远方，而应该是被人调侃之后显得有些羞怯和气愤的样子才对。——一月二十九日滋贺县琵琶湖湖畔——我们将车停到琵琶湖边的潮线前面，下车眺望着整个湖面。凛冽的寒风夹带着雪花片片在冰冷的湖水上染上了斑斓的白色。湖上的浅波像海浪一样轻轻拍打在岸边。此时，濑津美迈开了脚步缓缓朝着湖中心走去，而这一幕，似乎几天前也发生过。「你觉得怎么样？」她问。「妳是说，就这么走进湖里，是不是会死得比较轻松的这个问题吗？」「嗯，我想应该会比死在海里面好些吧……」「我不知道妳这样的结论究竟是打哪儿来的。」「因为……海水比较咸，身体也会浮起来嘛……」「……这还真是了不起的推理呀。」在冰冷的北风和不断飘落的细雪之中，我和她交换着这般不知道到底是玩笑还是认真的词。而这时候，她一度缓下来的脚步此时又再次朝着湖心跨了出去。「……你还是不打算阻止我吗？」她问。「嗯，因为妳没打算今天就结束自己的生命吧？」「……嗯……也许吧。」距离我们的目标I淡路岛，究竟还有多远呢……对于那个地方，其实我们并没有特别的向往，或者有什么非它不可的执着。然而，对于没有任何目的地而到处游荡的我们来说，它却让我们这一趟旅程有了最起码的终点。因此，我想即便我不阻止，濑津美的脚歩大概也会在踩到湖水之前停下来吧……我的内心笃定地这么想着。——一月一一十九日滋贺县草津市——「下一条岔路回到国道1号……」「好。」在这个转弯处，我们的车子从国道8号驶回到了国道1号。我依着濑津美的导航指示即将开往滋贺县的草津市。「我问你喔，现在我们身上的现金还够吗？」「够吧，大概还有三万圆左右。」之前帮濑津美买了一套衣服，不过后来的餐费也都在便利商店解决，因此没花到什么钱。「怎么了吗？」我问。「……那我们要改走高速公路吗？」「高速公路？走一般道路到不了吗？」「是可以开到附近啦……不过因为最后还是得上需要付费的路线才到得了……」「这样啊？也对，是要到淡路岛去嘛。」我是不太清楚，不过去淡路岛好像要经过濑户……还是哪一座桥吧？总之不过桥没办法去。「如果要走高速公路的话，那我们就从草津先上外环道吧。」「好。」我依照她的指示从濑田东侧的交流道接上了名神高速公路。这条高速公路比起我们过去行驶的一般道路相对来得平整许多，看得出来是有花功夫去维护的。一路上没有任何的交通号志，视线辽阔的程度也让初次走上高速公路的我开起来非常顺手。但有时候我开在右侧的快车道时，后面却有高速行驶的车辆从我后方跟过来，然后超车，这点倒是让我觉得有点害怕。这是因为我起初不懂右侧方向灯和闪大灯两种车驾驶间的信号所代表的意义，弄懂了之后就觉得高速公路开起来真的很舒服。「那辆车好炫呀……」「……嗯。」一辆车以飞快的速度超过我们，让车速保持得非常悠闲的我和濑津美彼此对望了一眼。此时她的反应和平常有些不同。平时的她始终都是带着一副空洞的眼神望向窗外，不过上了高速公路以后却稀奇地开始对着其它车辆东张西望……话说，她到底为什么会对汽车如此知之甚详呢？一想到这点，我便伸手指着方才高速超车的那辆车对着濑津美开口问道：「喂喂，那是什么车呀？」「…………」「唉呦，妳就当是猜谜游戏嘛。」「……丰田Celica，Overview。」「那现在超过我们的这辆呢？」「哇……妳对车真的很清楚呢！」说实话，她讲的到底对不对我也无从得知。可是因为她平时鲜少开口，看她答出一辆又一辆汽车的名字，看来很高兴的样子，于是我也一辆又一辆地接着问。「蓝色的是Eunos，红色的是爱快罗蜜欧……」接连两辆从我们车边超车开过去的车子，她也照样瞬问就答出了两辆车的名字。我说着伸出手指着一辆卡车对着她开口问道——由于她平时是在太少将情绪显露在脸上了，因而让我一时兴起想看看她困顿的表情。「…………」「哈，卡车妳果然就不知道了吧？」「……NISSAN……ATLUS10。」「喂……天哪，妳会不会太猛啦？」我挑了卡车其实就是坏心眼地想要考倒她，不过没想到她连卡车都这么清楚。「……妳对这车清楚的程度应该可以拿出来炫耀了吧？」……是吗？」「是啊，我觉得妳可以嚣张一点没关系呢。」「…………」她没有回话。不过从她的反应看来，似乎是有点害羞的样子——虽然我还是不知道其中的原因为何，不过我想她肯定很喜欢车子吧。「我说，到了淡路岛，车子要不要换妳来开开看？」「咦！可是……可是我没有驾照……」「没关系啦！在海边开车一定很享受的！」我想淡路岛那里没人又空旷的地方应该要多少有多少吧？加上这辆车又是手排的，开习惯了应该会觉得很有趣才对。「妳不会开的话我可以教妳哦。」「…………」「啊……话说，我也才刚学会开车就是了。」「……嗯。」这下对于前往淡路岛除了看花之外，没有特别想做的事情的我们来说，又找到了另一个新的目的了。——一月二十九日名神高速公路大津休息站——我们在高速公路上才稍微跑了一阵子，结果已经可以看到大津休息站了。因为身体上的缘故，这趟旅程要继续下去的大前提就是不能让自己累倒。因此我们便先绕进了休息站稍停了一会儿。而这时候刚好有一辆旅行团的游览车也停了进来，整个休息站显得非常热闹。我和她下了车便开始在自动贩卖机区还有土产区闲晃着。『喂、喂，你们看那个女孩……』看来游览车上载着的是修业旅行的学生。他们看到濑津美马上便七嘴八舌地聚集谈论了起来。其它休息站里头的服务生也不时将目光飘到我们这边。……嗳，这个家伙可人的外表真是走到哪里都这么引人注目呢……当然，濑津美本人倒是始终没有这样的自觉。「喂、喂……我的头发是不是睡塌了呀？」「我该不会把衬衫穿反了吧？」——每当她留意到周围的视线，总会问我这些有的没的问题。若要说会有这样的反应才像她嘛，那倒也是。当我们买完东西准备回到车内的时候，她忽然伫足停了下来。「怎么了吗？」「…………」她没有回话。然而视线却投射到了远处几个正在打公共电话的人群身上。「妳该不会是想打电话跟家里人联络吧？」「……之前我打回去的时候，是一个陌生人接的……」「陌生人？在妳家里接你们家的电话？」她点点头，接着便跨歩朝着公共电话处走去。「喂，妳要打可以用我的手机打呀？」「不要啦，这样会害你缴很多电话费……」她抓起一只听筒，投了铜板进去之后，慢慢地将自己家里的电话号码输入进去。没过多久，我便听到她所使用的公共电话吃掉预放的零钱声音——喀当——不过由于周围人多，今天我无法像上次坐在她旁边一样，清楚地听到她和电话那头交换了什么样的对话。第六章Roadster这天正午过后，我依旧来到佐仓家，就在我站在玄关门前——嘟嘟嘟嘟嘟嘟……地电话铃声忽然从门内窜了出来。我赶紧取出了佐仓太太交给我的备份钥匙，开了门便赶紧冲向电话机旁。「喂、喂？这里是佐仓家，请问您哪里找！」「喂——喂？喂？」听到对方没有回话，我的心情越揪越紧。这通电话的来电显示是公共电话。虽说并不是从阿东优手机打来的，不过若是濑津美同样也有可能会用公共电话打回家里来。「喂，是濑津美吗？濑津美，拜托妳说话好吗？」说完前一句话后，我试着保持短暂的沉默，屏息等待对方的回复。接箸，双方一阵沉默之后对方终于开口了『……妳……妳是谁？』这句话像是雨滴落入水洼一般，细微的声音稍纵即逝。「我、我是医院里的柜台小姐，我叫莳绘。为了方便联络及处理一些事情，我现在白天都会待在你们家里等待妳跟我们联系。」我一口气把话给说完，声音在莫名的悸动中显得有些颤抖。『……是……是不是妈妈出了什么事？』「不，不是。妳妈妈没有问题，别担心……」又听到她的声音之后，我稍微冷静下来了。我深深地吸了一口气，然后将几天下来发生的事情全盘告知了濑津美——从我在偶然间接到这起协助寻找自用车的请托，然后到我现在自愿来到佐仓太太家里，帮忙守候各方联系的经纬；这其中也包含了阿东先生发怒的事，还有我们已经向警方请求代为搜寻并确保濑津美和阿东优两人人身安全的事。『……我可以请妳告诉我一件事吗……』濑津美听我说完了整件事情之后对着我开口问了一句：『我妈妈她……说了什么？』「这个……」面对这个问题，我一时半刻之间烦恼着不知道到底该怎么回答——面对佐仓太太和她的先生，不论我们怎么问他们关于这件事的感想，最后得到的都只有一个答案——他们希望女儿最后可以好好任性一次——然而，我却不知道我该不该把这句话转告给濑津美本人知道……——哗——「啊！等等——」我听到公共电话吃掉最后余额即将挂断的声音，慌张地叫了出来。然而，终究还是没有赶上——啪嚓——嘟……嘟……嘟……嘟……电话中响着通讯中断的提示音，我茫然地站在原地发呆发了好一会儿……「至少……双方面的沟通上算是有一点点进歩了吧……」我忍不住这么安慰自己。现在我至少可以确认濑津美平安无事，大概阿东优也一样平安。于是我赶紧拨电话给※NT(译注：NTT，日本电信电话公司，日本国内最大的民营通讯业者。〕。之前我在接到濑津美拨来的第一通电话时也曾询问过阿东优申请的手机电信服务业者，不过他们似乎不太能给出门号持有人确切的发话地点。另外，除了刑事案件或明显关系到人身性命安全的例外状况，以我们现在自立调查的情况来说，他们甚至不能提供这方面的协助。然而，这次濑津美用的是公共电话。如果我把详细情形告知NTT公司里头具有一定层级的主管，他们应该可以帮助我们查询公共电话的发话地点才对。「这样啊……濑津美打电话回来了呀……」「对，我请了电信公司帮忙查询他们现在拨电话的位置，确切地点是在滋贺县大津名神高速公路的大津收费站。」我将中午发生的事告诉了兼差下班回来的佐仓太太。「那妳打算怎么办呢，莳绘小姐？」她问。「我想去一趟看看。」虽说这件事跟我没有关系，不过既然已经涉入到了这地歩，要我站在一旁袖手旁观，我实在没那个耐性——而且我的年假还有剩着。虽说这么去不见得可以见得到他们俩，不过若是他们遇上了什么困难，也许我有机会能够提供一定程度上的协助……这是我答话时脑子里怀有的想法。「对于妳的决定……我并不反对，不过莳绘小姐……」「嗯？是。」「这次的离开医院，是她第一次凭着自己的意志决定的事……我希望妳能够让她选择自己想做的事情，不管遇上什么问题都不要拦她。」「……我知道了。」我点点头，然后转身离开了佐仓太太家。我手上现在并非握有任何其它的线索，不过还是决定先行动身。我回到了自己的房间，先试着联络一位朋友。其实是因为虽然我打算往滋贺县去，不过我并非是有车阶级。而且虽有驾照，但几乎没有实际在公路上开过车，真要自己开我还不太敢开。再说，濑津美打电话回来的地方是在名神高的滋贺休息站。现在他们可能还要往更远的地方走，因此我打算找我那位日子过得很清闲，应该可以空出时间帮忙的朋友帮我开车，由我来付油钱跟过路费。「喂，我是莳绘。好久不见，那个……我有事情想找妳商量……」………………………………「不行吗……」我叹了一口气。会有这样的结果我早也已经猜到了，不过这下子同事那边就全都碰壁了。我想，这次因为还关系到两位病人失踪的事件，让她们更不想淌这趟浑水吧……我接着试问我的大学朋友。她们刚开始都当作一次小小的旅行，因此还听得满开心的，不过一旦话题切进了重点——『抱歉，这件事情听起来有点复杂，我想我还是算了……』我听到一句又一句这类的推辞，结果又让我吃了好几次闭门羹。……唉，说起来会有这样的反应我也不是不能理解啦。毕竟我自己也是偶然被卷入了这起事件的。如果立场对调过来，是我受到这样的请托，我想我大概也会回绝掉吧。「呜……怎么办好呢……我又没有可以帮忙的男性朋友……」其实女性的有车阶级原本就少，而我自己也只有驾照，却没有实际开车上路的经验，实在也不能怪其它朋友都没有车。短短的一个小时之间，我的计划就这么狠狠地被浇了一盆冷水。就在我打算使出最后的手段，想打电话给租车公司的时候……嘟嘟嘟嘟嘟嘟……一个不熟悉的号码随同电话铃声浮现在我的手机屏幕之中。「您好，我是莳绘。」I『午安，我听说妳要去滋贺是吗？』「是……请问您是哪位？」『我吗？我是昭岛——我该算是妳大学时代的学姊吧。』她说话时的声音甜美，语气却显得非常活泼。但坦白说，我不记得有这个人。『妳刚刚打了很多电话在问有没有人能帮忙吧？』「是……妳该不会是从那边听到这个消息的吧？」『对呀，我可以帮忙哦，我现在就去接妳好吗？』「啊、好，那就拜托妳了……」我接着告诉她我的地址，然后以最迅速的动作开始整理行李。昭岛……也许是方才我打过电话的朋友告诉她这件事的。这是偶然也好，不是也罢，总之在我正打算放弃这个方法时，接到这通电话真的是为我带来了不小的帮助。一个颇为引人注目的煞车声中，一辆红色的敞篷车在我的面前停了下来。「抱歉，让妳久等了！」推开车门走下来的是一名穿着套装、身型显得略微娇小的女性。「忽然给妳添了麻烦，真是不好意思……」我说。「别介意，整件事情我大致上已经听说了。」她边答话边打开敞篷车的车顶，同时坐进了驾驶座中。「快，上来吧II那个……是莳绘小姐对吧？」「啊、是，叫我莳绘就可以了。」「我叫做昭岛优花，叫我优花就可以了。」坐上了副驾驶座后，我在她的提醒之下系上安全带，她便扳了一下钥匙发动引擎。她没打排档，而是先踩了了几下油门，黑色的皮革手套在方向盘上摩擦，不时发出了——唧唧唧……的声音。〔……这女生，好帅气呀……这种利落直爽的模样真的很适合她，想必她是个自然率真的人吧……〕「莳绘，那我们走啰！」「啊、好。」她一边说着，一边取出了太阳眼镜戴上，油门一踩便将车子疾驶了出去。——一月二十九日东名高速公路海老名巿——黄昏的天空下，红色的Roadster疾驰在高速公路上。优花的驾驶技术非常熟练，我们一路上车速始终维持在高档。「这辆车跑得好快呀……」「0K啦，虽说是辆旧车，不过我做了不少改装嘛。」我在路上偶尔会像这样出声和坐在驾驶座上的优花攀谈_我在想，她也许是不太说话的，而我则是受她帮忙、坐在她车上的人，因此会担心不要让气氛弄得太尴尬。看看她的外貌，似乎年纪大概跟我差不多，不过我总觉得她实际年龄可能比我大上好几岁。再说，这次的事情似乎也是她从我的学姊的学姊那边听到的。种种层面都让我在心里面提醒自己，绝对不能对她失礼。扣掉这些部分不说，她愿意帮我的忙、淌进这么麻烦的一淌浑水里，心理上更免不了对她怀有一份歉疚感……「啊，对了——优花小姐，我得先把过路费跟油钱给妳！」我边说边从钱包里面掏出了一万圆大钞交给她。「没关系啦，这不用妳出。」「咦？可是这一趟来回可是得花上不少钱呀！再说，我们现在目的地暂订是大津休息站没错，不过搞不好还得跑得更远呢，这些钱怎么能全让妳出呢？」「我就说没关系了啦。其实这次的事情一方面也是因为我自己有兴趣才帮忙的。」她答话的同时也打过了方向盘，将车驶进了中线。「那个……优花小姐，妳说妳对这件事情感兴趣是……」「喔。我听说妳碰到的问题有两个是有两个医院临终疗病房病患想私自溜出去，开车去了姿贺县没错吧？」「嗯，是……」「如果是这样那就没错啦！这对我来说已经构成让我参与的理由了。」对于她的回答，我还是没能理解——事实上，我根本不觉得她有回答我的问题。毕竟这件事任谁碰到了都会敬而远之吧？再说，她还不愿意收我提供的交通费，这就更令人难以理解了。（……而且，现在的我根本就连她为什么要陪我一起走这趟行程都不知道……）「嗯……这样吧，我就简单跟妳说——」她彷佛读出了我的想法，先一步开口为我心里的疑虑作出了解释：「莳绘，妳在那间医院工作的话，应该也听过这个传闻才对。」「……传闻？是指哪件事昵？」「就是之前七楼病房的病患擅自开车溜出医院然后被院方狠狠削了一顿的事呀。」「啊、喔……是，我有听说过。」这件事我是从一位在医院内担任病人看护工作的教会人士口中听到的。事件本身是没有醸成什么大问题，不过当时溜出医院的是一位处在重病末期的女性病患，她在没有得到院方许可的情况下，让朋友开车载她出游。「你知道后来她们开的车最后怎么样了吗？」「那辆车，在当时溜出医院的那名病患过世之后，就送给了载她出游的那位挚友……当作是那位挚友全年无休地每天都去看她的奖品。」她说完后轻轻地笑了。「……是……这辆车吗？」「嗯，大概吧。」照她的说法，那她……她本人就是事件中那个每天都来探望自己罹患重病挚友的那个人了——同时也是未经院方许可而载着重病之人出游的驾驶……我不知道让她们想试着溜出医院的原因是什么，但如果真是如此，那么她会对濑津美和阿东优这两个和她们做出同样行为的人感兴趣，就不是什么好奇怪的事了。事实上，我自己在医院里头任职，大概也能够理解。若是毫不间断地，每天都要到医院陪伴自己的家人或亲友，而且对象还是临终疗养病房的病患，那真的会是一件非常累人的事。而她载着自己罹患重病的挚友溜出医院，先不论这件事情对或不对，不过我想她和她朋友之间的感情应该是非常深刻吧。「所以说呀，莳绘，妳不用对我觉得亏欠，因为这是我基于自己的兴趣而想要参与的——不过话说回来，若妳真的见到那两个溜出临终疗养病房的病患，妳打算怎么办呢？」「嗯……这个嘛，我打算看看他们有没有遇上什么麻烦，想办法给予他们需要的协助。」「哦……我倒是觉得这对他们来说也许有点像是多管闲事吧。」「……多管闲事？是吗？」「我不是他们，所以我不知道。不过……我也曾经有过类似的经验，因此若是从当时我的想法来看，确实会有这样的感觉吧。」红色的Roadster在黄昏的天空下与背景的红霞融成了一体。我们开在东名高速公路上，不久就可以看到足柄休息区。但我们仍旧马不停蹄地继续朝着西方前进。——一月二十九日名神高速公路京都桂川——原本晴朗的天空此时渐渐布满厚重的云霭。在这样的天气变化之中，我们的银色轿跑车依旧不断地奔驰在高速公路上，走走停停，一旦累了便稍做休憩。现在我们已经快要开到桂川休息区了。「我说，我们在这边稍微停一下吧？」「啊、嗯、嗯……」她的表情看来有些难受。「……怎么了吗？」我问。「有点累……」也难怪。毕竟我们刚才一问一答地在车子上嬉闹了好一阵子了。想必是很耗精神的。加上我们又不是普通病人，体力上的消耗肯定会比一般情况来得剧烈。「那我去买个东西回来。」「……嗯。」说完，我赶忙跑了一趟休息站的商店，买回来的东西大概就跟我们去便利商店买的差不多——「来，一瓶宝矿力、饭团，还有一包洋芋片。」「啊、嗯……」她回了话，不过接过的东西却一点也没打算开始吃II这是怎么回事？明明她一向拿到东西就会先开始拆洋芋片的包装的……「妳……妳该不会觉得身体很不舒服吧？」「……没有啦……只是我的药吃完了……」「这样啊……」……药吃完了。这下不妙了……说起来，会遇上这样的状况，早在我们溜出医院前就可以想见，而我当然也不是故意忽略掉这个必然会遇上的问题。然而，在此之前，我从没有去思考过这件事——事实上，我根本没打算去想，也没这种精神上的余裕去想……「妳的药是什么时候吃完的？」「……昨天晚上。」「那妳已经一整天没吃药了呢……」医生告诉我，我的药绝不可以超过两天没吃。我看她的情况大概也差不多。想想，打从我们离开医院已经过了八天，以我们带出来的药量来看，这个问题迟早要碰到（我……现在到底该怎么做才好……）「喂……人家不要回医院去哦……」「我知道。妳也不会想回家吧。」「嗯……」银色的轿车离开了休息站，又重新上路。我在距离最近的一个交流道驶离了高速公路。虽说即便下了高速公路，我也没办法改变我们现在面临的窘况。但就算继续待在休息区里，或者持续走在高速公路上同样也什么都不能做。于是我选择离开四周景致单调而荒凉的高速公路，下了交流道朝市区开去。我想寻找可能为我们带来一些帮助的地方。首先，我得找到一问医院。但这间医院不能是一般的小诊所，而是一间大医院；医院附近会有药局，我要找的就是那种开在大医院旁的药局。事实上，对我们现在来说，最妥适的办法其实就是直接进大医院里头找医生处理；如果我们身上罹患的只是普通疾病，那我大概也会毫不犹豫地这么做。但……我们是临终疗养病房的病人。我和濑津美两人手腕上都卷着一圈代表我们身分的白色手环，同时也显示我们未经许可溜出医院的事实——我心里怀着这样的牵挂，开着车在巿区内徘徊，同时两只眼睛也不停地四处张望着……我想，大医院附近的药局应该大部分的药品都有才对。「有了！」在一条大马路的转脚处有一间看似大学附设的大医院。而在医院旁就有一块药局的招牌。我看附近路肩应该是没办法停车，于是找了一块空地，马上就把车子插了进去。「喂，妳把药袋给我。」我说。「嗯、嗯……」她带着一脸不解的表情将药袋递了出来。我接过标示着医院名称和病房的药袋，摊开只取了其中写了药品名称的单子——只带这个去应该可以了吧……「那妳在这边等我，我去去就回来。」我将她留在车上，用接近跑步的速度朝着距离这边有一小段路的药局奔去。——唰——我站在门前等待着反应迟钝的自动门打开，进门后便直接朝着柜台走去。「欢迎光临。」一名中年大叔看到我便客气地向我打了招呼。他穿着白衣，怎么看都像是这里的药剂师。「抱歉，请问你们有这种药吗？」「嗯？喔，请稍等一下……」他接过了我递出去的药单便往储藏室里头走了进去。我想，他们除了提供普通的成药之外，也有代替医院开药给病患的业务才对。记得之前我去大医院门诊的时候就是在旁边的大药局领药的。而这间药局就开在大医院隔壁，也有相当的规模，我想大部分的药品它应该都有。「抱歉，让您久等了，这是您要买的药。」一会儿之后，又见那位大叔回到了柜台前。他手中拿了一袋透明塑料袋，里头装着两捆封入了数十颗胶囊的塑料片——有这些应该够了……那两捆胶囊随便数数大概也够濑津美撑个两个礼拜才对。就在我正打算从口袋里掏出钱包的时候——「啊，可以先让我看你的处方签吗？」「……处方签？」「对，就是医生开的处方。因为这个是临床用药，必须要有医生核可才能卖。」「…………」「医生应该有开给你吧？」……这个状况我倒没有事先料想到——其实仔细想想，既然我要买的不是成药，那么药局应该不可以随便卖给一般民众才对……「……怎么了吗？」「啊、那个……」我支吾着不知道该怎么回话。而这位身穿白衣的大叔看了我的反应脸上开始露出了狐疑的表情。「啊、嗯？你那个是……」忽然间，我从他的视线中察觉，他看到我手上的白色手环了——他边看边念，我的名字、血型，还有医院的名称……唰——「啊！」我伸手欲抓药师拿出来放在玻璃柜上的两捆的塑料片，却在慌乱之中只抓到了几片。但我也没时间回头了，转身拔腿就跑。「啊！站住_」站在柜台里的大叔扬起了一阵惊叫。这声惊叫传入我的耳中时，我已经跑到了距离店门口约五公尺处。我跑歩的姿势狼狈，虽然步伐摇晃却仍拼尽全力地逃离现场。然而，就在我跑到反应迟缓的自动门前，就要冲出店外的时候……——砰！锵啷——「呜！好痛……」我的头重重地撞了一下，让我的意识短暂呈现一片空白。这一撞撞在自动门的门边，力道大得连玻璃都撞破了。我摇摇头试图让自己清醒，用手推开开了一半的自动门，钻出店门口后便死命地向前奔跑，手中仍紧握着方才抢得的胶囊包。「呼啊呼啊——呜……」我的呼吸变得急促，头也不知不觉地扬了起来，药局和停车处之间短短数十公尺的距离此时竟让我觉得如此遥远……虽然我隐约觉得身后并没有人从后头追上来，不过我根本没那个精神回过头去确认。——要是我被抓走了，那她一个人被留下来该怎么办才好？——要是我没有回去，她会不会就这么留在车子里面一直等我？……我的脑中莫名地浮现出这些杂乱的思绪，双脚仍一刻也不敢松懈地持续狂奔着。我的脚步踉跄，呼吸紊乱，一想到这么点速度已经是我现在所有的能耐，便觉得可悲……——啪当！「呼啊呼啊……呼……」我倒头栽进了驾驶座内，一阵慌忙之中赶紧发动了车子。此时的我，就连自己也发现体力比起日前从小钢珠店逃出来时，衰返了许多。我看了看后照镜，发现自己的额头果真在撞破自动门时被玻璃划破而流了一点血——这点伤应该很快就会自己愈合了吧……我边想边将车子开了出去，同时另一手拿出了手帕轻轻地按住了自己额头上的伤。「……你没事吧？」一旁的濑津美问。「没事，没事。」「可是你流血了……」「没事，妳不用担心。这没什么。」我挥挥手，要她安心地收起那一脸不安的表情，同时也将左手紧握着的，封入了胶囊的塑料片交给她。「快，快吃吧。」「啊、嗯……」那一张塑料片只封了几颗胶囊在里面，不过大概也够撑个两三天才对。我今天还能成功抢到药，不过随着日子一天一天过去，我的体力也明显地下滑。要是这些药再吃完了，那届时我们到底又该怎么办才好呢……我们这趟旅程原本是没有任何目的地的；甚至没有地方可去。当初的我们心里没有任何渴望，自然也没有失去任何事物的恐惧感。然而，现在不一样了……我们找到了这趟旅程的目的地。在期待之中，也多了一分一旦无法如愿时的担忧。——一月三十日京都郊外——早晨，我们将车停在某个公园旁熬过了夜晚。「怎么样，身体还好吗？」我对着濑津美问。「……嗯，还好。」看她答话时的脸，似乎因为昨天拿了药开始吃的关系，气色明显好了许多。我听她说，她的药量大约是一天三次，一次两颗。算算昨天抢得的那片塑料片里封入的胶囊数，大概也只够她吃上两天。（……我们接下来该怎么做好呢……）若是在开回高速公路上往淡路岛去，以我们现在手边这点药，我担心撑不到那里。然而，若是没有医师的处方签，我们即便到了药局也买不到药；就算拿昨晚取得那一片胶囊的方式如法炮制，以我的体力来看恐怕成功的机会也不大。而且，比起我，她似乎更不愿意回到医院里去……（……我到底该怎么办……）我在走投无路的焦虑感中不自觉地打开了手机。手机开机之后在液晶屏幕中显示出一封手机邮件，来自一个我不认识的信箱。……莳绘？这是发信人的名字吗……人在挂川，正往大津移动？「这是怎么回事？」我看了看发信时间，大约是今天凌晨四点——算算，差不多是三小时前传来的。……这是说，有谁正朝着我们这边过来吗——瞬间，我看着邮件中的那一串文字：『我正往大津——你们所在的位置移动！』心里似乎有了底——之前濑津美在大津休息站的公共电话打电话回家……「我问妳哦，莳绘这个名字妳认识吗？」我问。「……嗯，那是我打电话回家的时候接电话的人，是医院里的人。」「这样啊……那就没错了……」我告诉她我手机上显示的邮件讯息，还有我的推论，然后提着手机推开车门。我下了车之后便随即对着这通素未谋面的邮件发信人拨了电话——嘟嘟嘟嘟嘟嘟嘟……「……请问……是莳绘小姐吗？」『啊、是！是阿东吗？我正在等你打电话给我呢！』从手机里头传来的声音听来，对方似乎是一名年轻女性。我将手机贴在耳边，尽可能保持平静地对着手机那头开口说话。「莳绘小姐，我想先请妳回答我几个问题。第一，妳现在人在哪里？第二，妳找我们想干什么？」『不行，你得先回答我的问题。你们两人现在都平安无事吗？』「……」她略过我的问题让我觉得不太高兴，不过我想对方会想知道我们的现况其实也是理所当然的事。因此我还是直接了当地回了话。「现在没事，不过我们身上的药快吃完了。」『这样啊……我知道了。那我告诉你，我现在人在大津休息站。我的目的是希望看看你们有没有遇上什么困难，让我可以帮助你们的。』这名自称莳绘的女性在坚定的语气中针对我提出的问题做出了响应——她起初接到电话时的反应显得有些焦急，因此也挑起了我的不安。然而，现在我听到她说话的内容和说话时的态度后，我想也许我可以相信她也不一定……我在心里做出了决定，透过手机将我们现在的状况告诉了她，然后跟她约定了见面的地点——现在我们最迫切的问题就是濑津美的药不够了。这点以我的能耐完全是束手无策。然而，对方既然在医院工作，也许她真有办法帮我们一点忙也说不定。〔……我现在都还没办法弄清楚这个叫作莳绘的小姐究竟是什么人呢……〕如果她真是担心我们，除了濑津美拨的电话之外，没有任何线索就来到大津，我想我也许应该要好好谢谢她。——一月三十日名神高速公路桂川休息站「莳绘，那两个溜出医院的病患已经到了吗？」「嗯，约好的时间快到了，我想他们应该也快到了才对。」面对优花的提问，我做出了回应。「我说妳呀，妳还真是个爱管闲事的家伙呢——话说回来，能实际跟他们俩碰个面也是好事就是了。」她说。这里是桂川休息站。优花一口喝干了手中的咖啡，和我一同站在车前等着阿东和濑津美两人到来。「啊，来了！是那辆车！」前方的圆环中排满了自动贩卖机。一辆车从圆环那头开了进来。我对着它猛挥着手。——唧……银色的轿跑车在我们的眼前停了下来。这辆车确实是阿东优的父亲日前给我看过照片的车子，不会错了。「唉呀，是INTEGRA呀？车主的品味不错呢。」优花看了阿东先生的车子说道「优花小姐，我们走吧。」一名年轻男子看到我们靠近之后从驾驶座中推开了车门。「……你就是阿东吧？」我对着他开口问道。「妳是莳绘小姐吗？」他也开口试着确认了一下。「我是，你好。」答完话之后，我对着他轻轻地点了点头。「那个……这位是？」「你不用理我，我只是陪她来的。」面对对方的疑问，优花随便一句话便敷衍了过去——这倒让我觉得意外，她不是说过她对这两名病患感兴趣才来的吗……「话说，阿东，怎么你只有一个人呀？」我问。「喔，妳说她呀？她刚刚吃了药，坐在车上睡着了。」这边离他们的车子有一段距离，不过从远处看去，副驾驶座里头确实有一个女孩正靠在椅背上休息。「话说，莳绘小姐，我想我在电话里头跟妳说过了，关于药的事……」「这固我知道，干过我有事想先问问你。」「……什么事？」「你们接下来打算怎么办呢？」我直接了当地对着阿东优开口问道^我打算根据他的回答而做出不同的响应方式……我想，这是我身为这起事件从头到尾的关系人，现在又直接和她们两人碰着了面，我有必要提出这个问题。「……我们有我们这趟旅程的目的。」「那么？完成了那个目的之后，你们又打算怎么办？会乖乖回到医院里头去吗？」「这个……」「如果你没办法答应我，我也没办法帮你了。」「………………」他沉默了。我想他有他的考虑。甚至刚溜出医院时可能什么也没想，但在外头度过的这几天里，他们也已经找到了属于他们自己的想法。然而，我怎么说也是个医院里的职员，而现在站在我眼前的是从我的医院里头溜出来的病患——而且还是临终疗养病房的病患——我绝不能放任他们这般形同自杀的行为。事实上，即便抽掉了这种职业上的道德责任问题，以我个人的立场我也不能对他们的行为坐视不管……我在脑中清楚地理出了自己的想法。同时，在我们彼此同样默不作声的对峙之中，时间一分一秒地流过。一个令人意外的声音将这段漫长的沉默打破——「莳绘，妳不是说妳是为了帮他们而来的吗？还是妳这次来也要顺便为他们带来他们不愿意面对的困扰呢？」「咦？啊、这……我不是想带给他们困扰啦……」方才始终保持着旁观者立场的优花此时忽然插话了。「那妳就帮他们呀？还谈什么条件？不然的话那妳到底是为什么而来的？」「可是……我怎么说也是个医院的职员，而就我个人的立场而言……」——啪！我话没说完，一个清脆的声音响起。我一时之间还搞不清楚发生了什么事。然而，当我察觉到自己脸上窜过了一阵带着麻痹的剌痛，我这才知道我被优花狠狠地甩了一个巴掌……「呜、那个……优花……小姐，妳……」事实上，比起脸上的痛楚，这个巴掌在我脑海中留下的是更为震撼的惊讶。「不好意思，因为学妹脑袋有点不太听话，我一时之间没能忍住就打下去了。」「…………」「妳大概不太能理解，不过让他们这样的病患任性地做自己想做的事，其实有时候也是我们这些医务人员的工作呢。」她道出这句话的同时，脸上露出了些许落寞的神情。（……我希望她能够好好地任性一次……）此时，我的脑中忽然浮现出了日前在佐仓太太口中听到的那句话——话说，听优花说，她之前也曾经每天来到医院里的七楼病房探望自己的挚友。以他们这样的立场，面对无药可愈的病人时心里究竟会有什么样的想法，现在的我确实还无法拥有什么太深刻的体认。然而，此时优花所要表达的却和佐仓太太之前说的那句话不谋而合，那么，这难道就是他们同样会有的期望吗……「呼……嗯，我知道了……」我大大地呼了一口气，同时从包包里头取出了一只纸袋，「阿东，这是你要的药，你拿去吧。我想这些药应该够你们撑上两个礼拜了。」「咦……」「其实在我跟总护士长商量这件事之前我就已经把这些药准备起来了。这里头也有你的薬。」「麻、麻烦妳了，谢谢。」他接过纸袋，恭敬地对我行了好几个礼。「搞什么嘛，莳绘？原来妳早就已经准备好啦？」「不是啦！这只是我怕有什么状况所以先准备起来的……」我答话的同时伸手摀住自己红肿的脸颊，表现出了挨这一巴掌之后内心产生的些微不满。……老实说，面对这件事情，我到底心里面想怎么做，其实我自己也不太清楚。虽说我是偶然被卷入这起事件，随波逐流地参与了整个处理过程，不过我到底是不是打从事发之初就怀着想把他们带回医院里去的想法，其实连我自己也不知道——我不知道我到底该制止他们，将他们带回医院才是对的；抑或者是该在他们背后推上一把……一会儿后，我和优花对着阿东他们的车子挥挥手，已经要跟他们道别了。就在他们车子开走时，优花看了车上的副驾驶座一眼，忽然扬起了声音问道：「那女生……该不会是濑津美吧？」「怎么了吗？」我问。「喔，没有啦……她身上穿的已经不是那件睡衣了呢……」「嗯？」「没事啦??我们回去吧！我的年假可不多呢，我得早点回去才行。」说完，我们也坐上了优花的红色敞篷车，发动引擎之后开往回东京的路。我不知道阿东和濑津美两人的命运接下来究竟如何，不过……我希望他们至少在这趟旅程之中能够无怨无悔地度过。——一月三十一曰兵库县※中国自动车道——（译注：中国自动车道，横亘日本中国地区的东西向高速公路名称；始自大阪府吹田市，终至山口县下关市。）天空终于放晴，冬季特有的深邃天空映出清澈的靛蓝色高高地挂在我们头顶。「话说，妳今天吃了药没有？」我问。「嗯，刚刚吃了。」多亏了昨天拿来的药，她现在身体状况稍微不再像之前那么糟糕了。我们从吹田系统交流道接上中国自动车道，现在继续地跑在高速公路上。「喂，我们接下来该怎么走呢？」「走神户系统交流道……」「我知道了，转山阳自动车道嘛。」「嗯。」我开着的银色车子一路走在她所指出来的路径上。来到这边，路上已经不时可以看见淡路岛的标志了。就在这时候，眼前出现了一座大桥。「这就是明石海峡大桥吗……真壮观……是吧？」「……嗯。」我们不约而同地由衷感动着。走在明石海峡大桥上，车子开起来的感觉就好比悬空在海上飞行。路上偶尔可以看见将车停在桥上，下来俯瞰这片丽景的游客。我想，这些大部分都是观光客吧？许多人还拿起相机拍起照来了。我也学着他们将车子停到了路肩，然而……「这边禁止停车哦……」濑津美说。「没关系啦，我们停一下下而已。」再说，放眼望去，停在路肩的车也绝不只一、两辆。「喂，我们下车走走吧？」「………………」「这边视野一定超棒的，好嘛？」「好啦……她带着同样一副不情不愿的表情，不过还是跟着我一起走下了车。凛冽的寒风窣窣地拂过桥面，「哇……这里出乎意料地冷呢……」我说。「……嗯。」平常我们不怎么下车，一下车就置身在严寒的冷风里，这种刺骨的寒意感受起来自然格外地深刻。桥的另一侧也有一对男女，大概是情侣吧。他们正拿着相机拍照，愉快的笑声就连桥的这须都听得见。仔细一看，除了那对情侣之外，周围也有一些家庭或者一起出游的游客正在拍照留念。——拍照呀……都来到这种地方了，好像真的还得拍张照片呢……「这么说起来……」我忽然想起了一件事。「……怎么了吗？」「嗯，妳在这边等我一下。」之前翻过前座的行李箱好像就有一台便宜的即可拍相机。那是在我们开车出来时第一次检车子里头有些什么东西可用的时候翻到的。我当时看了一眼，印象中好像还有几张底片可以「太好了！还有两张底片！」我从前座的行李箱中取出相机的同时做的第一个动作就是确认它还留有多少底片可以拍。「久等了——来，我来帮妳拍照。」「咦……」「照张相嘛，难得我们都来到这里了。」「……不要啦。」「别这么说嘛——快点，摆个姿势吧？」我边说边提起相机，将镜头对准了她。如果她不是这么别扭的话，那副甜美的长相可是相当迷人的呢！若是再搭配上这么一个特殊的景致，我相信这一定会是一张很漂亮的照片的。然而，此时无论我镜头怎么转，她始终都是一副看来有点不悦的冷淡表情，让这镜头怎么样也抓不出我预期的效果。「喂，拜托妳笑一个嘛??」「………………」听到我这么说之后，不晓得她是害臊还是怎么样的，还是正面对准了我的镜头，怎么样也不肯收起那张看来有些不悦的表情——难道，她其实已经很尽力地想要摆出笑容，却只能做到这种程度呢……我思索了一会儿，正打算将她这副模样直接拍起来算了，却在这时候——「抱歉，可以请你帮我们拍张照吗？」「咦？啊，好的……」一对情侣不知不觉已经来到我们身边，一只手递出了相机想请我们帮忙。「那我要拍啰！」「好的，谢谢——」镜头中，他们两人手搭着彼此的肩膀，一齐摆出了笑脸。我按下快门抓住了这个瞬间。「谢谢——换我们帮你们拍吧？」「咦？啊、那个……我们其实……」「是用这台相机拍吧？」这对情侣其中那名男子没等我把话说完，已经伸手先一步欲接过我手中的相机——或者可以说，他根本就是把相机从我手中抢过去的。我想他大概是怕我们不好意思让他帮忙吧……他抓起了相机，不顾我们此刻犹豫着不知道该怎么办才好的模样，提起镜头已经准备要拍「喂，你女朋友好可爱哦——快点快点，你们两个靠近一点吧！」听到他的话，我勉强稍微拉近了和濑津美之间的距离。至于濑津美，她的脸上露出了平时一贯的表情，好像靠近过来了一点，但说有又好像没有。「那个——你们两个要不要摆个姿势呀？」这名情侣档的男子个性不但鸡婆，现在竟然还对我们的动作提出了要求。就连站在他身边女友看着他都觉得有点受不了了——想想，与其出声抱怨，也只好依着他了……我无奈地伸手绕过濑津美的身后，将手缓缓搭到了她的肩膀上头。「……啊……」话说，这还是我第一次和她有肢体上的接触呢。此时我的掌心里头传来的是那一套日前帮她买的、稚气未脱的衣服触感，还有她那一头长达腰际的直发里柔顺的发丝。我盯着眼前的即可拍镜头，看不到此时濑津美脸上的表情。然而……也许她现在脸上浮现的，是我鲜少看到的……那般有点害羞，又有点别扭的样子吧……「那我要拍啰！」——啪嚓！帮忙拍完照，也要到了他们想拍的照片之后，那对情侣转身往自己的座车走了回去。我目送着他们的背影，同时也朝着自己的车子移动。「可爱的女朋友呀……之前我们还只是被人说是兄妹呢，这算是进步了吧？」「………………」「话说，我们是不是真的看起来像一对情侣呀？」此时的我遇上方才那样的状况，心里莫名觉得非常开心，于是忍不住吐出了有些幼稚的言词：「喂，我说——那个……濑津美，妳觉得呢？」「谁准你直接叫我名字的啦……小鬼……」她丢下这么一句话旋即别过头去。然而，我想她这个动作应该是因为害臊而不想让我看见她的表情而做的吧。——一月三十一日兵库县洲本市——这天头顶上仍是那一片冬季特有的，蔚蓝而深邃的天空。我们离开桥上不久之后就来到了洲本交流道，在这里下了高速公路之后改走一般道路。「终于到了……」「……嗯。」打从我们溜出院那天，车子的里程数总共往上加了九百公里。我们从原本完全没有这样的念头，到现在已经置身在我们的目的地。我们开的这辆银色轿跑车载着我们一路上碰撞了几下，在几个地方留下了凹痕。而最大的功劳还是比起地图更熟悉道路分布状况的濑津美，有她的向导我们才能真的来到这里。「那我们接下来要去哪里呢？」「……往南开……」「往南吗……好。」我继续依照她的指示变换了方向。说真的，来到这里之后，我也知道路该怎么走了——眼前一看就有好几处立起来给观光客看的路标，然而我还是打算维持我们一路上的习惯，由她来领航。心里头总有个声音告诉我，我非这么做不可，而我也不知道为什么，就是想依照她的指示开车。一个没有其它人影出现在当下的冬季沙滩上，凛冽的寒风撩拨着成遍的松树林。车子开到了这里之后，我便将驾驶座让出来给濑津美。「妳的脚能够踩到离合器吗？」我问。「可以……」「好，接下来把排档从空档打到二档。」「……我会啦。」「好，妳会——那接下来就让妳随便开吧。」「嗯，好……」她带着认真的表情紧握着方向盘，用那一副娇小的身躯伸长了双腿坐在驾驶座上。看着她的动作，让我也专注地从副驾驶座上挺起了上半身，「很好很好——来，慢慢松开离合器……」「……嗯。」接着，她明显露出了紧张的表情……「——呜哇！」……果然，引擎产生爆震了。「妳呀，离合器出现半联动的时候，踏板抬起的速度要放慢啦。」「嗯。」我说的话她是有听到了，不过果然要马上习惯手排的操作方式还是没那么容易呢。我看着她牙齿轻咬着下唇，全神贯注的认真表情，对照她平时那种不怎么将喜怒形于颜色的性格，还有碰到什么事情总喜欢先把头给别开、藏住自己的情绪的这两种表现，此刻她脸上的神情实在让人看了不禁会心一笑。「喂，我快头晕了啦。」「我、我知道啦！」在没有人的沙滩上，濑津美用她还不太熟练的开车方式折磨着这辆银色的轿跑车。它原本就有点碰裂了而显得有点吵的排气管，此时发出的声音听起来就好比一阵阵痛苦的哭号。天空中夕阳的红色逐渐沉寂，从紫色缓缓变成了整片的蓝黑色。在这个华灯初上的时刻，原本歇息的海风已经完全转向成陆风，大大的月儿不知何时也已经探出了头来。「我看妳差不多也练熟了嘛。」我说。「……嗯。」国她答话的同时将排档杆推到了三档。此时她连离合器的踩踏方式都已经用得相当熟练了，正开着我爸的银色INTEGRA在这片迷你的沙滩上自由地来回奔驰着。「我说妳呀，有这种水平的话就算不去教练场上课应该也可以考得到驾照了吧？」「可以吗？」「嗯，虽然我这么说没什么确切的依据，不过我至少是考到了驾照的人，大概可以判断得出来啦。」……不过话说回来，就算我现在带她去考照，真考过了也没什么意义。而这般残酷的事实，我们心里其实都懂……我们有地图，有药；虽然排气管碰坏了，不过也有一辆银色的轿跑车。然而，我们没有时间，也没有未来；正因为我们彼此都深知这点，让我心里更是涌出了一股莫名的哀伤感。「……来，我的给妳。」我从我的上衣口袋内取出了我的驾照。这张驾照原本已经失去了它存在的价值，同时也代表我所失去的正常生活。「就当作是妳的毕业证书，拿去吧。」我说。「……可是……就算我收下了，我也没多少时间可以用了……」「收下吧，反正对我来说也是一样啊。」I我们曾经住过的七楼临终疗养病房，那是我们所剩无几的时间内怎么也无法逃脱的牢笼。挑高的天花板、只能打开十五公分宽的窗子，还有我们手上的白色手环……第三次出院、住院代表的即是宣告一切即将结束。而她是第二次，我则是第一次……「——来，拿去吧……恭喜妳考到驾照啰。」我说。「嗯……谢谢……」濑津美答话的同时点了点头，并且从我手中接过了驾照。这么一来她也拥有一般自小客车的驾照了^这么一来，不只是轿跑车，她还可以开房车、休旅车；所有她喜欢的车子她都能开了……这么一来，接下来也应该能去所有她想去的地方了。第七章Narcissus——水仙花车子从濑津美练车的那一处小沙滩出发，自刚入夜一直开到了深夜，我们终于来到了此行的目的地——可以看到水仙的地方。这里理应是一处观光区，不过不知道我们所处的这一带是不是已经算是外围区域了，或者是因为时间晚了，周围完全看不见其它人的身影。宁静的夜里，我和濑津美两人待在车内，静静等着隔天的晨光升起。「喂，我们为什么不开灯呀？」濑津美问。「因为电池快没了嘛。」我说。「喔，这样啊……」我关掉了引擎，此时车内和车外一样是一片漆黑，只剩下仪表板上微微的光源打在我和濑津美的脸上，让我可以稍微看见她朦胧的侧脸。灯熄了，引擎也熄了。我们待在狭窄的车厢内，话也没多说几句，就只是静静地等待漫长的黑夜过去。后座散放着我日前偷摸来的衣物。我们一人从中抓了几件布料较厚的牛仔裤、毛衣，还有廉价的毛巾，充当棉被包裹在自己身上。「很冷吧？」我问。「……嗯。」「那妳要不要过来坐到我的身上？」「来嘛，没关系啦。」我看她一个人坐在副驾驶座上都冷得发抖了，于是要她坐到我的大腿上。「这样应该会比较暧和一些吧？」「…………」她先是沉默了一会儿，然后才出声开口拒绝：「不用了……我没关系。」然而，她嘴上说着自己不冷，身体却不断地打着哆嗦。我们呼出来的气体在车内化成了白色的水气，怎么看也知道她在逞强。「……还是你觉得冷要我过去？」这会儿换她开口问道。「嗯……好啦，我觉得冷，妳过来啦。」「……那好吧。」说完，她慢慢爬过来坐到了我的大腿上，带着些许的顾忌整个人蜷了一圈。「怎么样？这样是不是暧和些了？」「……嗯。」外头的低温和车内的温度落差将六面挡风玻璃全染成了白色，凝结的水气加上朦胧的黑夜，窗外更是什么也看不见了。不过就快天亮了。我想，等到早晨的阳光洒下，外头一定是整片整片的白花吧。——夜色一点一点褪去。太阳从东边的地平线下蹦了出来，将天边从带紫的黑色缓缓重新漆成整片的米白色。天亮了。眼前成遍的白色花丛也终于展露了它的全貌。此时，夜晚漆黑的世界忽然变得不再纯粹，一抹充满跃动感的白色和黄色鲜明地烙在我的视觉影像当中。我和她忍不住推开车门走了出去，不透过车窗玻璃，而是透过我们活生生的眼睛直视着眼前的这片景致。「好壮观呀……」我说。「……嗯。」这里遍地开满了不计其数的水仙花。朝露反射着晨曦，让这片白色的花丛显得更加耀眼。直教人联想到一面直朝着海洋中心铺去的白色绒毯。我们伫足在这片令人目眩神迷的景致之中，彼此交换的言语在吐出来的瞬间也全都成了白色的水气，和眼前的景致融成一体——这天，我们终于亲身来到日前在无聊的电视节目中看到的风景里头。在这趟旅程之初完全没有明确目的地的情况下，最终竟也来到了这里。「……这些花都是同一种花吧？」「嗯……就细微特征来看，每朵花都是一样的。」「是吗？太好了……」我不清楚花与花之间的品种差异，不过……相较于那天电视屏幕中映出的，完美无缺的那片花田，此时满布在我们眼前的花丛虽然有大有小；有全开的，有半开的，也许不是那么样的完美，但它却是活生生地绽放在我们眼前。「好漂亮……」濑津美忍不住发出了赞叹。「……是啊。」世界——在捉摸不定、平凡且无聊的现实生活中，它对待每个人都是以同样冷静的眼光和无情的态度，其间充斥着许多我们肉眼无法看见的，或者伸手无法触及的思緖。然而，现在我们不但可以摸到它，甚至还可以感觉到那些肉眼无法看见的片段思绪，就散落在这片壮阔的景致之中……——二月三日洲本市南淡路水仙线——天空下着雨，绵密的雨丝将冬季的天空染成了白茫茫一片。我们在这里待了两天，哪儿也没去。因为我们没办法行动。「咳咳！」「喂！妳还好吧？」「嗯……还好。」濑津美的身体状况开始恶化了。我们将副驾驶座的椅背向后倒，让她躺着休息。这两天，车子也都几乎没办法开，一直停留在这一带。她其实有吃药，不过似乎没什么效果，恶化的情况始终没有好转……我看，这大概已经不是药的种类够不够齐，药量吃得够不够的问题了。我和她都是七楼病房——临终疗养病房的病患。就算没经过这几天的折腾，以她已经出院住院两次的情况来看，什么时候会步入这般田地其实也都没什么好惊讶的……「我说……妳会想回去吗？」我对着濑津美问。「……你呢？你想回去吗？」「嗯，是有点想。」「想回去哪？七楼？还是自己家里……」「这个……这个……」……老实说，我不知道。我只知道我们早晚终将面临的结局。对濑对我来说也是一样。然而，现在我只能看着一旁仰躺在副驾驶座上的她，什么事也不能做。这让我觉得格外难受。——啪当……我走出车外。呼出的气息旋即化成了白色的水气；冰冷的雨滴浇在我的脸上。我挺直了身子抬头仰望着天空，「……现在，我到底该怎么办才好呢……」……我不知道。我不知道我到底是不是该强行把她带回医院里，还是就这么让她留在这里，自始至终陪在她的身边II话说回来，其实我也正面临着同样的问题。也许，我其实该选择和她一起走向生命的终点……我从口袋里头掏出了手机，在通话记录中翻出了日前从这里拨出去的号码。那是她曾经用我的手机拨出去的号码。『您好，这里是佐仓家。』「………………」『喂？请问您哪里找？』我无法做出适切的判断，因此不自觉地便掏出手机拨出了号码。然而，电话接通之后我却不知道到底该如何开口寻求协助……『——喂？是濑津美吗！还是阿东？』「……我是阿东。伯母，好久不见。」我做了一次深呼吸，然后对着手机向濑津美的母亲打了招呼。『是啊，好久不见，你们那边现在情况怎么样？』「……这边现在正在下雨。」『这边也开始下了，不过现在雨水都已经冻成雪了。』我听到伯母提到雪，于是跟着抬头望了一下天空——也许现在这边下的也是雪吧……我茫然地猜想着，然后下定决心把我想说的话吐了出来。「其实……我想跟您说濑津美的事……」『没关系啦，你们不用在意。』「咦？」我什么也还来不及说，伯母便开口先一步堵住了我的嘴。『还是说，濑津美是不是对你做了什么任性的要求？』「不，那倒没有……」『这样啊……那……如果濑津美对你做出了什么无理的要求……我可以拜托你顺着她的意愿吗？』「………………」………………我结束了这通电话，带着身上冰冷的雨水坐回到了车上。——她从没有打从心底展露过笑容。——她从没有好好任性过一次……我想起了曾经从伯母口中听过的话。——二月四日洲本市南淡路水仙线——绵绵细雨似乎并没有停止的迹象，仍持续从黑色的夜空中不断洒下。车窗外的水仙花田，在雨雾氤氲中呈现出朦胧的白色，非常耀眼。「喂，这些花——水仙花的学名是……」我伸手指向前挡风玻璃外头的那一片白花田，「是叫作Narcissus吗？」「嗯……这个名字的由来是源自于希腊神话的一名美男子。」「……希腊神话中的美男子？」Narcissus——经她这么说，我似乎有点印象了。虽然不常听到，但我确实听过这个名字。「……他的名字是译作纳西瑟斯对吧？」「嗯，不过关于他的神话故事有很多版本就是了……」听到她的解释之后，我露出了佩服的表情，继续听她说下去。「少年纳西瑟斯拥有无与伦比的美貌，因此不论谁看到他都会为他着迷……而妖精艾可的心灵也成了他的俘虏。然而，艾可每次开口，吐出的言词永远都只能重复对方所说的话……」「……只能重复对方所说的话？」「是啊。所以……如果纳西瑟斯不对她先开口说出爱她，那么艾可是无法对他表达自己的爱意的……」濑津美道出这段故事时，脸上的表情写出了些许的寂寞，呢喃的语句听来也多了些哀凄的味道。那一双美丽的眼眸似乎又回到了从前，将目光空洞地聚焦在不知名的远方。「可是……这是不可能实现的……无论艾可对纳西瑟斯怀有多么深刻的爱恋和憧憬，这样的爱情是不可能有结果的……于是，她最后对纳西瑟斯下了诅咒。」「……结果故事就这么迈入了众所皆知的结局，让纳西瑟斯就此爱上了自己在泉水中映出的倒影了是吗？」「后来……纳西瑟斯离不开水边，看着看着，最后变成了一株美丽的花朵，就是水仙花……它的学名，Narcissus就是这么来的。」说完之后，她稍微顺了一下呼吸。处在一旁听完这个故事的我，心情上也感染了些许的落寞之情。……艾可……她心里藏着永远无法开花结果的爱恋II就好像没有未来的我们一样。「后来呢？艾可怎么了？」「消失了……在纳西瑟斯一受到诅咒之后。」……消失了？——消失，这样的结局究竟意味着什么样的意涵呢……她诅咒了纳西瑟斯，最后什么也没得到，就连纳西瑟斯也陷入了不幸的结果……「……怎么了吗？」她问。「没有啦……可是妳不一样吧？」「……嗯？」「妳之前不是问过我吗——问我会不会诅咒自己这般没有一丝丝希望的命运……那妳呢？妳不一样吧？」「那个……」「……怎么样？」「……嗯……因为我已经不抱任何希望了。」她脱口说出了最后一句话，接着又将视线再次移向了窗外，什么话也不说地默默注视着夜雨不断拍打着的白色花丛。『……我的时间停止流动了。』几次不同的季节更替。白蒙蒙的梅雨也几度盘据了整片天空，然后消失。我在这里，日复一日地过着不需要和任何人交谈的生活……「即便我永远阖上了双眼，这个世界也不会因我而停止转动……」我摀住耳朵也无法阻止雨声进入我的脑中II我知道……我知道我所渴望的一切都无法实现。因此我不羡慕……我不羡慕比基尼泳装；不羡慕翡翠色的海滩；不羡慕带着愉悦笑容摆出撩人姿势的杂志封面模特儿。我不羡慕……我知道，只要我永远闭上眼睛之后，就算没有地图也没有汽车，我也可以去任何地方。因此、，即便我胸前那一道长长的伤痕不提醒我；即便我就好比希腊神话里头的回声妖精，艾可，而眼前不可能实现的现实永远只是我对纳西瑟斯无法开花结果的爱……「——我也绝不会……对这辈子与我无缘的期待怀抱希望……也绝不会诅咒这个不会同我一起消失的世界……」……然而，这个早已许下的决定，如今……曾几何时却开始出现了松动的危机……——我身上原本已经停止流动的时间，此时又开始转了起来……在这个随时都会歩入终点的时刻……——所谓的伤口……似乎切痕越深，愈合所需的时间也就越久……那么像我这样大半辈子都是在医院度过的人呢——像我这样在心里划下了一道长长的伤痕，让自己和现实世界分离的人呢……我是不是再也不可能拥有健康的心灵——再也无法取回真挚的笑容了……「……像我这样过了二十二年的人生……究竟会变得怎么样呢……」——一月六日洲本市南淡路水仙线——「咳咳……咳咳……」「喂！妳没事吧？」黎明前，我听到濑津美咳嗽咳得厉害，伸手轻抚着坐在副驾驶座上她的背部。时间又过了两天，之前从莳绘小姐那里拿到的药也已经吃完了。当时她还告诉我，这种口服药已经是药效最强的一种了，不过现在看来，它对濑津美来说已经没什么效果了……——不过比起什么事也不做，再拿些药总比没有来得好些……我抱持着这样的念头取出手机正打算联络莳绘小姐，同时也伸手抓住钥匙，准备发动引擎，然而……「……不用了啦……」一个孱弱的声音出声制止了我的动作。「可是妳这样下去……」我说。「……反正这些药再吃也没什么用了。」「话、话是这么说没错，可是……」其实情况就如同她所说的那样，再吃同样的药也不会带来什么实质上的效益才对。然而，要我就这么什么事也不能做地袖手旁观，我实在坐立难安……「那、那我们到别的地方去吧？好吗？」「……别的地方？」「对，什么地方都好，然后妳再帮我指路好了！」我试图在言语中多灌注一些活力，精神饱满的程度连我自己都觉得可笑。她侧着脸望向窗外，将视线焦点提到了遥远的彼方。我望着她，一个人唱着独角戏地表现出了亢奋的情緖，对着她做出了这样的提案。……然而，我知道这么做一点意义也没有。因为，就算我真让她打起精神来多撑过一些时日，顶多也是将两天后即将结束的生命多延长个一天而已。关于这点……我其实再清楚不过了……「妳说说看，妳想去哪里？」我问。「……我没想去哪里……」「对了I对了！妳喜欢车子吧？那我们再回到高速公路上去跑一跑如何？一定可以看到很多很炫的车才对！」「……不用了啦……」「………………」我沉默了一会儿。「——那、那这样好了，我们再去买些衣服吧？妳也会想要新衣服吧？」听到我再次提出了新的建议，她也沉默了一会才又开口：「不用了啦……」「……什么不用了……妳……」她丢下了那一句话之后，又将视线移回到了窗外。然而，她的目光并非落在外面那片水仙花田上，而是像从前的她一样，带着空洞的视线望向不知名的远方——同时，再也不把头转回来了……「……为什么……为什么妳总是这样……为什么妳口中永远都只会说『不用了』三个字……」「…………」「稍、稍微积极一点不是也很好吗？为什么妳不这么做呢！」不知不觉之中，我说话的音量已经越提越高——我觉得有些生气……有些悲哀，不知道为什么……一向对于眼前的现实无法拥有深切的体认的我，此时却觉得内心无比沉痛……车厢内再次陷入了沉默。窗外满布着开在冬季的花朵，一月的水仙花——Narcissus。它们在黎明前的雨夜轻轻地荡漾着，勾勒出了一片白茫茫的景致。她望向窗外。视线穿过了这片白色花田，聚焦在更远的彼方。万籁无声的夜里，除了海潮拍打在岸边、细碎的水声之外什么也听不见……「……积极一点……我怎么可能这么做呢……」「咦……」一片漆黑的车厢里头，濑津美的声音忽然传入了我的耳中。「如果我怀抱着希望，拚命地努力追寻之后可以获得回报，那我也许真的该积极一点……可是……可是如果所有的期望都不可能实现的时候，你教我到底怎么办呢？我没有办法坚强到在付出了努力，怀抱着期望却落空的时候，还能笑着说这也是没办法的呀……」她将空洞地望向远处的视线移回来集中落到了我的身上，一双真挚的眼眸从副驾驶座那头直视着我。「在这样的命运之中，我唯一的选择就只有一开始就舍弃了所有的期待，放弃了所有的希望……然后带着冷淡的态度看着自己，告诉自己这一切都是没办法的事——难道不是吗？」「……妳—……」「呜、呜……呜呜呜……」她哭了。这是我第一次看到她哭。那张不论何时永远都面无表情的脸庞，此时竟带着肩膀传来的颤抖，不断地流着眼泪。「在一切都结束的时候……我难道不能为自已留一个借口，让自已说……如果我那时候有好好努力过的话，今天也许不会这样……我难道不能为毫无希望的人生留下一个只是我自己没有积极争取的推托之词吗——因为我知道一开始就什么也不可能实现嘛……这样难道不好吗？」我透过车厢中的前挡风玻璃望向黎明前的夜空，一轮明月仍高高挂着。万籁倶寂的夜里，除了时而从远方飘来的海潮之声，耳边唯一还听得见的，就只有她无助的啜泣了。一切对她而言，也许就好比无法靠自己意志说话的艾可。现实世界给她什么，她才能祈求什么。她无法主动开口央求，因此她不存有任何希望，不看任何她得不到的东西；她甚至不祈祷，也不埋怨……因为她除了放弃一切之外，没有任何方法可以让自己从绝望中挣脱。因此她拒绝回家，也拒绝回到医院。这是她第一次，也是最后一次对这样的人生做出的抵抗。第八章白石工业二月的海水蓝得清澈透明。刺骨的冷风夹带着寒意，时而拂过松林传来阵阵的悉窣声，风声与海潮声交织着在宁静的景致中回荡在我们耳边。「我说，就只有这个而已了啦。」我将手中印有『白石工业』四个字的毛巾递出去交给她。这是我们之前擦身体时用的毛巾。「拜托，妳也用不着摆出这张脸吧？」「……知道啦。」她露出了些许不满的表情接过了我手中的毛巾。她忽然对我说她想要一件泳衣，让我觉得非常困扰。在现在这种时节，在这样的地方。而且她要的还是一件比基尼泳衣，这么任性的要求让我真是十足伤透了脑筋。我只好在车上找找看有没有什么东西能够拿来充数，结果怎么找也只找到这条混在我偷摸来的衣物堆里的这条白毛巾。她拿走了毛巾之后离开了一会儿，结果竟然将毛巾缠在胸前，然后穿着那条日前买的，她非常心爱的裙子回来。「……怎么样？」她问。「呃……妳这么问我还真不知道该怎么回答妳……」「很……奇怪吗？」「嗯……大概吧……」「………………」「——啊，没有啦！不会很奇怪——一点也不奇怪啦，真的。」「嗯……好啦……」看来她似乎是接纳了这个说法，转身便朝着海浪拍打着的海滩潮在线缓缓跨了出去。浅滩上的浪涌上来之后又返了回去。冰冷的海风撩起了她的长发，天空似乎担心着这样的天气不够寒冷，特地还洒下了绵绵的细雪。她脱下鞋子，将鞋子提在手上，带着喜孜孜的脸庞赤脚踩着潮在线的浪花。「喂，你看我看起来像个杂志模特儿吗？」她对着我问。「嗯——还可以吧？」寒风中，我和她呼出的气息全都化成了白烟。答了话之后，我提起了方才从车上拿下来的相机就是之前在车上找到的那个便宜的即可拍相机——这台相机里头还残留最后一张空白的底片。「那我要拍下来哦！」我说。「咦？」「拍出来的照片肯定会让妳看起来更可爱的——来吧！」我边说边提起了相机，将镜头对准了她。「………………」「好了，妳就别不好意思了吧——快点！」「……嗯。」我透过镜头抓住了站在潮在线她的全身。此时，她不知道是因为紧张还是害羞，脸上表露出了比起以往任何时候都要来得复杂的表情。「喂，妳也摆个象样的姿势嘛？」「……可是……」「不要可是了——快点，像妳这样呆呆站着怎么像个杂志模特儿呢？」「……好啦。」她强忍着内心的羞怯，带着一张红通通的脸庞将一手放在自己的腰上，同时高高举起了另一只手，将手笔直地伸向蔚蓝而深邃的冬季天空——好似要抓住什么似的，直挺挺地朝着天空伸展着。我看着她，「妳还少一个动作……」「……什么？」「……妳忘了要笑了啦。」「咦？」「……笑一个嘛，濑津美。」「………………」「……你年纪比我小耶……凭什么直呼人家的名字……」她说。接着，她便初次在我的面前展露了笑容——她穿着自己心爱的那条短裙，胸前包裹着一条用来充当比基尼泳装的白色毛巾，对着我手中的即可拍镜头展露了笑容；背对着如翡翠般呈现蓝绿的海水，像个平面模特儿一般对着镜头展露了笑容……「好了！那接下来换一个更有动感的姿势再拍一张吧！」我说。「嗯」她提起了脚步，带着愉快的表情在水边玩了起来。虽然我手中的相机底片用光了，不过我仍抓着这台即可拍用镜头持续地捕捉着她的身影。「哦？我看妳好像已经进入状况了哦？」「才、才没有呢……」在我们爽朗的对话声中，天空似乎担心着这样的温度不够浇熄我们的热情，因而特地增加了风雪的强度。而我仍提着底片用尽的即可拍，透过镜头凝视着那张脸上写满了兴奋表情的濑津美。那一副娇小的身躯，即便在寒风拍打之下，仍带着一张遗忘许久的笑容对着镜头看过来。——哗哗……「……那我们就玩到这里吧……」她丢下了这么一句话之后，转身便像之前两次一样，朝着大海中央缓缓迈开了脚步。「啊，对了，你的驾照……」她忽然想起了这件事，于是转过头来对望着我。「不用还我了啦，妳就把它当成纪念品带走吧。」「嗯，好……」她点点头，又将掏出来的纸片收进了口袋。那张驾照是我之前送给她的。它之前留在我的手上，原本已经完全失去了它存在的价值，却又在过去的几个礼拜内重新找回了它存在的意义。她收起了那张驾照之后，接着也解下了绑在她手上的白色塑料手环，然后将它递给了我。「妳这是……要给我的吗？」我问。「嗯，拿去吧……」「喔……那我就当成纪念品收下了。」我接过了她的手环，然后收进了自己的口袋里头。「……我说呀，我之前告诉你的条文——就是那个七楼病房的病患之间口耳相传的条文，你还记得吗？」「记得，因为那是妳在我住进去的第一天告诉我的嘛。」七楼病房的病患之间口耳相传的条文……——第三次核发出院许可的时候我们就该有心理准备了，因为不可能会有第四次。——绝食是最好的方法。因为这么做最能够减轻我们带给自己家人的负担……这是属于我们这些即将永远与世隔绝的居民们的箴言和教条。「……在那些条文后面呀……我还想再追加一条……你会帮我传下去吧？」说完之后，她举起手，摆出一副好比一位知名偶像歌手一般的姿势——「当你比其它人早一步离开的时候……要为还活着的人留下一抹笑靥……」——说完，濑津美的脸上也随之展露了微笑。「………………」「你还没有把这些条文传给其它人过……所以就拜托你啰……」她将这句话当成是她留在这个世上的最后一句话，噤口后转身便朝着大海中央再次跨出了步伐。但我看着她的背影，没让她就这么直接离开。「……让我再问妳一个问题好吗？」我说。「这次……妳希望我阻止妳吗？」我问。「…………」「还是妳希望我对于妳的这个决定，在妳背后推妳一把呢？」面对我的提问，她伫足停下脚歩，但却站在原地没有回头。推过来的浅浪盖住了她的脚掌。一阵狂风刮过远浪，掀起了绵密的飞沫，冷冰冰地打在她的身上。……我不知道此时此刻的我究竟是该伸手阻止她好，还是该从背后推她一把好。或者我根本应该和她一起结束自己的生命……我真的不知道。但我想大概无论是谁面对这个情况也不会知道。人在面对自己身上的痛楚时，无论多痛都可以强忍下来，却无法忍受出现在别人心里的折磨——如果人性的本质真的是如此美丽而纤弱，那么到底有谁可以忍心制止她这般『任性的行为』呢……此时，濑津美回过头来了。「……我不知道耶，呵呵……我真的不知道呢。」她说。接着，她对我展露了笑容——冷冰冰的飞沬随着狂风洒下，她在眼角的泪光之中为我留下了这么一抹微笑。她走了。前两次的她总在海浪的潮线末端停下脚步，然而，这次她却没有……。我想，这就是她最后留给我的答案吧……『……就这样吧……拜拜……』——就这样，我和她一起走过的，960km的旅程结束了。对我而言，这趟仅仅十七天的旅程，对她来说却总共历时了二十二年之久。而这趟旅程的终点，既不是在医院里的七楼病房，也不是在她的家里。她凭着自己的意志而避开了这个既定的结局。她成了200X年中推定共三万五千名自杀死亡的人数中的其中一个——她的名字叫作濑津美，血型是0型；二十二岁，女性……手环的颜色是白色。关于濑津美，这短短的几行叙述已经是她的全部了。但我知道……我知道她喜欢比基尼泳装；我知道她对于道路分布的情况比起卫星导航更来得清楚；我知她喜欢车子，拥有一般自小客车驾照；她总是不会将喜怒形于脸色，但偶尔也会露出有些羞怯而别扭的表情。这天，她背对着翡翠色的大海，提起脚，高兴地踩着水花，为我留下了一个彷佛平面模特儿般的笑容。然而，她这般耀眼的笑容在便宜的即可拍相机里头，却仅仅只占据了一张的底片容量。但就这么一张底片，却也是我和她共同拥有的一段记忆。我抬头望着冬季的天空——这天的天空蓝得让人感到哀伤；这天的阳光也让人感到刺眼——是我和濑津美共同拥有的，冬季里的某一天。终章就在电视台已经提早开始播放新一期的春季节目时，我又回到了医院里的七楼病房。今天的我同样也是待在谈话室里头度过——这是我最近这几天习惯的生活方式。从那次事件之后，我总觉得好像有什么东西不一样了，却又好像什么也没改变。一如我的预期，把我骂到臭头的老爸这几天都没再来医院看我了。然而，倒是濑津美的父亲和母亲都对我满怀感激。这两者之间表现上的落差还真是相当鲜明的对比。「午安，身体怎么样了？」前来询问我状况的人是莳绘小姐。她好像是一楼综合柜台的柜员，不过这阵子却来找我。「嘿哟。」她喝了一声，同时坐到了我旁边的一张铁制折凳上。「阿东，虽然事情已经过去了，不过我可以问你一个问题吗？」她说。「嗯……什么问题？」「……那天，你有阻止濑津美吗？」「………………」面对这个问题，我想了一下究竟该怎么回答才好，最后还是照实说了：「不，我没有阻止她。」「这样啊……我不会说你没有人性，不过你的答案让我觉得有些失望……」「那妳呢？如果换做是妳，妳又会怎么做？」「那当然是——」「当然是怎么样？」「……对不起，我不知道……」她答话的同时垂下头一会儿，结果又再抬起头来说：「虽然这么说也许有些不妥，但如果我是你的话，我想我会跟着她一起结束自己的生命吧。」她说。「……我没办法这么做，因为我还有话得传下去……」「有话得传下去？什么话？」「没有啦，这跟妳没关系——至少现在没有……」我径自把话题在这里作了一个结束，站起身来便打算回到自己的病房而欲离开谈话室——同时，我也在心里小小声地把没说完的话给接了下去：（……如果哪天妳也住进了这个七楼病房，妳就会知道我得传下去的话是什么了。）离开前，我的眼角瞥见了摆在窗台上当作装饰的花瓶。花瓶里插着一朵白色大花，是水仙花。听说这些插在花瓶里的水仙花其实是从中庭里的花圃中摘过来的。……这种花不折不扣就是水仙花。然而，当时我几次问她这些花有什么分别的时候，她为什么会说淡路岛的才是水仙花呢？像她这么博学的人，肯定知道医院里的中庭花圃就有水仙花吧……水仙花——学名——Narcissus，花期是十一月至来年三月。这种花虽有种子，不过因为由种子培育至开花需要经过数年时间，因此多以鳞茎作为人工繁殖及栽培的主要方式。——花语为『自恋』。……不过，真是这样吗？还有，她最后在七楼病房病患之间口耳相传的条文中加上的最后一条——我……真的能在死前为还活着的人……留下笑容吗……后记各位读者大家好，我是片冈とも这部水仙花原本是我基于自己兴趣所做的游戏剧本，能够将它以这样的形式出版，让我心里真是满怀感激。话说，在我第一次听到出版社提起要我将这部故事写成小说，我真的吓了一跳。因为即便我长年都在负责撰写游戏剧本的工作，不过我本身其实既没有读过小说，也没有写过小说……(汗)后来，出版社拿了几本作品要我参考，比较之下，如果要我作些评判(批判？)的话……其实我觉得这部小说版的水仙花，本质上似乎不太能够算得上是轻小说……因为即便我真的全神贯注地完成了这部作品，不过身为作者的我其实也拥有相当程度的自觉——这部水仙花的内容根本完全没有娱乐成分……——我说，以轻小说形式出版这本书真的好吗？编辑部的各位……其实直到现在我的心里都还七上八下地不太能够安心，好像随时都有人会跟我说，这其实是一场误会一样……话说，这次小说化的故事内容基本上是以水仙花的游戏版本第一部为主干而写成的。我自己是觉得这个部分我在写成小说之后对各位读者来讲应该是不会有什么理解上的问题才对，不过，因为其中也有参杂了游戏第二部故事的设定，因此如果各位在理解上有困难的话，那还请大家见谅……说到这里，在小说中登场的莳绘其实在过去还从未有过图像化的呈现，因此，就连我自己也非常期待以图像形式出现的她究竟会长什么样子呢。好了，这本小说能让大家读到这里，我真的觉得非常感激。另外，我想大概有些读者朋友都有在玩我们公司所出品的游戏跟影像作品，而我写小说的机会也不多，因此，不管是小说也好，是游戏也罢，就让我们有机会再见吧！届时也请各位多多指教！片冈とも</code></pre><p>第二卷 一卷全</p><pre><code>■&quot;序章&quot;１Ｆ的门诊前方。在地板上贴着不同颜色的胶带。这是指示着红色，蓝色，绿色等颜色所代表的各科所该前往的地方。在这当中，我沿着白色胶带前进。走大约３０ｍ后，在右手边看到商店。在这对面有着吸烟室。左手边有着外科检查等待室，在走道尽头后，有着小电梯。我搭乘着电梯…按下了最顶楼。迟。叮，——７Ｆ。在眼前的是护士的工作场所。护士们一同往这边看来。可是，知道是我后又转移视线。好像，什么都没看到一样，继续工作。…高的天板，只能打开１５ｃｍ的窗户。这里是又白又亮无机质的地方。然后我前往在尽头左手边的谈话室。谈话室大的电视和沙发。窗边摆着几朵花。有着夏天的感觉，花瓶种植的是迷你向日葵。盆栽种植着非洲菊，正鲜艳着开着。…这些都是曾经看过的东西。「再次来到这里…大概隔了几年呢…」和那时候不同的也只有我的服装。从水手服变成睡衣。还有手腕的手环，从蓝色变成白色这种程度而已。『你…』听到声音后回头一看，是不认识的老婆婆。看她穿着睡衣和手环的颜色，代表着她也是这里的病人。『你是来看别人的？还是其他楼层的病人？』「…不是」我一边摇头，一边给她看我的手环……『啊…原来是这样…』老婆婆不好意思地回答着。在这句话的背后我感受到，”明明还这么年轻真是可怜”这种语意。当然像是这样的经验我也多到厌烦了。再怎么说也这样活了１０年了。…只是没想到，会被同样是７Ｆ的人同情。『对了你……第几次？』「…是指什么？」『来到…７Ｆ这里』一瞬间，我不知道她在问什么。不过，在我问她之前，『看来似乎是，第一次』老婆婆自己擅自理解，这样说着。『那么，也告诉你吧，要好好听喔』「………………」『…首先，７Ｆ这个地方…』明明我没回她话，她还是一直说着。…没有第４次。第３次出院的时候是最后一次请觉悟。想逃跑的时候不要走Ａ车站，走Ｂ车站。什么都不要吃…对家人来说负担最少。说着这样的内容。也听到了其他让人感到困扰的事情。大概这是只有７Ｆ的病人…只有正一步一步踏向死亡的当事者们，他们持续传过来的事情吧。『怎样？知道了吗？』「…嗯」老婆婆大致说明完了后。感觉气色变得比刚刚还要好。『传达给像你这么年轻的小孩，也感到有点于心不忍…』『不过这也是规则，不要难过』说着这些，老婆婆走出谈话室。离开的时候，老婆婆说着你也传达给初次来到这里的人吧——空炙热的阳光和蝉叫声。从只能打开１５ｃｍ的窗户外看到的天空。看来今天也会很热呢。…不知道经过几年再次来到了７Ｆ。我第一次以这里的病人的身份来到了这里。…以及，传达给我的规则。本来，只有这里的病人才可以传达下去吧…「不过…这当中有几个，我早就知道了…」…也许从那天开始…就知道会有这一天…「…就预料到会有这一天也不一定…」序章—姬子—「姊姊」「呼呼呼」「怎么了？千寻，喘成这样？」「因为再不快一点的话…」「又穿成这样」「怎么了？」「真是的，又脏又黑」「又没什么关系，因为是工作服脏也是正常的」「明明昨天才洗好的…」「是是，真是抱歉呢」对着油污抱怨的妹妹。在星期日的玄关前说话，单纯的日常光景。「啊，比起这个，再不快一点的话弥撒会迟到喔」「啊，已经是这时间了呢…」「快快，快一点换衣服去教堂吧」「嗯…还是不要好了」「又不去了？」「这样不行啦，因为姊姊平常都没去」「至少，星期日要去」「真是笨蛋，千寻」「正因为是难得的星期日所以才要翘掉的啊」「真是的，又说一些怪理由」「在这么好的天气，神也不会计较的」「…和天气又没关系」「而且，反正今天也一定只有在修理车子…」「那么，母亲也拜托你了」「啊，姊姊真是的」序章姬子０２—亲友—喀啦喀啦喀啦，家隔壁的车库。有朝气地把门打开。「今天也开始吧」因为门关着的关系，车库里正闷热着。我立刻前往修理途中的爱车。这是在一个月前买的。虽然说是修复，但内容也只是修复到能跑的程度而已。再说，车子本身与其说老旧，不如说破烂还比较相称，这种年代的车。但是，因为这关系，最近这个车库变成周末我度过的地方。叩叩，「姬子，在吗？」「这边这边」「怎么了？来到这边」「因为来到附近了，所以顺便来看看…」「你怎么黑成这样？」「嗯，因为从昨天在作ｏｉｌｐａｎ的交换」「…ｏｉｌｐａｎ？」「嗯，这个也是非常辛苦的呢」「不如说外行人能做到这种程度的人很少呢」「不管是ｐａｎ还是饭都好…」「你看，这个自制的起重架很了不起吧」「不过没有绞盘还是很辛苦呢，哈哈哈」「…………」「唉」「那个，姬子…」「喜欢车子也是好事」「不过年轻的女生黑黑的，整天窝在车库算什么啊？」「嗯？难不成很奇怪？」「很奇怪」「哈哈，不过有什么不好」「我呢，比起像是优花穿的这样轻飘飘的衣服，比较喜欢这样子」「嗯嗯，你从以前就这样呢」「不过,姬子也真喜欢车呢」「好不容易拿到的薪水竟然花在这辆破烂车」「不是破烂车叫它Ｅｕｎｏｓ」「而且这个型虽然老旧可是还蛮有人气的喔」「真的吗？」「嗯，因为这样从现在开始到冬天的奖金前都是贷款地狱啊，唉」「嗯嗯，比起这个不如快一点修好车，载我去兜风吧」「嗯，大概下周开始就可以跑了」「那决定了，那么，下周如何？」「啊，对了，你星期日没办法去吧」「嗯，没关系喔」「不过，不是有教会吗？」「没问题的，而且最近也完全没去」「反正我是伪天主教徒」「这样说可以吗？」「嗯，也只是刚好家在教堂旁边而已…」「欢迎回来，千寻，今天真晚呢」「啊，嗯…」「嗯？好像没精神的样子…」「难不成……刚从７Ｆ回来？」「…嗯，负责的人已经第３次了…」「这样啊，那很多事情都很辛苦呢…」「咖啡烧好了喔」「谢谢…」几天后。我们开着修好的Ｅｕｎｏｓ去兜风。「哈哈，还蛮能跑的呢」「那个，姬子，不要开这么快啦」「会吗？明明是很安全的驾驶不是吗？」「你可能是这样没错，不过你这开法对于不常开车的我很紧张」「ＲｏａｄＳｔａｒ最棒了」「请听别人说的话啦」「而且这台车怎样了啊」「嗯？怎么了？」「为什么没有车顶？」「没啊，因为本来就是这样啊」「什么本来啊，头发不是会被吹的乱七八糟吗？」「真是笨蛋啊，竟然不了解ｏｐｅｎ的乐趣…」「…适婚年龄的女生才不需要这种乐趣」「呜，难得花了１小时打扮的…」太阳还很高。在梅雨前晴朗的天空下前进的Ｅｕｎｏｓ。不久后，穿越了很长的山道后，蔚蓝的大海迎面而来。「拿去吧，咖啡」「谢谢」啵咻，「咕噜咕噜…呼」像是刚洗完澡一样，插着腰一口气喝完咖啡的优花。对周围的人来说总是穿着轻飘飘的衣服摆样子是优花的本性。然后我们手拿着咖啡，就这样前往沙滩。「…这里，真漂亮呢」「嗯，海风也很舒服，人也少…」「姬子还真知道有这么漂亮的地方呢」「啊，嗯，算是吧…」「…虽然不知道这里是哪」「嗯？」「没啊，就像说的一样…」「稍微等一下」「为什么开车的你会不知道」「其实，是这样的…」「只是随便前进，偶然到达这边…」「这样说的话难不成」「从刚刚到现在都只是靠感觉来开而已？」「算是吧…差不多是这种感觉，哈哈」「真不敢相信」「倒不如说，虽然也担心能不能安全回到家，不过更不能相信整天陪着你这样兜风的自己」「哈哈，总是有办法的啦…大概」然后我们把报纸铺在沙滩，开始吃途中买的商店便当。原本的话，应该带着便当比较有兜风的感觉，不过我们擅长的菜都是水煮蛋而已，所以也没什么好要求的。至少带着野餐布来就好了。「不过，姬子…」「什么事？」「没有导航系统的话至少也带着地图吧」「不过也蛮喜欢靠着感觉来开车」「那至少不要再穿成这样啦」「为什么？我明明很喜欢工作服」「不行，因为在旁边的我觉得很丢脸」「明明很有功能性」「…比起功能，先优先选择漂亮啦」一边说着话，二个人吃着便利商店的便当。随着海风吹拂而摇动的松树林和很高的菠萝树。有时候海鸥也靠过来。尽管是这么优美的场景…该怎么说呢，明明是像画一样的地方，却在沙滩铺着报纸，优花穿着褶边衣服，我穿着工作服实在很好笑。「那个，下周也来吧？」「才不要」「哇，马上被拒绝了」「因为啊，总觉得很悲伤，每星期每星期都是二个女生一起兜风」「因为这是二人乘坐的」「不是这问题吧」「因为都是寂寞的同伴」「…」「…虽然很不甘心不过没办法反驳」再次前进的Ｅｕｎｏｓ。在海边游玩的我们也准备回家了。边想着今天真快乐。边握住方向盘的时候。「可是啊，你最近不是都没去吗？教会」「…」「千寻也在抱怨的说」「最近姊姊都不去」「……………」「那个，偶尔也去一下如何？」「……………」「没问题啦」「而且以前也说过了」「反正我只不过是伪天主教徒」「所以…没问题的…」「…姬子？」「因为这样，决定下周也兜风吧」「下次带个便当吧？」「然后，去比今天更远的地方吧」「……………」「呼～」「是是，知道了啦，真拿你没办法只好陪你了」「谢谢，真不愧是亲友」■姬子０５—病院—在这之后１星期后…在教堂充满着前往主日学的人们。照着上周的预定，原本该是开着ＲｏａｄＳｔａｒ前往海边的时候。…我却在医院的床上…「姊姊，苹果削好了喔」「谢谢，你也吃吧，你也喜欢不是吗？」「嗯」「呼，真重」「姬子，你看，帮你买来了喔」「抱歉呢，那本书下面的店没有卖呢」「虽然没什么关系，不过下一次可以选薄一点的书吗」「而且也不要狂热者取向的书啦，因为拿到柜台的时候很丢脸」「不过我觉得ＭＯＴＯＲＣＹＣＬＩＳＴ和ａｍｅ车ＭＡＧＡＺＩＮＥ是很普通的书…」「对我来说不是这样」「二个人都停下来啦」「因为这里是双人病房，不能太吵…」「对呢，抱歉」「嗯嗯…」「嗯，这哈密瓜真是好吃呢」「那个，你是来探病的，不要这样一直吃啦」「又没什么关系，而且有很多」「真是的」「不过啊，突然听到你住院的时候吓了一跳呢」「嗯，我也吓一跳」「结果急忙跑过来后…」「看到这么有精神，真是扫兴呢」「不要由你来说啦」「哈哈，因为大家都摆这样的脸嘛」「对了，千寻，其他的人呢？」「嗯，虽然来了很多公司的员工，不过刚刚回去了」「顺便一提，空手来探病的只有你喔」「真烦呢，有买奇怪的书给你不是吗」「那个是有给你钱的，实在称不上慰问品」「还是一样说些歪理…」■姬子０６—夏—「在这之后数个月…蝉叫的时候」「春天时每天来探病的人几乎都没来了的时候」「我还是一样，躺在医院的床上…」「今天也很热呢…」■姬子０７—二人—「注意到的时候，树被染成红色…」「连医院的生活也习惯的时候…」「即使来看我的人都不来了，我现在也还是在这里」「今天那二个人…也来到这里」「姊姊，今天有附布丁喔」「这样啊…不过现在不想吃」「千寻，你吃吧，你不是喜欢布丁吗」「这是姊姊的午餐，不自己吃的话不行」「那吃了这个后可以帮我买肉包吗？」「真是的，不要说一些奇怪的交换条件啦」「嗨，看起来精神很好呢」「啊，优花来了…」「怎么了？今天又因为挑食在耍孩子气了？」「是啊，姊姊真是的，真拿她没办法」「真是的」ＳＥ＞叩音叩，「好痛」「不要让千寻困恼啦」「只有你实在拿你没办法呢」「呜，明明没必要用盘子打我…」「快吃吧快吃吧，不然强迫塞到你嘴里喔」「知道了啦」「刚刚也只是开玩笑说的…」「嗯？还说些什么的是这张嘴吗？」「哇，别捏了啦」「哈哈哈」「那么，姊姊…我差不多要去了…」「嗯，也帮我和医生问好」咖叽，碰「…千寻还在做啊？」「是啊，现在担任照顾７Ｆ病患的工作所以很辛苦…」「这样啊…记得那边是ｈｏｓｐｉｃｅ吧」对那句话我稍微点了个头。然后，决定坦白的说出，从以前就在心里角落想的一件事情。只有她是最想传达的…「那个，优花…」「假如说，假如说…」「有一天我也住进７Ｆ的话…」「…」「等等，怎么突然说这种没头没尾的话」「…听我说…」「……………」「如果我住进７Ｆ的时候…」「就…不要再来看我了」因为这句话而低头的优花。就算是我也不想看到她难过的样子。不过，如果真的住进７Ｆ的话…一定会让她更难过。光是看到难过的优花我大概就受不了了。「笨蛋，你在说什么」「我每天都会来的，拿全勤奖」「当然是空手来，什么慰问品绝对不会带来」「所以…不要说这种话…」「…优花…」「呜呜…」…在这狭小的病房，传遍了她的哭声。明明到现在为止一起生活了好几年…即使熬夜聊天也没有找不到话题过…不过现在，我没有能和她说的话。☆冬「风从清爽的凉风转变成寒冷的风的时候」「像平常一样，来到这里看我的二个人」「不过…从某天开始有点改变了」「我吃饱了…」「啊，连花椰菜都吃完了呢」「虽然其实很讨厌…」「那个，还有什么想要的东西吗？」「嗯…想要冰淇淋」「还有也想要肉包」「……………」「我知道了，我马上去买」「…」嘎叽，碰「…明明只是打算开玩笑的…」「明明以前到现在…怎么拜托都不行的…」「我回来了」「用跑的买来了喔」「……………」「你看，还很热，很好吃喔」「冰淇淋我先写上名字放到冰箱」「这样啊，谢谢…」「嗯，还有什么想要的东西的时候就说吧？」「然后，快一点好起来…」「再…一起去教堂吧」「…………………」「千寻…」「你说话的口气变成ｈｅｌｐｅｒ了喔」「…」「看来似乎是这样」「啊，那个，并不是这样…」「不用隐瞒也没关系，因为我这半年也不是白过的」「姊姊…」「而且已经住院高达半年以上，也觉得大概差不多了」「圣诞节快乐」「姊姊，你看，蛋糕买来了喔」「看起来很好吃呢」「嗯嗯嗯…」「不要突然就吃起来了啦」「有什么关系，明明有很多」「不要理所当然的把草莓拿走啦」「优花，等一下啦，我切好放到盘子上」「知道了」「真好吃呢」「是啊，虽然几乎都是优花一个人吃完的」「什么嘛，连像今天这样的日子都来了，吃这点没关系吧」「唉，原本应该正过着愉快的平安夜的时候…」「老是说谎，明明连对象都没有」「虽然很不甘心不过没办法反驳」「还有，姊姊…」「嗯？」「圣诞节礼物…我尝试编织围巾的」「…………」「那个，虽然可能不是编的很好…」「不会不好，谢谢，千寻…」「嗯…」「真的是对姬子来说很浪费，很能干的妹妹呢～」「真烦呢，还是老样子空手来的你在说什么啊」「二个人都不要再吵了啦…」「千寻…」「顺便还有一件想做的事情…」「…可以吗？」「嗯？什么？」「这样啊…果然还是不太适合在这季节开呢…」「笨蛋，请开之前就发现啦」「哈哈，的确是这样呢…」从远处听见的海声。和春天那一天一样还是很高的菠萝树。昏暗的天空完全转变成黎明的时候…注意到的时候我们已经到了这个场所。「还真的能平安到达呢」「如何？我的驾驶技术以及我的车都不错吧」「算吧，假如扣掉寒冷的话」「对了，我去买饮料给你」「真是的，快点决定啦」「因为虽然说是１２０圆，不过我可是很少请客的呢」「………………」「那个，不管是什么都行，说想要的吧」「…什么都行？」「嗯」「……………」「那么……想要地图…」「…地图？是说那个地图？」「嗯，Ｅｕｎｏｓ就当做回礼给你了」「…」「…要好好珍惜」「……………」「那个，看来我似乎要去７Ｆ了…」「说不定是…”报应”也不一定…」「所以…可以的话能收下吗？Ｅｕｎｏｓ」「做不到的…我没办法收下」「还有，优花…以前也说过…」「希望你不要再来看我了…」「呜呜…」「因为看到你这样我也很痛苦…」「……」…钟声响彻着…「在教堂充满着前往主日学的人们」「正处于非常寒冷的冬天」「我手腕的手环…从蓝色变成白色」&quot;ＶＯ＃０４：１５夏&quot;…耀眼的那天发生的事…那个夏天发生的事…炙热的阳光和蝉叫声。梅雨季节也终了，完全进入夏天的时候，反复进出了医院好几次，好不容易出院了。不过，这不是代表结束了。出院这词也代表着，下一次入院，就是长久医院生活的开始。…在炎热的天底下，我今天也穿着睡衣前往着走路３分可到达的医院。对着正要看陪我去的母亲我说着，”没问题的”。自己也尽量为母亲着想，不过看到母亲因为这句话而难过的样子我也很痛苦。「…还可以的」不知道为什么这样自言自语，从单杠上看见的景色。强烈的阳光把地面染成白色，光线受到扭曲看起来路面就像被摇晃扭曲一般。常常听见似乎很高兴的小孩声，以及表示自己是夏天的主角的蝉声。我用着已经因为支持身体而开始震动的手，感受着”现在”…为什么会突然想做这种事情呢…详细的原因自己也不知道。现在没有穿睡衣以外的衣服的时候，也没有需要穿睡衣以外的衣服的时候。因为这样而感到寂寞呢…还是，想确认自己的体力还没问题呢…「我…应该和大家一样的…」…和普通生活的大家一样，应该在”那边”才对。明明像是在单杠上转一圈这种事情，也不需要这么痛苦的来做。「…好热……」明明还是早上却很热的柏油马路。看来今天也会很热呢。在这天气，像平常一样一个人前往医院。因为距离短，所以其实就这样穿着睡衣也没关系，不过现在外出的时候常常穿着水手服。…看来我还在动摇着。这动摇会持续到什么时候自己也不知道。可能某天会突然就放弃也不一定。觉得光是３年这时间，就足够改变一个人了。「…全勤奖？」「嗯，然后…是我最好的亲友…」姬子感叹地像是自言自语地说着，虽然是温柔的眼神，不过感觉很寂寞。「多亏这样，剩下的３件事变成２件事了呢」「…不是菠萝树吗？」「虽然这件也是…不过是指别的…」「想再见她一面…见亲友一面」炙热的阳光和蝉声。初次摸到的手非常的温暖。不久后就要搬到７Ｆ，那个夏天的事情。…就这样，我们成为了朋友。…Ｎｅｌｌｏ和Ａｌｏｉｓｅ成为了朋友…几天后。一如往常我前往了她的身边。「好热…」蝉开始认真叫，看来今天也会很热的样子。叩叩，咖叽，「早」「…早」「早上的体温检查已经结束了？」「嗯，６．５度…」「这样的话就安心了。」说着，把早餐的餐盘收拾好。这之后，到下午之前我就没有该做的事情。本来，ｈｅｌｐｅｒ的工作就不多。担任医疗行为的部分的也是医生和护士的工作。能做的就检查体温，还有在背后支持日常所需。…不过反过来说支持日常所需是没有”上限”的。正因为这样，给予Ａｌｏｉｓｅ的称呼的不是医师和护士，而是ｈｅｌｐｅｒ。「那么，要去餐厅吗？」「可是，刚刚才吃过的…」「冰淇淋喔，冰淇淋，因为这么热」「可是…」「没问题啦，姊姊请客」然后我，像是推着她一样前往餐厅。因为还在上午，还没什么人。在这，我们并排地坐在椅子上。「什么都可以，说喜欢的吧」「可是…」「就说过，不用客气了」说着，把餐厅的菜单面向她。「……………」「那么，香草口味…」「好的，香草口味了解。我要吃什么才好呢～」「冰淇淋只有一种口味呢」「嗯，好像是这样…」「哈哈，那个，没有选择的余地呢」「、…」「那么，马上去买」我把她留在座位上，前往了柜台。看着四周后，和这个小孩同年纪的小孩，正和着母亲和父亲一起用餐。虽然是理所当然的，不过像是她这种年纪，一个人在医院的餐厅反而感觉怪怪的。…不过，她的双亲已经不在了。当然她不知道。也没让她知道。「久等了～」「哇，好多冰淇淋」「嗯，因为比想象中的还小，我觉得只有一个很寂寞」「因为这样，平均一个人２颗吧」「……………」「奇怪？难不成是讨厌冰淇淋」「不，不是这样…」「…假如，被母亲看到的话大概会被骂」「总是说冰淇淋不行…」「没问题啦，因为和姊姊在一起」「…真的？」「嗯，医生和护士也不会生气的」「嗯，我知道了」「…怎么了？」「对了，我母亲…」「最近，都没有来看我」「……………」「明明以前是每天都来的…」「…这样……」我只能这样回答。虽然这小孩也没理由会知道，至少，我没办法告诉她。你的双亲已经不在了。在这之后，你将要一个人孤单地前往７Ｆ……怎么可能说出这种话。然后，虽然是很悲哀的事情，我也知道了这是常有的事情。留下病人，家人就这样消失了。大概有很多理由吧。在经济上，心理上…虽然我觉得是非常薄情和残酷的行为，不过也没打算要单方面的责备双亲。也没有双亲会想把小孩留在病房，就这样离去。大概远超越累了之类平凡的形容，对于当事者来说的苦扰和负担非常大吧。…只是…觉得这世界很冷淡。不过我知道，这也是现实的一部分。「嗯？姊姊怎么了？」「不，没什么」「比起这个…」「要是喜欢的话我的份也给你吧？」「可是…」「没关系啦，不用客气」□把她吃完的盘子收下后，把自己的装着冰淇淋的盘子放到她面前。「…好吃？」「嗯…」「这个冰淇淋真好吃」…这样说着对我笑了。一直都很客气的她，第一次对我笑了。只是医院餐厅便宜的香草冰淇淋……第一次，对我露出了笑容…几天后。炙热的阳光和蝉声。今天我也前往那女孩子的身边。虽然从前几天开始移到７Ｆ，不过并没有特别的改变。所以，现在最大的不安是有关于双亲的疑问。我没有自信，到底该怎么回答这问题——７Ｆ「早安」「嗯，今天也很热呢」和亲近的护士朋友说声早安。「如何？已经习惯这里了？」「嗯，原本的５Ｆ也是单人房」她指的『这里』是指７Ｆ的事情。问我习惯了吗？也不是指我。「难不成，晚上也一直在一起？」「嗯，因为已经习惯睡在医院的床了…」「果然没有监护人，很多事情都很辛苦呢…」对于那句话我暧昧地点头。顺便一提，她指的没有监护人…并不是指行踪不明之类的，而是指已经不存在于这世上。虽然护士长并没有告诉我死因，不过有说不是发生事故也不是生病死亡。…剩下的死因只剩下一个。所以，互相的。我也不继续追问下去。这是在现在，对于我们天主教徒来说，这是很重的罪，也是禁忌之一。「那么，要是有什么事情就和我说吧」「嗯，谢谢」叩叩，咖叽，「早～，状况如何？」「嗯，今天还不错」「今天也是漂亮的花呢…」在窗口装饰的几个小花瓶。在那映照出鲜艳的白色与黄色。「那个，是护士装饰的」「这样，真是太好了」边回答着边倒水到非洲菊的花瓶里。她很高兴似地看着。乍看之下，是很平常的病房情景。…不过，其实并不是这样。原本来探望她所带来的花是不存在的。因为没有亲人，所以本来就没有人会带花来。不过，在这里的医院…特别是这里的７Ｆ，每天都会从别人那收到花。然后护士和我们ｈｅｌｐｅｒ把收到的花，分散在这里的全部楼层。要是这样花还是不够的话，从花园中选择喜欢的花来补足。这也是工作的一部分。即使是完全没有人来探望的病人，也”做出”平常都有花的状态才是实际的情形。「喜欢非洲菊？」「嗯，不过更喜欢白色的」「这是教会的人装饰的」「嗯，看来来过了呢」「嗯，她说还会再来」「对了…」「关于父亲和母亲的事情…」「那个，有人说是去很远的地方旅行」「…？」「所以，有一段时间不能来看我」「嗯，母亲怎么不快一点回来呢」「总是，带着做好的布丁过来喔」「……………」「到时候姊姊也一起吃吧？」「嗯，很期待呢…」除此之外，我不知道该如何回答。只是对着这无法形容的痛苦，我不由得随便找其他的话题接下去。「对了」「去餐厅吧」「可是刚刚，才吃过早餐喔」「没关系，我再请你吃冰淇淋」再次推着她背后，前往平常去的餐厅。…成为朋友的Ｎｅｌｌｏ和Ａｌｏｉｓｅ。虽然其实比较像是Ｐａｔｒａｃｈｅ，不过我们没办法和她们一起死。所以我是，Ｎｅｌｌｏ最好的朋友Ａｌｏｉｓｅ。…不过，有着隐瞒的事情，真的能称作是朋友吗？然后，她再过不久就要死了这件事情…又必须隐瞒到什么时候才行呢…＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿知了，几天后。今天也是晴朗的夏天。在这样的天空下，我们前往了中庭。「好热…」「…千寻」「濑津美…？」「…这个，我带来了」「姬子要我交给你的」「这样，谢谢呢，在这么热的天气中…」「啊………」「…谢谢…」「那个，可以帮我传达给姊姊吗？」「…？」「假如，有需要的时候…」「随时都可以和我说…」「…嗯，我知道了」「…那么」「等一下」「希望神的恩惠和幸福降落在你身上…」「…又是为了我？」她没回答我这问题。只是对我露出温柔的笑容。一出教堂，迎面而来的是如雷般的蝉声。太阳来到头顶上，在地面投射出影子的炎热时期。在这时，千寻说现在要去学校，放学后也会去７Ｆ。星期六的时候会前往启智学校，星期日的时候也会帮忙弥撒的工作。…和她同年龄的人，一定完全不同。正在以自己为中心快乐地生活。这样的生活方式，只适合千寻吗？是天主教徒的话，这样就是理所当然的吗？我有点不了解。叩叩，咖叽，「如何？已经吃完了吗」「嗯…」「又把花椰菜留下来了」「因为本来就不喜欢嘛…」「真拿你没办法」明明以前乖乖的吃完的，现在却挑食的留下来。不过，这并不是因为病情恶化而导致没食欲。只是单纯地变得会和我撒娇吧。这样想着我也很高兴。「那么，体温计」「用嘴来测试体温也可以，不过不可以咬喔」「嗯」「对了…」「因为很危险不能说话」「好」「…几度？」「６．５度，这样的话算是正常的温度呢」「那个，今天也想外出」「中庭？还是冰淇淋？」「嗯，哪个才好呢…有点烦恼呢」「对了…」「比起这个，有不认识的老婆婆来和我说话」「…不认识的老婆婆？哪时候？」「那个，昨天晚上」「是来探望病人的吧？」「不，因为穿着睡衣，应该是这样的人」「然后，她来说了什么？」「那个，她问我是第几次」「…第几次？」「嗯，她说要是第一次的话，有事情要告诉我」「你回答什么？」「我说有点不太了解后，她说那下次再说吧」「……………」「…姊姊？」「啊，抱歉」不由得，愣住了一下。「那么，今天去中庭吧？」「难得今天的天气不这么热」「嗯，不过冰淇淋有点可惜…」「那么，就在中庭吃冰淇淋吧」虽然说有点凉不过也是真夏。就算有风，阳光还是很强烈。所以，我把她留在中庭的椅子阴影处，跑着去附近的商店。「久等了～」手里拿着刚从商店买回来的冰淇淋，跑着回来。「流好多汗」「好热～」因为流着汗，不由得拍着裙子。在这真夏中奔跑，流汗也是理所当然的。「你看，冰淇淋还没溶化喔」「嗯，谢谢…」「…姊分？」「不过…姊姊的份呢？」「我也有喔」我很夸大的拿出了装在６０圆的袋子里的苏打冰淇淋给她看。「你看」「啊，变成二个了」「这样做」ＳＥ＞咭吱，「好了，一人一半吧」「哈哈，嗯」在阳光下，我们二个人吃着苏打冰淇淋。「果然，冰淇淋最适合在炎热的时候吃呢」「嗯，虽然有点溶化」「那个，希望再为我做那件事…」「可以喔，那么帮我拿一下冰淇淋」「嗯」她双手各拿着１个冰淇淋。一个是我的冰淇淋，另外一个是她自己的。然后我从口袋拿出念珠后，像平常一样，静静地阖起手。「正如我们饶恕了亏负我们的人…」「饶恕我们对你的亏负…」…天主经。也就是所谓的主祷文。大概其实什么都好吧。只要，我为着她着想，然后她也因此而高兴，这样就够了…「结束了喔」「嗯，谢谢」「不会，也不是什么厉害的魔法」反正我也只是一个信徒，只不过是模仿而已。虽然是理所当然的，不过连那些句子也都不是自己的句子。「今天的是谁说的呢？」「当然是耶稣本人喔」「那么，也有其他的人吗？」「嗯，还有很伟大的圣者和教皇之类的，有很多人的句子呢」「姊姊知道这么多啊」「对了…这个给你吧？」说着，再次从口袋拿出念珠。「我可以收下吗？」「嗯，而且我还有一个…」「更重要的是，这样就可以一起做了呢」「我也可以…施魔法？」「哈哈，虽然不知道算不算是魔法」「嗯，谢谢姊姊」「这是今天的便当」「嗯，那么我去了」一如往常，我把便当拿在手里，前往了医院。虽然已经是８月半了，炎热的夏日还是持续着。７Ｆ。对着已经认识的护士，我轻轻地点头打招呼。然后走廊看到的是几位病人。刚好是早上体温检查结束的时候，正要和ｈｅｌｐｅｒ一起去散步吧。看着这些带着白色手环的人们，我突然想着。…７Ｆ的人们大概可以分成２种类吧？有人像是已经领悟似地总是保持冷静，有人则一直忙着做着某些事情…「没问题的，我会扶着你的」「这个嘛～等天色比较昏暗的时候，再去中庭吧」「嗯，可以喔」「…不要让我们遭受承担不起的考验…」「那个…」「濑津美…」「你总是那样祈祷吗？」「嗯，因为为了别人而祈祷是很不错的事情呢」「…为了自己不行吗？」「这…」千寻似乎不知该如何回答。回我的话只有这样。平常温柔的表情也消失了。第一次看到千寻这样…露出困扰的表情。叩叩，咖叽ＶＯ＃１５：半分祈&quot;「哇哇」「不要动啦」「虽然你这样说，可是很痒嘛」７Ｆ洋式浴室。今天是一周２次的洗澡日。「连我都湿透了」「对不起」「哈哈，没关系喔，姊姊也顺便淋浴吧」即使说宽广，也只是比一般家庭的浴室稍微大一点的程度。二个人进入浴池后，有点紧紧的。「还没好？」「还没。再一下下头发就洗好了」「好」「接着是姬子理发店喔」打开垃圾袋的开口，让她的头通过那里，并让她座在椅子上。要是没有风的话，有时候也会到屋顶剪，不过大部分是在病房里剪头发。…我们ｈｅｌｐｅｒ…有时候会变成园艺家和清洁工…有时候会变成理发师。咖嚓咖擦…「如何？前面的头发也剪齐了喔」「那个，感觉有点怪怪的…」「？讨厌一直线地剪齐？」「不是这样，感觉太短了…」「真是的，很可爱不是吗，这样才像小孩子」「有点害羞」「那么，温度计给我吧」「好」「几度？」「６．２度，嗯，这样的话没问题呢」「那么，今天也在中庭吃冰淇淋？」「不，今天有别的预定」「…别的预定？」「首先，在这之前先」说着，把带来的纸袋打开，。今天有一半的目的是这个。「那个，是什么？」「我带来了新衣服给你喔」「？睡衣的话之前给过了喔…」「不是睡衣喔」我有点夸大似地，从袋子里拿出来给她看。再怎么说这也是花了我这个月一半的零用钱，挑了２小时才选出来的东西。「你看」「哇，是洋装」「如何？喜欢吗？」「嗯嗯」「那么，换好衣服后我们就走吧」「走是指，去外面吗？」「嗯，教堂喔」说着，帮她打开睡衣的钮扣。其实以前她说过想去教堂。「虽然，就这样穿着睡衣去也没关系」「不过，因为很难得」「嗯，姊姊，谢谢」炙热的阳光和蝉叫声。看来今天也会很热的样子。我们并排地走在这样的天空下。第一次走出了医院外。当然，即使她说想去更远的地方，我也没办法带她去。不…不只是我做不到…谁都做不到。所以能带她去的地方，只有附近的教堂而已…「谁都不在呢…」「在这时间是这样」她浮现出有点紧张的表情。即使是想着她的年纪，大概也是第一次来吧。「…在这里有神吗？」「嗯，有点难回答的问题呢…」严格来说，应该是为了赞扬神的神圣场所吧。至少我没办法回答出，在或者不在。「不过，这里的话魔法的效果就不同了对吧？」「哈哈，差不多是这种地方吧」然后我们前往祭坛献上祈祷。「呼…」「如何？已经好了吗？」「嗯」「那么回去吧，下次再带你来吧」「嗯，谢谢」然后，正要离开的时候，「姊姊…」「嗯？」「…希望神的恩惠和幸福降落在你身上…」「……………」「我也为姊姊施了魔法喔」这样说着，对我露出了平常开朗的表情。露出了没有任何的低沉，天真的笑容。…一定，连那句话的意思都不知道吧。不过，正因为这样更加地感到高兴。…然后，祈祷的另外一半是祈求能原谅自己…我能做到的只有买冰淇淋给她…所以很痛苦…☆变：数日后在正上方的太阳以及，吵杂的蝉叫声。持续着一如往常的夏日，没什么改变的夏日。…不过，有一天她有点变了。明明到现在为止都和我那么的亲近…不过从某天开始，和我保持起距离。叩叩，咖叽，「早」「嗯，早…」说完早安后，我坐在椅子上。然后，看着似乎已经吃完的餐盘后。「真是的，又留下那么多」「…对不起」、私避、从某天开始，变得几乎什么都不吃了。「不好好吃的话，不行喔」「可是，不想吃…」「呼～」「那么，去餐厅也可以喔？」「………………」对这提案也没回应。明明以前不是冰淇淋也很高兴地去的……不吃这一件事情。在７Ｆ是致命伤。和其他的楼层不同，在这里几乎不打真正的营养点滴。当然还是有包含少量的糖分在，不过基本上目的只是补充水份。就像是致命伤这句话一样…也就是和死联系。「那个，这样的话，转眼间就会慢慢变得虚弱喔」「…慢慢变得虚弱？」「没错，不吃的话身体受不了喔」「…那么，变虚弱之后呢？」「…」「身体在变得更虚弱后，会怎样？」「这…」□我说不出话来。在喉咙前把「死」这单字吞了下去。…本来，解说生和死也是教会的工作。支持这件事情也是我们的工作。…然后这里是７Ｆ。是和已经度过生的人，简单地解说着死的地方。不过…对着幼小的她…对著称不上充分地度过”生”的她……到底又有谁可以和她解说着死呢…「……………」「我会死吗？」「这…」…在此之后说不出话来。「只有这样回答的话，我听不懂，好好回答我」…虽然想说些什么…虽然我也知道正是这时候，不说些什么的话不行…明明应该也知道什么是温柔…明明是为了解说生和死的天主教徒……不过我…不知道该说什么。…又会怎么回答呢…&quot;ＶＯ＃１６：&quot;窗外是炙热的阳光。明明还是早上，就热到让人觉得今天也是真夏。从昨天晚上，就没和母亲见过面。正确来说，连我都快要哭了，感到非常的抱歉，没办法见她。…和姬子道歉吧。虽然很抱歉，不过不想再让母亲难过了…叩叩，「…濑津美，已经起来了吗？」…母亲？咖叽，母亲正准备要去工作。「…昨天抱歉了」「不会…」「那么这个，二个人一起吃吧」「…？」「小心地去吧」「可是…」「可以的，因为这是母亲自己思考出来的结果」「………………」「虽然你是我宝贵的女儿…」「不过我不可能成为你」虽然淡淡地说着，可是用着平常温柔的表情说着。「所以是母亲自己思考出来的…」「希望能尽可能地让濑津美笑着」「…母亲…」☆夏空我前往医院。手上的手提包放着二个便当。早上。不由得，在学校停了下来。今天小孩似乎还没来的样子。「………………」一如往常，我往单杠走去。然后，看了一下四周后，静静地把手伸出去，「…嗯…」把力量施加在手婉，尽全力地双脚悬空。一瞬间就好像漂浮在宇宙一样…身体转了一圈。…经过了１个月再次在单杠上转一圈。然后，从只是这样的高度下看到的世界…用着因为支持身体而开始震动的手，我所能看见的世界。…或许现在我也被当成日常的一部份，看起来并没什么不相称的感觉。…不过…这是欺骗。…并不是被『认同』…离开学校后，前往医院。她大概在等我吧，我急忙前往了她的身边。「…让你久等了」「还是停在后门的停车场」「…嗯，我知道了」我回答着，收下车钥匙。然后把姬子要我转交的话传达给她。「…她说这是最后一次…」「最后一次？姊姊这样说吗？」「嗯，要我传达给你」「这样…这样啊…」千寻寂寞似地，小声地自言自语着。「为什么是你呢…」这句话的背后是，对于自己被直接回避而感到不满…然后…感觉有点寂寞和哀伤。「…因为是温柔的人…」「…」「…千寻不同…」「…不同？」「没错，和我们不同…」「…不好意思，我不太了解是什么意思」「嗯…我也不太了解…」为什么会说出这样的话呢…详细的原因自己也不知道。不过现在…我感觉我也能了解姬子的心情。「不过，就算不同，我是她妹妹喔？」「是一起生活２０年的姊妹喔？」…如果…我是圣者的话……如果…我说的话…不是安慰也不是骗小孩的魔法………而是真正的魔法的话……☆画像文字…即将死去的人和被留下来的人。不管是怎样的亲友Ａｌｏｉｓｅ，都没办法成为Ｐａｔｒａｃｈｅ…迎接早上，富士山五合目。我们下了车，伸了大懒腰。☆五合目朝。五合目今日暑日。「濑津美…」「…你觉得在哪？」「是指什么？」「…神之类的」「………………」「不知道…你才是专家不是吗？」「…是呢，曾经是这样呢…」然后，想了一下后，「果然，是在那吧…」说着，仰望天空。一望无际的蔚蓝的夏空…「那么，走吧」姬子只说这样，往登山道走进。…虽然注意到了姬子也许会…不过，这行为本身已经和自杀一样。「…认真的？」「……………………」「不是禁忌吗…对天主教徒来说？」「…和”原”没关系」然后…停止脚步，回头看后，「抱歉呢，濑津美…」「有一句话…不说出来不畅快」「…对谁说？」「当然是对神抱怨」…抱怨？对神？认真的吗…「难道…这是最后的一件？」「嗯…这是最后的一件」「…最后一」姬子只告诉我这样，继续往登山道前进。太阳来到正上方，和标高没关系蝉还是一样吵杂。「比想象中的还辛苦呢」我们爬上登上道。走了一下休息，走了一下休息。这样重复着。有时候，即使被其他的登山者超越了，姬子还是以高的地方为目标，慢慢地爬上去。现在大概花了２小时，正要离开新六合目。「…没问题吧？」「不太舒服」如同所说的，喘得很激烈。就算在商店买的饮料和食物，是我拿的…或许是理所当然，不过姬子毕竟是７Ｆ的病人。不管看起来怎么有精神，不用坐轮椅，那也是因为还很年轻的关系，只是还没恶化而已。就算什么都不做，也是在死的范围，这是不会错的。「……………」「你那表情怎么了？」「要是有想说的话就清楚地说吧」「…回去吧」「……………」「…再说得坚定一点」「？」「命令我回去吧」「……………」「…给我…回去」「……………」「…还是没办法服从」然后，再次开始登山。…现在…我应该怎么做才好…没办法阻止她，只能就这样在旁边无助地看着她吗…「………………」「那么，我推着你…」所以我，在姬子背后推着她。让她不要输给陡立的斜坡。尽可能的让她轻松一点…自己能做的事情，只有这样。「住手，濑津美」「不要…」「连你身体状况都变差的话该怎么办」「我可没期望这样的事情发生」「那么…回去吧」「这……」一直重复着，这样的对答…姬子一步一步地往上方爬。突然停下脚步的那个时候…令人感到害怕。…那时候我到底…该怎么做才好…&quot;ＶＯ＃１８：”谁为”&quot;姬子终于停下脚步。…Ａｌｏｉｓｅ…「…洋装？」有着夏天风格，在白色的地方有着可爱的黄色向日葵。这是以前，说过好几次要买给我，我也蛮想要的东西。…车代姬子拿在手上的洋装，挂在窗口衣架上刚洗好的睡衣。…还有，现在正穿着的水手服。过去的日常证明，我所拥有的唯一一件睡衣以外的衣服……心…动摇着…我高兴地不由得想试穿看看。…不过，我停下了手。然后，再次放回箱子内，往更”适合”收下的人身边走去。叮，☆７Ｆ隔了数个月，来到这地方。走过护士工作场所旁边，寻找着她，不过哪里都找不到。然后，虽然是理所当然，不过在以前姬子的病房前，写上的是没看过的名字的牌子。我和坐在轮椅上的老婆婆轻轻地打声招呼后，离开了７Ｆ。回去的途中。引人注目的中庭。那里有着正零零落落开着花的水仙花。在其他的地方正化作荒野的这个季节，水仙独自开花的姿态，让人感到凛然之美。钟声响彻着。姬子的告别式后，再次来到这里。然后，向着正在寻找的人说话。「千寻…」「濑津美…」「好久不见呢，怎么来到这里了呢」「…因为在医院找不到你」「啊啊…因为已经没在做ｈｅｌｐｅｒ了」「在心情稍微冷静下来之前，休息一下」「对了怎么了？难不成是来祈祷的？」「不，不是这样…」「姊姊送给你的…礼物喔」「…」「虽然可能有点小…」「……………」「…这样，谢谢」「…千寻？」「…嗯，对不起呢」「其实，姊姊和我说了…」「…什么事情？」「也许…」「濑津美会这样和我说…」「…」「然后，那个时候…要我把这个交给你」☆白☆地图见…在床上展开的地图。有着国道，高速公路，很多不知道名字的道路。画出了都道府县数万分之一的广域图以及，三千分之一的详细城镇图。远感富士山、地图上１５ｃｍ距离。…归还了洋装…收到了地图…或许姬子…料想到了吧？我会选择”这个”…然后，地图夹着一封信。里面放着…１万圆钞票５张。以前，姬子看着地图，说只要有５万圆就可以去任何的地方…「这是让我，在最后都能笑的…」「…另一半魔法吧…」「…这样的我…在未来的某一天也能笑吗…」——End——最后这次非常感谢你下载ＳＴＡＧＥ－ＮＡＮＡＶＯＬ２５，「Ｎａｒｃｉｓｓｕ２」。在上一次的Ｎａｒｃｉｓｓｕ，是以尽可能的删除情报为主旨，这次也是稍微意识着这点制作了。只是，在这之后，也意识着一小段一小段的「间隔」这种感觉吧？比起游戏，比较像制作电影吧？※所以这次是尝试着以有语音自动拨放全画面为默认值的状态做出来的。对于总是用自动拨放的人来说，大概没什么特别不协调的感觉吧，不过对于ｃｌｉｃｋ派的人来说，大概会有点辛苦吧…说到这，姬子序章的部分，几乎都是由台词构成的，个人在可以完全取得间隔这部分，比较喜欢之前尝试作出来的ｄｒａｍａＣＤ吧。还有，ＢＧＭ停止的时候，虽然全部都是设定３秒渐逝，不过是不定时的。有没问题的时候，也有出问题的时候。为什么呢？因为这样，兼容性和错字漏字修正等等，打算要是有时间的话就更新？和追加，如果可以的话，请到时候再下载。无语音版的版本这次也大致上原封不动。★关于内容基本上和前作一样依照自己的喜好制作了。看过的人觉得有趣，无聊，意义不明等…我觉得不管是怎样的感受，对于那个人来说，这就是这作品的全部。身为作者的自己，只要能够让更多的人看到，就很高兴。如果…要是感受到什么的话，会更加的高兴。顺便一提这次的ｎａｒｕｋｉ２是符合「肉」的概念，旧ｎａｒｕｋｉ才是有「骨」的概念。虽然主和副的感觉也一样，不过至少Ｎａｒｃｉｓｓｕｓ是一开始先有旧ｎａｒｕｋｉ。所以，如果可以的话，２款都看的话，我会很高兴。个人认为延着时间排列，推荐２→１,顺着ｎａｒｕｋｉ的概念的话，无语音→有语音吧？☆关于矛盾从故事流程中，虽然没有本质性的矛盾，不过有一个感觉有点矛盾的地方。就是在ｎａｒｕｋｉ２的未来旧ｎａｒｕｋｉ中，濑津美几乎没有提到「姬子」这个名字，这里要是大家能想着只是没有特别表现出来的话，就好了。还有，关于为什么想制作ｎａｒｕｋｉ２…因为我想描写，虽然在旧ｎａｒｕｋｉ中没有描写到，不过其实濑津美周围也是被开朗又温柔的人们包围着。或是说，因为希望能这样。★关于内容２在所谓的娱乐性？或是说，在有不有趣这点，我觉得比前作还更朴实。然后…关于为什么明明是７Ｆ的人，却这样有精神？的部分如果大家可以就这样越过的话，就好了。祈祷之类的也是这样，以简单易懂为优先，在这里如果太拘泥现实的话，也会脱离主旨…☆反省点有几个，其中一个是姬子的语音。开朗的感觉，有着姊姊的样子酷酷的感觉，也充满着非常理想的印象，不过最后哭泣的地方，可能有点不协调。说具体一点…太可爱了（汗）这是收录时自己的失误。声优柳濑，抱歉了。★试着努力正因为类型是这样，所以担心会变成感动类型的游戏。说具体一点，这次试着努力避免从渐渐虚弱到死的描写，以及尽可能的不要发生读者的感情转移到登场角色身上，（虽然其实这些都是和真实性有关系的事情…）啊，并不是指感动类型的不行。只是，如果这部分表现太突出的话，就会很难看到，原本自己想写的，想传达的部分，所以尽可能的，控制着这部分而牵挂着这种感觉。嗯．虽然觉得比自己能力更高的人，即使踏入了这部分也能取得良好的平衡…自己这样子牵挂着，如果给你这种印象的话，我很抱歉。还是不熟练者。这是因为之前听到ｎａｒｕｋｉ的感想的时候，哭了这个感想意外多的关系，所以这次更加想把讯息以及故事上特殊化。虽然没办法表达的很好，像是不想把读者当成观众或是登场人物，只是，看着在那里的东西的存在…神？大概希望这样吧。☆关于终幕也只不过是从无数的可能性当中选一个来结尾而已。或许这也是我希望的结尾吧。自己因为想说写在这里的数行内容，而写了２５０００万字的本编。★关于宗教确保万一，先让我道歉。自己在这款作品中，并不打算否定天主教徒。虽然自己本身是无信教者，不过也不是什么宗教都否定的人。倒不如说，我尊敬着在基督教医院等等服务的人们。不过，在这不合理的世界中，面临到以人的力量没办法解决事情的时候，我觉得没有人会坚强到在内心想着”真没办法呢”。…如果真的有这样的人，那个人也已经不是人了。大概是已经领悟的仙人或是神吧？所以自己也不否定神的存在以及宗教的必要性。就算自己是无信教者。沙丁鱼的头和基督教的血，就算在他人眼中看起来是很像笨蛋的事情…不过我觉得对当事人来说，这些都是神圣的行为。我认为不应该轻率地因为价值观不同而冒犯他们。☆”为了谁”这是在本篇中也出现过很多次的问题，答案到底是什么呢…我想一定每个人都有各自不同的答案，大概，这一些全部也都是正解。只是，我自己觉得这是为了「自己」。全部都不是为了别人，而是为了自己本身，这种感觉。不过，那个组成自己本身的东西已经不是自己。我觉得在自己的里面被「自己以外」所占有。在自己心中的是永远活下去的别人。如同这样，正因为在别人心中，才能感受到自己的存在。我觉得为了谁之类的，有着活过的证明，差不多就是这种东西吧。★关系者各位这次也获得了很多人的协助。担任原画的ＧｏｔｏＰ。熟识的朋友和第一次麻烦的各位音乐制作者们。在百忙的行程抽空录音的声优。录音室的各位。其他还有帮忙测试的人，支持服务器的网站，制作翻译版的各海外网站，在情报站给予支持的的各位。还有，尽管是在奋斗中的，也协助我设计和系统，分割声音的ＣＯＴＴＯＮ的大家。感谢你们陪着我这个兴趣（＿＿）ｍ对了，这次也勉强完成了，其实有想要的插画集，只有这个不是ＧｏｔｏＰ的原画＞道歉哭泣的姬子和濑津美衣服插画这次是司Ｙｕｕｋｉ，优花的插画是Ｋｙａｒｕｍｉｘｉ。☆未来之类堆积了很多要做的事情。尽快地又回到工作上。总之以现在的预定，已经安排好从以前开始就不断延期顾客类型的企划跟剧本了。大概２个？（让关系者等了这么久非常抱歉）还有像是小说？的东西也有可能。不过，因为大概不管是怎个，都不是能轰动整个酒吧的规模，如果那某处看到的话，也请你能在阅读ｍ（＿＿）ｍ嗯，其实还是想继续制作ｐｃ游戏…不过兼任监督的能力有点勉强，像是１个人担任这感觉吧。要是有一天还有机会的话。因为这样，大概今年一年，首先会先把堆积的预定先消化完，关于同人活动和电影方面，是在这些事情的空闲时间才做，这种感觉吧。那么，感谢大家能阅读到这里！２００７年５月ＳＴＡＧＥ－ＮＡＮＡ片冈Ｔｏｍｏ</code></pre>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> galgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《水仙》全家桶介绍</title>
      <link href="/2024/06/03/%E3%80%8A%E6%B0%B4%E4%BB%99%E3%80%8B%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/06/03/%E3%80%8A%E6%B0%B4%E4%BB%99%E3%80%8B%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>这篇文章写写我最喜欢的《水仙》(Narcissu)系列，很多人只知道水仙第一部和第二部，其实这一系列作品挺多的。</p><h1>水仙1:濑津美的故事</h1>这部作品的文字很奇怪，一般作品写什么主角死亡啦、刀子啦，都习惯进行大量的渲染。比如《生命的备件》、龙次和惠璃在樱花树下死去、让很多玩家破防，而《水仙》的语句很平淡、直白，基本上没有掺杂作者一丝的主观情感、作者更像是以一个路人的身份、客观地讲述这件事情。全程玩下来、你会有种“欲哭无泪”的感觉，故事很悲伤、但你哭不出来。片冈智对于死亡的描写、很平淡，故事中的生死不是那种轰轰烈烈地、感情爆发的桥段，而是很质朴、很平淡。再配上游戏里神级郁系风格音乐、氛围感十分出色。 <h1>水仙2:姬子的故事</h1>第一部作品给我带来了很深的思考，接下来玩了第二部，写的是姬子的故事。这一部将《水仙》系列的主题更深刻鲜明地点出来:传承。第一部里已经有出现:濑津美将手环、照片留给了阿东优，阿东优也会传承下去七楼的规则；这一部则是更明晰地点出来，姬子将汽车传承给了好友优花，将一些意志和精神传给了濑津美。一个天主教徒的生命、在那一年结束了。 <h1>水仙:如果还有明天</h1>这个是PSP版本的水仙，包含了前两部的所有内容，另外补充了一些细节和设定、多了一些插画，以及片冈老大写的最终章。补全了很多细节和设定<h1>水仙3:四位脚本家共同撰写</h1>本以为《水仙》系列已经结束，后来知道还有《水仙3》，《水仙3》是由四个脚本家写的，故事有四个篇章。其中我觉得不错的是《死神的新娘》和《小小的伊丽丝》。<p>《死神的新娘》是由年轻的脚本家ごぉ写的，这个故事我的感触还是很深的，主角是医生高原英治，而我自己在医学院上学、对其中感受更深刻些。医生的疲劳、治疗的无力、死亡与爱情对撞产生的悲剧，这一篇章写的着实不错。</p><p>《小小的伊丽丝》是我们的片冈老大写的，世界观上独立于前几部作品、讲的是中世纪亡国公主与某国战士的故事，其中对于人性和心理的描写十分细致、优秀。其他两个篇章:《-Ci-向着卷云的高度》和《弥赛亚》，我个人不是很喜欢。</p><p>此外《水仙》系列还有两部外传:片冈智写的《1980》和《1993》，算是故事的现实来源和灵感，也是十分不错的，推荐各位去玩玩，这里不多讲。 </p><h1>水仙zero:7楼诞生之前</h1>下一部作品是《Narcissu:zero》,包含在《水仙十周年纪念版》中这作没汉化、我是啃的英语生肉玩的，这作和《死神的新娘》比较像，是从医生和病人的角度来讲述故事的，推荐医学牲们去玩玩。玩完这部、我最大的感受就是学医之路的不容易、我更不想在医学院呆了),这作时间线很靠前、能追溯到二十世纪六十年代，不过这作我玩的时候比较心不在焉、英语生肉也难啃，印象也不是特别深刻,不打算多讲。 <h1>水仙Sumire:新角色Akari和Sumire的故事</h1>下一部作品是《Narcissu:Sumire》,这部作品也是没汉化，不过我还是很喜欢这部作品的。作品分为Akari篇和Sumire篇，说实话Akari篇我没看太懂，讲述了女主角Akari小时候的故事，故事开头很魔幻、超自然，出现了灵魂入侵之类的桥段、我没看太懂。中间最主要的部分写八岁的女主Akari和朋友健二的故事。不过我觉得Akari篇的主要作用是为Sumire篇铺垫、顺便讲清女主之一Akari的身世。<p>关于Akari可能会有人比较迷，只需要知道这些就行:Akari的爸爸是个公司老板、他娶了个后妈。Akari不喜欢后妈、于是假装有嗜睡症成功住院。后来爸爸受不了工作压力、跳楼自杀了，后妈也被爸爸家里的亲戚赶出家门。Akari爸爸的公司貌似是“世袭制”，Akari成为年龄较小的公司负责人之一、但很有钱。 </p><p>我个人比较喜欢Sumire篇，我觉得Sumire篇更像是给抑郁症患者写的故事，因为Sumire和我、身边的很多人太像了。Sumire性格内向、不善于表达自己真正的想法、展示真正的自己，在班级里受到冷落，于是厌学(讨厌去学校)，最先家里人一直批评她不上学、乱找事,后来才知道Sumire患上了不治之症。玩的时候我有强烈的共鸣、因为片冈笔下的Sumire的心理描写部分、和我自己很像，似乎把我自己的心理活动写游戏里了。</p><p>这一篇章有两个桥段、我印象十分深刻，一个桥段是，Sumire在医院里对父母说“对不起”，Akari告诉她:不要对亲人说“对不起”，应该是“谢谢”;我就想我自己总是对父母、亲友、身边人抱有愧疚之情、活在负罪感中，Akari的话不光是在告诉Sumire，也是在告诉我自己。另一个桥段，Sumire哭着说，每当面临选择时、她都选择了错误的选项、回过头来已经不知身处何处，二十多年的人生、什么都没做就要死去了。</p><p>我玩的时候就想，我这十多年的人生、也是选择了错误的方向、倒不如说没有选择人生的机会。在陌生的大学、陌生的专业过着痛苦的生活、明明什么都没干就已经很痛苦了。感觉和Sumire能形成强烈的共鸣、玩起来很有代入感、很投入。这作玩完后心情还是很沉重、郁闷的。 </p><h1>系列的延续:猫猫社十五周年纪念作《すみれ》</h1> 《水仙》系列已经结束、然而片冈智在2015年创作了另一部游戏《すみれ》，这作玩起来更是全程躺枪、男主是Akari篇章里的健二，在很多方面与我相似。这作在时间线上承接Narcissu:Sumire，发生在Sumire死去两年后、濑津美和阿东优逃离七楼的2005年。<p>很多gal男主、塑造的都是“现充形象”，经常在网上看见“我简直是有地将臣…”然而《すみれ》塑造的很现实：曾经很喜欢二次元、如今在公司当牛马的社畜、性格偏向社会与现实;普通的上班族、刚入社会当牛马的小青年，只有晚上回家才打开电脑上网吹水冲浪。我感觉这就是我以后的人生——假如我毕业找到了工作。简而言之，就是“社畜牛马生活”。</p><p>所以，不要再幻想自己成为什么有地将臣、保科柊史了，健二才是你的未来。</p><p>这作已经脱离了“7楼的故事”，“水仙味儿”比较淡、压抑程度有所下降，这作没汉化(估计这辈子都没汉化)，我在啃日语生肉、还没啃完。不过音乐是真神！喜欢《水仙》的友友可以玩玩。 </p><h1>同世界观作品:《ねこねこファンディスク4》</h1>这作算是《水仙》系列的结尾，把鼠标移动到邮筒附近，Akari会出现。点击它可以开启。自《すみれ》的故事过了一年，明里(Akari)去找了初芝堇，带她去《水仙》里的医院浇花。开上姬子的汽车，带着初芝堇做了好多追忆《水仙sumire》里高坂堇的事情。<h1>1980和1993</h1>片冈智此外创作了两篇短篇故事，《1980》是水仙1st故事的来源，讲了濑津美原型人物——S美的故事，是片冈中学经历、真实事件;《1993》写了片冈当保安那段时间的故事。两个都是真实事件。<hr><p>码了这么多字，我也不想码了。有人问:你为什么喜欢《水仙》?我想，这就是强烈的共鸣吧。值得一提的是、我真正喜欢《水仙》、把它放在心中galgame的首位，是抑郁焦虑病发后。之前我就觉得、这只是个悲伤又深刻的作品，后来觉得这是个有强烈共鸣的好作品。 一般的作品，是“玩家选择游戏”，但《水仙》则是“游戏选择玩家”了，因为现充、小鬼绝对玩不来这种作品。所以我不担心《水仙》出圈，作品氛围是真的压抑，而且《水仙》本身还是稍微冷门的。 线虫绝对不会玩《水仙》、因为这部作品不适合他，大概如此。 </p>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【1000+TB】Alist网盘</title>
      <link href="/2024/01/24/%E3%80%901000-TB%E3%80%91Alist%E7%BD%91%E7%9B%98/"/>
      <url>/2024/01/24/%E3%80%901000-TB%E3%80%91Alist%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<p>写下这篇文章是因为，由于我服务器配置太垃圾，亚托莉机器人和Alist网盘无法同时运行，于是我把自己整理的几千TB的Alist网盘备份文件发出去（给别人部署吧！）。我在b站发了个Alist网盘视频b站把我评论吞了，有人循着来到这个网站（因为隔壁“樱韵”几乎摆烂了，偷偷发过一个终点合集）。在这里也分享一下。</p><p><font color=red><a href="https://wwci.lanzouo.com/iv3cr1lzvc2d">https://wwci.lanzouo.com/iv3cr1lzvc2d</a></font></p><hr><p>本Alist网盘大概有1000+TB资源，可以在线看番剧、下载游戏、下载学习资料等等…搭建用时三分钟搞定，简单明白，让你拥有一个自己的资源库</p><p>群376757863在招新人，有问题也可以问。下载后有个教程文档带有图片的</p><hr><p>教程（这个不用看，看下载后的压缩包里的“教程”文档）：<br>1.首先解压文件夹拿到文件</p><p>2.接下来在该文件路径输入“cmd”</p><p>3.然后按enter键回车，在命令提示符输入alist server，如果有跳出的弹窗一律允许即可。注意看红色的地方，会显示出你的密码。每个人的密码都不一样，不要照抄图片上的。最下边那一行是用的端口（默认都是5244）。</p><p>4.接下来打开电脑上的浏览器，输入“127.0.0.1:5244”，会显示下图。用户名填admin,密码填alist提示给你的密码（上边画红圈的地方）。点击登录</p><p>5.接下来看图片最下边，有个“管理”字样，点进去</p><p>6.找到“备份&amp;恢复”，点击“恢复”，选择解压出来的文件里的json文件就好了。报错不用管，等待恢复完成（如果恢复的慢，多点几次恢复试试就好，有报错不用管）</p><p>7.然后是这样的一幅画面：</p><p>再去访问127.0.0.1:5244，一切恢复好了</p><p>二、搜索功能<br>再次进入“管理”界面，点击“索引”</p><p>搜索索引选“数据库（非全文搜索）”，点击“构建索引”或者“重建索引”，静等索引构建（我的构建了两小时多…）<br>最后测试一下下载速度，随便选个文件夹下载，可以看到速度有6MB每秒，还是可以的</p><p>每个文件夹也附有说明和分类：</p><p>还可以看番剧：</p><p>嫌背景图太挡可以全屏，也可以在管理面板把自定义头部删除，保存</p><p>到这里就结束了，大概有几千TB资源（或者更多）。如果有问题可以加群376757863或者869408627交流，群内也会不定期分享资源。欢迎来玩！</p>]]></content>
      
      
      <categories>
          
          <category> 科技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科技 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【游戏推荐，柚子社】夏空彼方</title>
      <link href="/2023/12/24/%E3%80%90%E6%B8%B8%E6%88%8F%E6%8E%A8%E8%8D%90%EF%BC%8C%E6%9F%9A%E5%AD%90%E7%A4%BE%E3%80%91%E5%A4%8F%E7%A9%BA%E5%BD%BC%E6%96%B9/"/>
      <url>/2023/12/24/%E3%80%90%E6%B8%B8%E6%88%8F%E6%8E%A8%E8%8D%90%EF%BC%8C%E6%9F%9A%E5%AD%90%E7%A4%BE%E3%80%91%E5%A4%8F%E7%A9%BA%E5%BD%BC%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<p>写于2023.12.24</p><h1>前言</h1>提起柚子社，大多数人会想到什么？是“面硬加咸蔬菜加倍蒜末和油多多”还是“Ciallo～(∠・ω< )⌒★”，亦或是请看我0721吧！《千恋万花》、《魔女的夜宴》等作品出圈、柚子厨数量大增<p>玩家对于柚子社的印象，普遍是纯爱无牛、废萌、搞笑、甜度满满。没有黑深残的剧情、搞笑温馨的日常，朝武芳乃、绫地宁宁、在原七海、丛雨等人气角色，深得柚子厨的喜欢，很多新人入坑作品也是柚子社的作品。</p><p>前几天在一个群里，一名群友说要玩完柚子社全部作品，因为他太喜欢0721了(bushi,于是有人提出玩《夏空彼方》,于是喜欢0721的群友下载了这份游戏并开始游玩，玩完后表示：这是……柚子社的作品吗?</p><hr><h1>柚子社特殊的一部作品</h1><h2>一.意义上的特殊性</h2>《夏空彼方》是柚子社第三部作品，于2008年05月23日发行。这部作品与之后的《千恋*万花》、《riddle joker》等废萌向作品不同，算是柚子社唯一一部剧情作、催泪作——向来主打废萌的柚子社居然也会写刀子！制作这部作品时的柚子社，正处于探索阶段，上一部作品《EXE》因为剧情混乱和ntr元素乱入（柚子社也会写ntr!!）,销量不佳成为“黑历史”，这部作品柚子社下了一定的功夫，在日本销量平平，可在国内小有名气。虽然存在着一些小瑕疵，不过并不影响作品本身。游戏中的一些设定，似乎给之后的作品留下了启发（《夏日口袋》会不会参考了这部？）。尤其是《夏空彼方》神ED，曲子让我循环千遍（这是柚子社的曲子？！！）<p>这部作品在柚子社的历史上具有重要意义，它为柚子社提供了一种可能：柚子社是可以制作刀子作的。可是现实是销量平平，大部分人喜欢废萌，只能说是现实的骨感，《夏空彼方》的下一部作品《天神乱漫》，在销量上明显比《夏空彼方》高出很多。如今柚子社在废萌的道路上一去不复返，柚子社，可能再也不会制作、也制作不出第二个《夏空彼方》了。</p><hr><h2>流程的特殊性</h2>纵观柚子社的大部分作品，女主数量总是在4个以上，而这部作品只有3位可攻略女主。拿《千恋*万花》举例，柚子社的常用套路：接主线任务（消灭祟神）、与各女主见面、进入支线、任务完成、恩恩爱爱的H生活。而这部作品比较特殊，游戏只有三位女主，根本没有主线任务，在逛庙会时有三个选项，直接进入三条支线。而且进入茅羽耶线，沙沙罗不会出现；进入沙沙罗线，茅羽耶不会出现；进入由比子线，前两位女主都不会出现。攻略柚子社女主需要几天？本作告诉玩家:三天足矣!这个也经常被玩家吐槽，认可就好了***<h2>题材的特殊性</h2>大多柚子社的作品，主要是校园恋爱（如《千恋*万花》、《魔女的夜宴》、《riddle joker》，男女主都得上学），而本作终于没有学校啦！是罕见的“亲情”题材<font color=red>（柚子社唯一一部不用上学的作品）</font>***<h1>剧情简介（微剧透）</h1>故事以长年夏天的热带岛屿为舞台,讲述每年12月到亲戚家旅馆打工，而来到日本唯一的热带岛屿“塔弦岛”的主人公朝仓壮太。与表妹三好由比子，刚从外岛搬过来不久的上坂茅羽耶，神秘少女七条沙沙罗相遇。随着时间的流逝，隐藏在这个岛上的秘密也慢慢浮出了水面。<p>整部作品，关键词有五个：悬念、解开秘密、亲情、催泪、执著的爱情。<br>游戏一共有三条线路，在烟火大会玩家和朋友走失时，会面临三个选项，每一个选项是一个线路。其中茅羽耶线有两个结局，第二个结局在二周目时才能解锁</p><h2>上坂茅羽耶线</h2><p>上坂茅羽耶是这部游戏的C位女主，这条线路是游戏的主要线路。整体游玩下来体验感优秀，音乐恰到好处，剧情感人有吸引力，如果说不足的话，女主塑造上可以再多下些功夫，另外就是著名的“三天攻略女主”（属实有些离谱）。</p><p>上坂茅羽耶线所传达的主题，我概括为”执著、永不放弃的爱”。一是父母与女儿的爱，茅羽耶为爸爸始终如一做礼物、父母为女儿执着的努力（不过多剧透）；二是男主与女主的永恒不变的爱，朝仓壮太始终未放弃过上坂茅羽耶，面临了很多困难、有物理上的，也有精神上的，却始终如一。而茅羽耶也始终爱着朝仓壮太；第三种爱，是“祈愿之爱”，史绪夫人为实现茅羽耶和壮太的愿望，不惜折掉寿命，而茅羽耶希望接过史绪夫人的责任，希望史绪能够利用好生命休息。推完之后，留下的不光是伤感的BGM，还有感动的泪水和无尽的回味。</p><hr><h2>七条沙沙罗线</h2><p>七条沙沙罗线的主题是“亲情”，在亲情与大义面前，是选择亲情、生命，还是所谓的大义？这条线路，彰显出的是人性善恶，看到大反派的嘴脸，玩起来让人血压飙升，而看到正派角色的结局，看到善被恶所伤，让人控制不住眼泪。沙沙罗与母亲吐露真心、化解误会，刻骨铭心的刀子，由亲情来创造。</p><hr><h2>三好由比子线</h2><p>这条线路和前两条比起来，略显得平庸，但整体演出效果依旧不错，主题是“克服阴影”，之前的回忆、产生的阴影（不太好多剧透），整体上少了些奇幻的元素，保留了悬疑元素，整体评价不错，值得一玩（不太好剧透于是不多写）</p><hr><h1>总评</h1>总体来说，《夏空彼方》的三条线路都不错。在音乐方面，我觉得在柚子社所有作品中可以排前三；剧情完整，还是很吸引我的，不过一些设定上的说明不是特别清晰，整体不错；人物塑造上，男主的形象我觉得塑造的很成功（我愿称之为最深情的柚子男主），女主上略有欠缺。游戏的演出效果很棒，BGM插入的恰到好处，把握住了玩家的情绪变化。***玩完《夏空彼方》后，心里感到的，更多的是一种无名的空虚和对剧情的反思、以及产生的伤感。也让我更全面地认识了柚子社，柚子社≠废萌会社——至少曾经不是的。<p>对于柚子厨来说，这部作品很值得一玩，或许可以刷新一下对柚子社的认知，更全面地了解柚子社。<br>我始终怀念12月的那个盛夏之岛、和朋友们欢度假期、经历一段刻骨铭心的悲伤、浪漫的爱恋。或许，这是柚子社最后的柔情与浪漫。</p>]]></content>
      
      
      <categories>
          
          <category> ACGN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gal杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
